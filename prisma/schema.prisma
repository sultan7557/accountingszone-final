// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id                String    @id @default(cuid())
  role              String     @default("user")
  username          String    @unique
  email             String    @unique
  password          String
  verifyCode        String?
  verifyCodeExpiry  DateTime?
  isVerified        Boolean   @default(false)
  isAcceptingMessages Boolean @default(true)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model ContactMessage {
  id        String   @id @default(cuid())
  status    String   @default("new")
  name      String
  email     String
  phone     String
  company   String
  reason    String
  subject   String
  message   String
  createdAt DateTime @default(now())
}

model ConsultationMessage {
  id        String   @id @default(cuid())
  status    String   @default("new")
  name      String
  email     String
  phone     String
  city      String
  country   String
  state     String
  message   String   @default("Consultation Request")
  createdAt DateTime @default(now())
}


//For the cards section 
model TaxScenario {
  id          Int     @id @default(autoincrement())
  description String
  income      Float
  deductions  Float
  taxRate     Float
}


model ClientInformationForm {
  id                          String   @id @default(cuid())
  status                      String    @default("pending")
  fullName                    String
  businessName                String?
  phoneNumber                 String
  email                       String
  address                     String
  preferredContactMethod      String
  
  businessType                String?
  industryCategory            String?
  taxIdentificationNumber     String?
  businessRegistrationNumber  String?
  annualRevenueRange          String?
  numberOfEmployees           Int?
  
  servicesRequired            String[]
  frequencyOfService          String
  specificGoalsOrNeeds        String
  currentAccountingSoftware   String?
  preferredCommunicationSchedule String?
  
  bankAccountDetails          String?
  creditLimit                 String?
  billingAddress              String?
  
  businessRegistrationCertificate String?
  taxIdentificationCertificate String?
  financialStatements         String?
  governmentIssuedID          String?
  
  declaration                 Boolean
  consent                     Boolean
  signature                   String
  date                        String
  createdAt                   DateTime @default(now())
}

model PartnerApplicationForm {
  id                          String   @id @default(cuid())
  status                      String    @default("pending")
  businessName                String
  contactPerson               String
  businessAddress             String
  phoneNumber                 String
  email                       String
  website                     String?
  
  typeOfBusiness              String
  industryCategory            String
  yearsInOperation            Int
  businessRegistrationNumber  String
  taxIdentificationNumber     String
  
  reasonForPartnership        String
  servicesOrProductsOffered   String
  geographicalCoverage        String
  preferredCollaborationType  String
  previousPartnerships        String?
  
  annualRevenue               String?
  businessLicensesOrPermits   String
  insuranceCoverage           String
  
  businessRegistrationCertificate String
  taxIdentificationCertificate String?
  portfolioOrReferences       String?
  
  declaration                 Boolean
  consent                     Boolean
  signature                   String
  date                        String
  createdAt                   DateTime @default(now())
}

model TaxFilingForm {
  id                String   @id @default(cuid())
  status            String   @default("pending")
  name              String
  birthday          String
  phoneNumber       String
  email             String
  facebookName      String?
  instagramName     String?
  taxYear           String
  cashAdvance       String
  firstName         String
  middleName        String?
  lastName          String
  ssn               String
  streetAddress     String
  addressLine2      String?
  city              String
  state             String
  zipCode           String
  occupation        String?
  refundOption      String
  createdAt         DateTime @default(now())
}