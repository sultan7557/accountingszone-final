{"version":3,"file":"pane.js","sources":["../../src/structure/components/DocTitle.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.styles.tsx","../../src/structure/components/paneItem/PaneItemPreview.tsx","../../src/structure/components/paneRouter/BackLink.tsx","../../src/structure/components/pane/usePaneLayout.ts","../../src/structure/components/paneRouter/ChildLink.tsx","../../src/structure/components/paneRouter/ParameterizedLink.tsx","../../src/structure/components/paneRouter/ReferenceChildLink.tsx","../../src/structure/components/paneRouter/usePaneRouter.ts","../../src/structure/components/confirmDeleteDialog/ReferencePreviewLink.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.tsx","../../src/structure/components/confirmDeleteDialog/useReferringDocuments.ts","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialog.tsx","../../src/structure/components/confirmDeleteDialog/index.tsx","../../src/structure/components/Delay.tsx","../../src/structure/components/pane/constants.ts","../../src/structure/components/pane/PaneDivider.tsx","../../src/structure/components/pane/Pane.tsx","../../src/structure/components/pane/PaneContent.styles.tsx","../../src/structure/components/pane/usePane.ts","../../src/structure/components/pane/PaneContent.tsx","../../src/structure/util/toLowerCaseNoSpaces.tsx","../../src/structure/components/pane/PaneMenuButtonItem.tsx","../../src/structure/components/pane/PaneContextMenuButton.tsx","../../src/structure/components/pane/PaneFooter.styles.tsx","../../src/structure/components/pane/PaneFooter.tsx","../../src/structure/components/pane/PaneHeader.styles.tsx","../../src/structure/components/pane/PaneHeader.tsx","../../src/structure/components/pane/PaneHeaderActionButton.tsx","../../src/structure/components/pane/PaneLayout.styles.tsx","../../src/structure/components/pane/helpers/_calcPaneResize.ts","../../src/structure/components/pane/helpers/_getDOMPath.ts","../../src/structure/components/pane/helpers/_sortElements.ts","../../src/structure/components/pane/paneLayoutController.ts","../../src/structure/components/pane/PaneLayout.tsx","../../src/structure/menuNodes.ts","../../src/structure/components/IntentButton.tsx","../../src/structure/components/paneHeaderActions/InsufficientPermissionsMessageTooltip.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderCreateButton.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderActions.tsx","../../src/structure/components/MissingSchemaType.tsx","../../src/structure/components/paneItem/PaneItem.tsx","../../src/structure/components/RenderActionCollectionState.tsx","../../src/structure/components/RenderBadgeCollectionState.tsx","../../src/structure/diffView/hooks/useCreatePathSyncChannel.ts","../../src/structure/diffView/constants.ts","../../src/structure/diffView/hooks/useDiffViewRouter.ts","../../src/structure/diffView/types/diffViewMode.ts","../../src/structure/diffView/hooks/useDiffViewState.ts","../../src/structure/diffView/hooks/useScrollMirror.tsx","../../src/structure/diffView/versionMode/components/VersionModeHeader.tsx","../../src/structure/diffView/components/DialogLayout.ts","../../src/structure/panes/document/document-layout/pickDocumentLayoutComponent.ts","../../src/structure/diffView/hooks/usePathSyncChannel.ts","../../src/structure/diffView/components/Scroller.ts","../../src/structure/diffView/components/DiffViewPane.tsx","../../src/structure/diffView/components/EditReferenceLinkComponent.tsx","../../src/structure/diffView/components/DiffView.tsx","../../src/structure/diffView/plugin/DiffViewDocumentLayout.tsx","../../src/structure/panes/error/ErrorPane.tsx","../../src/structure/panes/loading/getWaitMessages.ts","../../src/structure/panes/loading/LoadingPane.tsx","../../src/structure/panes/document/useDocumentPane.tsx","../../src/structure/panes/document/comments/CommentsWrapper.tsx","../../src/structure/hooks/useFilteredReleases.ts","../../src/structure/hooks/useDocumentIdStack.ts","../../src/structure/useStructureTool.ts","../../src/structure/panes/document/constants.ts","../../src/structure/panes/document/DocumentInspectorMenuItemsResolver.tsx","../../src/structure/panes/document/useDocumentTitle.ts","../../src/structure/panes/document/DocumentOperationResults.tsx","../../src/structure/components/paneItem/helpers.tsx","../../src/structure/panes/document/documentInspector/DocumentInspectorHeader.tsx","../../src/structure/panes/document/documentInspector/DocumentInspectorPanel.tsx","../../src/structure/useStructureToolSetting.ts","../../src/structure/panes/document/inspectDialog/constants.ts","../../src/structure/panes/document/inspectDialog/helpers.ts","../../src/structure/panes/document/inspectDialog/InspectDialog.styles.tsx","../../src/structure/panes/document/inspectDialog/Search.tsx","../../src/structure/panes/document/inspectDialog/InspectDialog.tsx","../../src/structure/panes/document/documentPanel/banners/Banner.tsx","../../src/structure/panes/document/documentPanel/banners/DeletedDocumentBanners.tsx","../../src/structure/panes/document/documentPanel/banners/DeprecatedDocumentTypeBanner.tsx","../../src/structure/components/requestPermissionDialog/__telemetry__/RequestPermissionDialog.telemetry.ts","../../src/structure/components/requestPermissionDialog/RequestPermissionDialog.tsx","../../src/structure/components/requestPermissionDialog/useRoleRequestsStatus.tsx","../../src/structure/panes/document/documentPanel/banners/InsufficientPermissionBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ReferenceChangedBanner.tsx","../../src/structure/panes/document/documentPanel/documentViews/useConditionalToast.ts","../../src/structure/panes/document/documentPanel/banners/AddToReleaseBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ArchivedReleaseDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/banners/CreateLinkedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/__telemetry__/DraftLiveEditBanner.telemetry.ts","../../src/structure/panes/document/documentPanel/banners/DraftLiveEditBanner.tsx","../../src/structure/panes/document/documentPanel/banners/OpenReleaseToEditBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ScheduledReleaseBanner.tsx","../../src/structure/panes/document/documentPanel/banners/UnpublishedDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormHeader.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormView.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTabs.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTitle.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelSubHeader.tsx","../../src/structure/panes/document/documentPanel/DocumentPanel.tsx","../../src/structure/constants.ts","../../src/structure/panes/document/statusBar/dialogs/constants.ts","../../src/structure/panes/document/statusBar/dialogs/ConfirmDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/ModalDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/PopoverDialog.tsx","../../src/structure/panes/document/statusBar/ActionStateDialog.tsx","../../src/structure/panes/document/statusBar/ActionMenuButton.tsx","../../src/structure/documentActions/DeleteAction.tsx","../../src/structure/documentActions/DiscardChangesAction.tsx","../../src/structure/documentActions/DuplicateAction.tsx","../../src/structure/documentActions/HistoryRestoreAction.tsx","../../src/structure/documentActions/__telemetry__/documentActions.telemetry.ts","../../src/structure/documentActions/PublishAction.tsx","../../src/structure/documentActions/UnpublishAction.tsx","../../src/structure/panes/document/statusBar/DocumentStatusBarActions.tsx","../../src/structure/panes/document/documentPanel/header/perspective/DocumentPerspectiveList.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelHeader.tsx","../../src/structure/components/spacerButton/SpacerButton.tsx","../../src/structure/panes/document/statusBar/DocumentBadges.tsx","../../src/structure/panes/document/timeline/constants.ts","../../src/structure/panes/document/timeline/helpers.ts","../../src/structure/panes/document/timeline/expandableTimelineItemButton.tsx","../../src/structure/panes/document/timeline/timeline.styled.tsx","../../src/structure/panes/document/timeline/timelineI18n.ts","../../src/structure/panes/document/timeline/userAvatarStack.tsx","../../src/structure/panes/document/timeline/timelineItem.tsx","../../src/structure/panes/document/timeline/utils.ts","../../src/structure/panes/document/timeline/timeline.tsx","../../src/structure/panes/document/timeline/TimelineError.tsx","../../src/structure/panes/document/timeline/timelineMenu.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/AnimatedStatusIcon.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/DocumentStatusPulse.tsx","../../src/structure/panes/document/statusBar/DocumentStatusLine.tsx","../../src/structure/panes/document/statusBar/RevisionStatusLine.tsx","../../src/structure/panes/document/statusBar/useResizeObserver.ts","../../src/structure/panes/document/statusBar/DocumentStatusBar.tsx","../../src/structure/panes/document/keyboardShortcuts/DocumentActionShortcuts.tsx","../../src/structure/panes/document/menuItems.ts","../../src/structure/panes/document/document-layout/DocumentLayoutError.tsx","../../src/structure/panes/document/document-layout/DocumentLayoutFooter.tsx","../../src/structure/panes/document/document-layout/DocumentLayout.tsx","../../src/structure/panes/document/document-layout/useDocumentLayoutComponent.ts","../../src/structure/panes/document/__telemetry__/documentPanes.telemetry.ts","../../src/structure/panes/document/getInitialValueTemplateOpts.ts","../../src/structure/panes/document/useDocumentPaneInitialValue.ts","../../src/structure/panes/document/useDocumentPaneInspector.ts","../../src/structure/panes/document/usePreviewUrl.ts","../../src/structure/panes/document/DocumentPaneProvider.tsx","../../src/structure/panes/document/DocumentEventsPane.tsx","../../src/structure/panes/document/DocumentPaneLegacyTimeline.tsx","../../src/structure/panes/document/DocumentPaneProviderWrapper.tsx","../../src/structure/panes/document/useResetHistoryParams.ts","../../src/structure/panes/document/DocumentPane.tsx","../../src/structure/panes/documentList/constants.ts","../../src/structure/panes/documentList/DocumentListPaneContent.tsx","../../src/structure/panes/documentList/helpers.ts","../../src/structure/panes/documentList/listenSearchQuery.ts","../../src/structure/panes/documentList/useDocumentList.ts","../../src/structure/panes/documentList/DocumentListPane.tsx","../../src/structure/panes/documentList/PaneHeader.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListSelect.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListProvider.tsx","../../src/structure/panes/documentList/sheetList/SheetListCell.tsx","../../src/structure/panes/documentList/sheetList/useDocumentSheetColumns.tsx","../../src/structure/panes/documentList/sheetList/ColumnsControl.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListFilter.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListHeader.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListPaginator.tsx","../../src/structure/panes/documentList/sheetList/useDocumentSheetListStore.ts","../../src/structure/panes/documentList/sheetList/useDocumentSheetList.ts","../../src/structure/panes/documentList/sheetList/DocumentSheetListPane.tsx","../../src/structure/panes/documentList/PaneContainer.tsx","../../src/structure/documentBadges/LiveEditBadge.ts","../../src/structure/getIntentState.ts","../../src/structure/panes/document/inspectors/changes/ChangesInspector.tsx","../../src/structure/panes/document/timeline/events/EventTimelineItem.tsx","../../src/structure/panes/document/timeline/events/PublishedEventMenu.tsx","../../src/structure/panes/document/timeline/events/EventsTimeline.tsx","../../src/structure/panes/document/timeline/events/EventsTimelineMenu.tsx","../../src/structure/panes/document/inspectors/changes/EventsInspector.tsx","../../src/structure/panes/document/inspectors/changes/EventsSelector.tsx","../../src/structure/panes/document/inspectors/changes/HistorySelector.tsx","../../src/structure/panes/document/inspectors/changes/ChangesTabs.tsx","../../src/structure/panes/document/inspectors/changes/index.ts","../../src/structure/panes/document/inspectors/validation/getPathTitles.ts","../../src/structure/panes/document/inspectors/validation/ValidationInspector.tsx","../../src/structure/panes/document/inspectors/validation/index.ts","../../src/structure/router.ts","../../src/structure/structureTool.ts"],"sourcesContent":["import {type SanityDocumentLike} from '@sanity/types'\nimport {unstable_useValuePreview as useValuePreview, useSchema, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nexport interface DocTitleProps {\n  document: SanityDocumentLike\n}\n\nexport function DocTitle(props: DocTitleProps) {\n  const {document: documentValue} = props\n  const schema = useSchema()\n  const schemaType = schema.get(documentValue._type)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const {error, value} = useValuePreview({\n    schemaType: schemaType!,\n    value: documentValue,\n  })\n\n  if (!schemaType) {\n    return <code>{t('doc-title.unknown-schema-type.text', {schemaType: documentValue._type})}</code>\n  }\n\n  if (error) {\n    return <>{t('doc-title.error.text', {errorMessage: error.message})}</>\n  }\n\n  return (\n    <>\n      {value?.title || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>{t('doc-title.fallback.text')}</span>\n      )}\n    </>\n  )\n}\n","import {InfoOutlineIcon} from '@sanity/icons'\nimport {Box, Flex, Inline, rem, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\nexport const ChevronWrapper = styled(Box)`\n  margin-left: auto;\n`\n\nexport const CrossDatasetReferencesDetails = styled.details`\n  flex: none;\n\n  &[open] ${ChevronWrapper} {\n    transform: rotate(180deg);\n  }\n`\n\nexport const CrossDatasetReferencesSummary = styled.summary`\n  list-style: none;\n\n  &::-webkit-details-marker {\n    display: none;\n  }\n`\n\nexport const Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 0 ${({theme}) => rem(theme.sanity.space[2])};\n  border-collapse: collapse;\n\n  th {\n    padding: ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  td {\n    padding: 0 ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  tr > *:last-child {\n    text-align: right;\n  }\n`\n\nexport const DocumentIdFlex = styled(Flex)`\n  min-height: 33px;\n`\n\nexport const OtherReferenceCount = (props: {totalCount: number; references: unknown[]}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const difference = props.totalCount - props.references.length\n\n  if (!difference) return null\n\n  return (\n    <Box padding={2}>\n      <Inline space={2}>\n        <Text size={1} muted>\n          {t('confirm-delete-dialog.other-reference-count.title', {count: difference})}\n        </Text>\n\n        <Tooltip\n          portal\n          placement=\"top\"\n          content={t('confirm-delete-dialog.other-reference-count.tooltip')}\n        >\n          <Text size={1} muted>\n            <InfoOutlineIcon />\n          </Text>\n        </Tooltip>\n      </Inline>\n    </Box>\n  )\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {Flex} from '@sanity/ui'\nimport {type ComponentType, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  type DocumentPresence,\n  DocumentPreviewPresence,\n  type DocumentPreviewStore,\n  DocumentStatus,\n  DocumentStatusIndicator,\n  type GeneralPreviewLayoutKey,\n  getPreviewStateObservable,\n  getPreviewValueWithFallback,\n  SanityDefaultPreview,\n  useDocumentVersionInfo,\n  usePerspective,\n} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../ui-components'\n\nexport interface PaneItemPreviewProps {\n  documentPreviewStore: DocumentPreviewStore\n  icon: ComponentType | false\n  layout: GeneralPreviewLayoutKey\n  presence?: DocumentPresence[]\n  schemaType: SchemaType\n  value: SanityDocument\n}\n\n/**\n * Preview component for _documents_ rendered in structure panes.\n *\n * Note that non-document previews are not handled by this component,\n * despite being pane items! Non-document previews bypass this entirely\n * and are rendered by `<SanityDefaultPreview>`.\n */\nexport function PaneItemPreview(props: PaneItemPreviewProps) {\n  const {icon, layout, presence, schemaType, value} = props\n\n  const versionsInfo = useDocumentVersionInfo(value._id)\n\n  const {perspectiveStack} = usePerspective()\n  const previewStateObservable = useMemo(() => {\n    return getPreviewStateObservable(\n      props.documentPreviewStore,\n      schemaType,\n      value._id,\n      perspectiveStack,\n    )\n  }, [props.documentPreviewStore, schemaType, value._id, perspectiveStack])\n\n  const {\n    snapshot,\n    original,\n    isLoading: previewIsLoading,\n  } = useObservable(previewStateObservable, {\n    snapshot: null,\n    isLoading: true,\n    original: null,\n  })\n\n  const isLoading = previewIsLoading\n\n  const status = isLoading ? null : (\n    <TooltipDelayGroupProvider>\n      <Flex align=\"center\" gap={3}>\n        {presence && presence.length > 0 && <DocumentPreviewPresence presence={presence} />}\n        <DocumentStatusIndicator\n          draft={versionsInfo.draft}\n          published={versionsInfo.published}\n          versions={versionsInfo.versions}\n        />\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n\n  const tooltip = (\n    <DocumentStatus\n      draft={versionsInfo.draft}\n      published={versionsInfo.published}\n      versions={versionsInfo.versions}\n    />\n  )\n\n  return (\n    <SanityDefaultPreview\n      {...getPreviewValueWithFallback({snapshot, original, fallback: value})}\n      isPlaceholder={isLoading}\n      icon={icon}\n      layout={layout}\n      status={status}\n      tooltip={tooltip}\n    />\n  )\n}\n","import {type ComponentType, type ForwardedRef, forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type BackLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n  const panes = useMemo(() => routerPanesState.slice(0, groupIndex), [groupIndex, routerPanesState])\n  const state = useMemo(() => ({panes}), [panes])\n\n  return <StateLink {...props} ref={ref} state={state} />\n}) as ComponentType<BackLinkProps>\n","import {useContext} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePaneLayout(): PaneLayoutContextValue {\n  const pane = useContext(PaneLayoutContext)\n\n  if (!pane) {\n    throw new Error('PaneLayout: missing context value')\n  }\n\n  return pane\n}\n","import {type ForwardedRef, forwardRef, useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type ChildLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {childId, childPayload, childParameters, ...rest} = props\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        panes: [\n          ...routerPanesState.slice(0, groupIndex + 1),\n          [{id: childId, params: childParameters, payload: childPayload}],\n        ],\n      }}\n    />\n  )\n})\n","import {type ForwardedRef, forwardRef, type ReactNode, useContext, useMemo} from 'react'\nimport {useUnique} from 'sanity'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\ninterface ParameterizedLinkProps {\n  params?: Record<string, string>\n  payload?: unknown\n  children?: ReactNode\n}\n\n/**\n * @internal\n */\nexport const ParameterizedLink = forwardRef(function ParameterizedLink(\n  props: ParameterizedLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState: currentPanes, groupIndex, siblingIndex} = useContext(PaneRouterContext)\n  const {params, payload, ...rest} = props\n  const nextParams = useUnique(params)\n  const nextPayload = useUnique(payload)\n\n  const nextState = useMemo(() => {\n    const currentGroup = currentPanes[groupIndex]\n    const currentSibling = currentGroup[siblingIndex]\n\n    const nextSibling = {\n      ...currentSibling,\n      params: nextParams ?? currentSibling.params,\n      payload: nextPayload ?? currentSibling.payload,\n    }\n\n    const nextGroup = [\n      ...currentGroup.slice(0, siblingIndex),\n      nextSibling,\n      ...currentGroup.slice(siblingIndex + 1),\n    ]\n\n    const nextPanes = [\n      ...currentPanes.slice(0, groupIndex),\n      nextGroup,\n      ...currentPanes.slice(groupIndex + 1),\n    ]\n\n    return {panes: nextPanes}\n  }, [currentPanes, groupIndex, nextParams, nextPayload, siblingIndex])\n\n  return <StateLink ref={ref} {...rest} state={nextState} />\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {type ForwardedRef, forwardRef} from 'react'\n\nimport {ChildLink} from './ChildLink'\nimport {type ReferenceChildLinkProps} from './types'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  {documentId, documentType, parentRefPath, children, template, ...rest}: ReferenceChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childPayload={template?.params}\n      childParameters={{\n        type: documentType,\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n    >\n      {children}\n    </ChildLink>\n  )\n})\n","import {useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\n\nimport {type PaneRouterContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function usePaneRouter(): PaneRouterContextValue {\n  return useContext(PaneRouterContext)\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {type ReactNode, useCallback} from 'react'\nimport {\n  type FIXME,\n  getPublishedId,\n  PreviewCard,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n} from 'sanity'\n\nimport {PaneItemPreview} from '../paneItem/PaneItemPreview'\nimport {usePaneRouter} from '../paneRouter'\n\nconst EMPTY_ARRAY: [] = []\n\ninterface ReferencePreviewLinkProps {\n  onClick?: () => void\n  type: SchemaType & {icon?: any}\n  value: SanityDocument\n}\n\nexport function ReferencePreviewLink(props: ReferencePreviewLinkProps) {\n  const {onClick, type, value} = props\n  const publishedId = getPublishedId(value?._id)\n  const documentPresence = useDocumentPresence(publishedId)\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ReferenceChildLink} = usePaneRouter()\n\n  const Link = useCallback(\n    function LinkComponent(linkProps: {children: ReactNode}) {\n      return (\n        <ReferenceChildLink\n          documentId={value?._id}\n          documentType={type?.name}\n          parentRefPath={EMPTY_ARRAY}\n          {...linkProps}\n        />\n      )\n    },\n    [ReferenceChildLink, type?.name, value?._id],\n  )\n\n  return (\n    <PreviewCard __unstable_focusRing as={Link as FIXME} data-as=\"a\" onClick={onClick} radius={2}>\n      <PaneItemPreview\n        documentPreviewStore={documentPreviewStore}\n        icon={type?.icon}\n        layout=\"compact\"\n        presence={documentPresence?.length > 0 ? documentPresence : EMPTY_ARRAY}\n        schemaType={type}\n        value={value}\n      />\n    </PreviewCard>\n  )\n}\n","import {\n  ChevronDownIcon,\n  CopyIcon,\n  DocumentsIcon,\n  UnknownIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {Box, Card, Flex, Stack, Text, useToast} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {SanityDefaultPreview, Translate, useSchema, useTranslation} from 'sanity'\n\nimport {Button} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {\n  ChevronWrapper,\n  CrossDatasetReferencesDetails,\n  CrossDatasetReferencesSummary,\n  DocumentIdFlex,\n  OtherReferenceCount,\n  Table,\n} from './ConfirmDeleteDialogBody.styles'\nimport {ReferencePreviewLink} from './ReferencePreviewLink'\nimport {type ReferringDocuments} from './useReferringDocuments'\n\ntype DeletionConfirmationDialogBodyProps = Required<ReferringDocuments> & {\n  documentTitle: React.ReactNode\n  action: 'unpublish' | 'delete'\n  onReferenceLinkClick?: () => void\n}\n\n/**\n * The inner part of the `ConfirmDeleteDialog`. This is ran when both the\n * `crossDatasetReferences` and `internalReferences` are loaded.\n */\nexport function ConfirmDeleteDialogBody({\n  crossDatasetReferences,\n  internalReferences,\n  documentTitle,\n  totalCount,\n  action,\n  datasetNames,\n  hasUnknownDatasetNames,\n  onReferenceLinkClick,\n}: DeletionConfirmationDialogBodyProps) {\n  const schema = useSchema()\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const renderPreviewItem = useCallback(\n    (item: any) => {\n      const type = schema.get(item._type)\n      if (type) {\n        return <ReferencePreviewLink type={type} value={item} onClick={onReferenceLinkClick} />\n      }\n\n      return (\n        // Padding added to match the ReferencePreviewLink styling\n        <Box padding={2}>\n          <SanityDefaultPreview\n            icon={UnknownIcon}\n            title={t('confirm-delete-dialog.preview-item.preview-unavailable.title')}\n            subtitle={t('confirm-delete-dialog.preview-item.preview-unavailable.subtitle', {\n              documentId: item._id,\n            })}\n            layout=\"default\"\n          />\n        </Box>\n      )\n    },\n    [schema, t, onReferenceLinkClick],\n  )\n\n  if (internalReferences?.totalCount === 0 && crossDatasetReferences?.totalCount === 0) {\n    return (\n      <Text as=\"p\" size={1}>\n        <Translate\n          t={t}\n          i18nKey=\"confirm-delete-dialog.confirmation.text\"\n          context={action}\n          components={{DocumentTitle: () => <strong>{documentTitle}</strong>}}\n        />\n      </Text>\n    )\n  }\n\n  // We do some extra checks to handle cases where you have unavailable dataset\n  // name(s) due to permissions, both alone and in combination with known datasets\n\n  // This normalizes one or more undefined dataset names to the catch-all `unavailable`\n  const normalizedDatasetNames = [\n    ...datasetNames,\n    ...(hasUnknownDatasetNames ? ['unavailable'] : []),\n  ]\n\n  const datasetSubtitle = t('confirm-delete-dialog.cdr-summary.subtitle', {\n    count: normalizedDatasetNames.length,\n    datasets: normalizedDatasetNames.join(', '),\n    context: hasUnknownDatasetNames && normalizedDatasetNames.length ? 'unavailable' : '',\n  })\n\n  return (\n    <Flex direction=\"column\" gap={4}>\n      <Card padding={3} radius={2} tone=\"caution\" flex=\"none\">\n        <Flex>\n          <Text aria-hidden=\"true\" size={1}>\n            <WarningOutlineIcon />\n          </Text>\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              <Translate\n                i18nKey=\"confirm-delete-dialog.referring-document-count.text\"\n                components={{DocumentTitle: () => documentTitle}}\n                t={t}\n                values={{count: totalCount}}\n              />\n            </Text>\n          </Box>\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referring-documents-descriptor.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n      <Card radius={2} shadow={1} flex=\"auto\" padding={2}>\n        <Flex direction=\"column\">\n          {internalReferences.totalCount > 0 && (\n            <Stack as=\"ul\" marginBottom={2} space={2} data-testid=\"internal-references\">\n              {internalReferences?.references.map((item) => (\n                <Box as=\"li\" key={item._id}>\n                  {renderPreviewItem(item)}\n                </Box>\n              ))}\n\n              {internalReferences.totalCount > internalReferences.references.length && (\n                <Box as=\"li\" padding={3}>\n                  <OtherReferenceCount {...internalReferences} />\n                </Box>\n              )}\n            </Stack>\n          )}\n\n          {crossDatasetReferences.totalCount > 0 && (\n            <CrossDatasetReferencesDetails\n              data-testid=\"cross-dataset-references\"\n              style={{\n                // only add the border if needed\n                borderTop:\n                  internalReferences.totalCount > 0\n                    ? '1px solid var(--card-shadow-outline-color)'\n                    : undefined,\n              }}\n            >\n              <CrossDatasetReferencesSummary>\n                <Card\n                  as=\"a\"\n                  marginTop={internalReferences.totalCount > 0 ? 2 : 0}\n                  radius={2}\n                  shadow={1}\n                  paddingY={1}\n                >\n                  <Flex align=\"center\" gap={3} paddingX={3} paddingY={1}>\n                    <Text size={1}>\n                      <DocumentsIcon />\n                    </Text>\n                    <Stack space={2}>\n                      <Text textOverflow=\"ellipsis\" size={1}>\n                        {t('confirm-delete-dialog.cdr-summary.title', {\n                          count: normalizedDatasetNames.length,\n                          documentCount: t('confirm-delete-dialog.cdr-summary.document-count', {\n                            count: crossDatasetReferences.totalCount,\n                          }),\n                        })}\n                      </Text>\n                      <Text title={datasetSubtitle} textOverflow=\"ellipsis\" size={1} muted>\n                        {datasetSubtitle}\n                      </Text>\n                    </Stack>\n                    <ChevronWrapper>\n                      <Text muted size={1}>\n                        <ChevronDownIcon />\n                      </Text>\n                    </ChevronWrapper>\n                  </Flex>\n                </Card>\n              </CrossDatasetReferencesSummary>\n\n              <Box overflow=\"auto\" paddingTop={2}>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <Text muted size={1} style={{minWidth: '5rem'}} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.project-id.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.dataset.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.document-id.label')}\n                        </Text>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {crossDatasetReferences.references\n                      .filter((reference): reference is Required<typeof reference> => {\n                        return 'projectId' in reference\n                      })\n                      .map(({projectId, datasetName, documentId}, index) => (\n                        // eslint-disable-next-line react/no-array-index-key\n                        <tr key={`${documentId}-${index}`}>\n                          <td>\n                            <Text size={1}>{projectId}</Text>\n                          </td>\n                          <td>\n                            <Text size={1}>{datasetName || 'unavailable'}</Text>\n                          </td>\n                          <td>\n                            <DocumentIdFlex align=\"center\" gap={2} justify=\"flex-end\">\n                              <Text textOverflow=\"ellipsis\" size={1}>\n                                {documentId || 'unavailable'}\n                              </Text>\n                              {documentId && (\n                                <Button\n                                  mode=\"bleed\"\n                                  icon={CopyIcon}\n                                  tooltipProps={{\n                                    content: t(\n                                      'confirm-delete-dialog.cdr-table.copy-id-button.tooltip',\n                                    ),\n                                  }}\n                                  // eslint-disable-next-line react/jsx-no-bind\n                                  onClick={() => {\n                                    navigator.clipboard.writeText(documentId).catch(() => {\n                                      toast.push({\n                                        status: 'error',\n                                        title: t(\n                                          'confirm-delete-dialog.cdr-table.id-copied-toast.title-failed',\n                                        ),\n                                      })\n                                    })\n                                  }}\n                                />\n                              )}\n                            </DocumentIdFlex>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n\n                <OtherReferenceCount {...crossDatasetReferences} />\n              </Box>\n            </CrossDatasetReferencesDetails>\n          )}\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referential-integrity-disclaimer.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n    </Flex>\n  )\n}\n","import {type ClientError, type SanityClient} from '@sanity/client'\nimport {useMemo} from 'react'\nimport {EMPTY, fromEvent, type Observable, of, timer} from 'rxjs'\nimport {\n  catchError,\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  startWith,\n  switchMap,\n} from 'rxjs/operators'\nimport {\n  type AvailabilityResponse,\n  createHookFromObservableFactory,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  type DocumentStore,\n  getDraftId,\n  getPublishedId,\n  useClient,\n  useDocumentStore,\n} from 'sanity'\n\n// this is used in place of `instanceof` so the matching can be more robust and\n// won't have any issues with dual packages etc\n// https://nodejs.org/api/packages.html#dual-package-hazard\nfunction isClientError(e: unknown): e is ClientError {\n  if (typeof e !== 'object') return false\n  if (!e) return false\n  return 'statusCode' in e && 'response' in e\n}\n\nconst POLL_INTERVAL = 5000\n\n// only fetches when the document is visible\nlet visiblePoll$: Observable<number>\nconst getVisiblePoll$ = () => {\n  if (!visiblePoll$) {\n    visiblePoll$ = fromEvent(document, 'visibilitychange').pipe(\n      // add empty emission to have this fire on creation\n      startWith(null),\n      map(() => document.visibilityState === 'visible'),\n      distinctUntilChanged(),\n      switchMap((visible) =>\n        visible\n          ? // using timer instead of interval since timer will emit on creation\n            timer(0, POLL_INTERVAL)\n          : EMPTY,\n      ),\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n  }\n  return visiblePoll$\n}\n\nexport type ReferringDocuments = {\n  isLoading: boolean\n  totalCount: number\n  projectIds: string[]\n  datasetNames: string[]\n  hasUnknownDatasetNames: boolean\n  internalReferences?: {\n    totalCount: number\n    references: Array<{_id: string; _type: string}>\n  }\n  crossDatasetReferences?: {\n    totalCount: number\n    references: Array<{\n      /**\n       * The project ID of the document that is currently referencing the subject\n       * document. Unlike `documentId` and `datasetName`, this should always be\n       * defined.\n       */\n      projectId: string\n      /**\n       * The ID of the document that is currently referencing the subject\n       * document. This will be omitted if there is no access to the current\n       * project and dataset pair (e.g. if no `sanity-project-token` were\n       * configured)\n       */\n      documentId?: string\n      /**\n       * The dataset name that is currently referencing the subject document.\n       * This will be omitted if there is no access to the current project and\n       * dataset pair (e.g. if no `sanity-project-token` were configured)\n       */\n      datasetName?: string\n    }>\n  }\n}\n\nfunction getDocumentExistence(\n  documentId: string,\n  {versionedClient}: {versionedClient: SanityClient},\n): Observable<string | undefined> {\n  const draftId = getDraftId(documentId)\n  const publishedId = getPublishedId(documentId)\n  const requestOptions = {\n    uri: versionedClient.getDataUrl('doc', `${draftId},${publishedId}`),\n    json: true,\n    query: {excludeContent: 'true'},\n    tag: 'use-referring-documents.document-existence',\n  }\n  return versionedClient.observable.request<AvailabilityResponse>(requestOptions).pipe(\n    map(({omitted}) => {\n      const nonExistant = omitted.filter((doc) => doc.reason === 'existence')\n      if (nonExistant.length === 2) {\n        // None of the documents exist\n        return undefined\n      }\n\n      if (nonExistant.length === 0) {\n        // Both exist, so use the published one\n        return publishedId\n      }\n\n      // If the draft does not exist, use the published ID, and vice versa\n      return nonExistant.some((doc) => doc.id === draftId) ? publishedId : draftId\n    }),\n  )\n}\n\n/**\n * fetches the cross-dataset references using the client observable.request\n * method (for that requests can be automatically cancelled)\n */\nfunction fetchCrossDatasetReferences(\n  documentId: string,\n  context: {versionedClient: SanityClient},\n): Observable<ReferringDocuments['crossDatasetReferences']> {\n  const {versionedClient} = context\n\n  return getVisiblePoll$().pipe(\n    switchMap(() => getDocumentExistence(documentId, context)),\n    switchMap((checkDocumentId) => {\n      if (!checkDocumentId) {\n        return of({totalCount: 0, references: []})\n      }\n\n      const currentDataset = versionedClient.config().dataset\n\n      return versionedClient.observable\n        .request({\n          url: `/data/references/${currentDataset}/documents/${checkDocumentId}/to?excludeInternalReferences=true&excludePaths=true`,\n          tag: 'use-referring-documents.external',\n        })\n        .pipe(\n          catchError((e) => {\n            // it's possible that referencing document doesn't exist yet so the\n            // API will return a 404. In those cases, we want to catch and return\n            // a response with no references\n            if (isClientError(e) && e.statusCode === 404) {\n              return of({totalCount: 0, references: []})\n            }\n\n            throw e\n          }),\n        )\n    }),\n  )\n}\n\nconst useInternalReferences = createHookFromObservableFactory(\n  ([documentId, documentStore]: [string, DocumentStore]) => {\n    const referencesClause = '*[references($documentId)][0...100]{_id,_type}'\n    const totalClause = 'count(*[references($documentId)])'\n    const fetchQuery = `{\"references\":${referencesClause},\"totalCount\":${totalClause}}`\n    const listenQuery = '*[references($documentId)]'\n\n    return documentStore.listenQuery(\n      {fetch: fetchQuery, listen: listenQuery},\n      {documentId},\n      {tag: 'use-referring-documents', transitions: ['appear', 'disappear'], throttleTime: 5000},\n    ) as Observable<ReferringDocuments['internalReferences']>\n  },\n)\n\nconst useCrossDatasetReferences = createHookFromObservableFactory(\n  ([documentId, versionedClient]: [string, SanityClient]) => {\n    // (documentId: string, versionedClient: SanityClient) => {\n    return getVisiblePoll$().pipe(\n      switchMap(() =>\n        fetchCrossDatasetReferences(documentId, {\n          versionedClient,\n        }),\n      ),\n    )\n  },\n)\n\nexport function useReferringDocuments(documentId: string): ReferringDocuments {\n  const versionedClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n\n  const [internalReferences, isInternalReferencesLoading] = useInternalReferences(\n    useMemo(() => [publishedId, documentStore], [documentStore, publishedId]),\n  )\n\n  const [crossDatasetReferences, isCrossDatasetReferencesLoading] = useCrossDatasetReferences(\n    useMemo(() => [publishedId, versionedClient], [publishedId, versionedClient]),\n  )\n\n  const projectIds = useMemo(() => {\n    return Array.from(\n      new Set(\n        crossDatasetReferences?.references\n          .map((crossDatasetReference) => crossDatasetReference.projectId)\n          .filter(Boolean),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const datasetNames = useMemo(() => {\n    return Array.from(\n      new Set<string>(\n        crossDatasetReferences?.references\n          // .filter((name) => typeof name === 'string')\n          .map((crossDatasetReference) => crossDatasetReference?.datasetName || '')\n          .filter((datasetName) => Boolean(datasetName) && datasetName !== ''),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const hasUnknownDatasetNames = useMemo(() => {\n    return Boolean(\n      crossDatasetReferences?.references.some(\n        (crossDatasetReference) => typeof crossDatasetReference.datasetName !== 'string',\n      ),\n    )\n  }, [crossDatasetReferences?.references])\n\n  return {\n    totalCount: (internalReferences?.totalCount || 0) + (crossDatasetReferences?.totalCount || 0),\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n    internalReferences,\n    crossDatasetReferences,\n    isLoading: isInternalReferencesLoading || isCrossDatasetReferencesLoading,\n  }\n}\n","import {Box, Flex} from '@sanity/ui'\nimport {useId, useMemo} from 'react'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DocTitle} from '../DocTitle'\nimport {ConfirmDeleteDialogBody} from './ConfirmDeleteDialogBody'\nimport {useReferringDocuments} from './useReferringDocuments'\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface ConfirmDeleteDialogProps {\n  /**\n   * Incoming document ID used to find other referencing documents. This\n   * field respects draft IDs (e.g. if you pass in a published ID when one\n   * doesn't exist the document title may not show up).\n   */\n  id: string\n  /**\n   * The schema typename of the incoming document\n   */\n  type: string\n  /**\n   * The name of the action being done. (e.g. the `'unpublish'` action requires\n   * the same document deletion confirmation).\n   */\n  action?: 'delete' | 'unpublish'\n  onCancel: () => void\n  onConfirm: () => void\n}\n\n/**\n * A confirmation dialog used to prevent unwanted document deletes. Loads all\n * the referencing internal and cross-data references prior to showing the\n * delete button.\n *\n * @internal\n */\nexport function ConfirmDeleteDialog({\n  id,\n  type,\n  action = 'delete',\n  onCancel,\n  onConfirm,\n}: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const dialogId = `deletion-confirmation-${useId()}`\n  const {\n    internalReferences,\n    crossDatasetReferences,\n    isLoading,\n    totalCount,\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n  } = useReferringDocuments(id)\n  const documentTitle = <DocTitle document={useMemo(() => ({_id: id, _type: type}), [id, type])} />\n  const showConfirmButton = !isLoading\n\n  return (\n    <Dialog\n      width={1}\n      id={dialogId}\n      header={t('confirm-delete-dialog.header.text', {context: action})}\n      footer={{\n        cancelButton: {\n          onClick: onCancel,\n          text: t('confirm-delete-dialog.cancel-button.text'),\n        },\n        confirmButton: showConfirmButton\n          ? {\n              text:\n                totalCount > 0\n                  ? t('confirm-delete-dialog.confirm-anyway-button.text', {context: action})\n                  : t('confirm-delete-dialog.confirm-button.text', {context: action}),\n              onClick: onConfirm,\n            }\n          : undefined,\n      }}\n      onClose={onCancel}\n      onClickOutside={onCancel}\n    >\n      <DialogBody>\n        {crossDatasetReferences && internalReferences && !isLoading ? (\n          <ConfirmDeleteDialogBody\n            crossDatasetReferences={crossDatasetReferences}\n            internalReferences={internalReferences}\n            documentTitle={documentTitle}\n            isLoading={isLoading}\n            totalCount={totalCount}\n            action={action}\n            projectIds={projectIds}\n            datasetNames={datasetNames}\n            hasUnknownDatasetNames={hasUnknownDatasetNames}\n            onReferenceLinkClick={onCancel}\n          />\n        ) : (\n          <LoadingContainer data-testid=\"loading-container\">\n            <LoadingBlock showText title={t('confirm-delete-dialog.loading.text')} />\n          </LoadingContainer>\n        )}\n      </DialogBody>\n    </Dialog>\n  )\n}\n","import {Box, Text} from '@sanity/ui'\nimport {type ComponentProps, useCallback, useId, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Dialog, ErrorBoundary} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {ConfirmDeleteDialog, type ConfirmDeleteDialogProps} from './ConfirmDeleteDialog'\n\nexport type {ConfirmDeleteDialogProps}\n\ntype ArgType<T> = T extends (arg: infer U) => unknown ? U : never\ntype ErrorInfo = ArgType<ComponentProps<typeof ErrorBoundary>['onCatch']>\n\n/** @internal */\nfunction ConfirmDeleteDialogContainer(props: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const id = useId()\n  const [error, setError] = useState<ErrorInfo | null>(null)\n  const handleRetry = useCallback(() => setError(null), [])\n\n  return error ? (\n    <Dialog\n      id={`dialog-error-${id}`}\n      data-testid=\"confirm-delete-error-dialog\"\n      header={t('confirm-delete-dialog.error.title.text')}\n      footer={{\n        confirmButton: {\n          text: t('confirm-delete-dialog.error.retry-button.text'),\n          onClick: handleRetry,\n          tone: 'default',\n        },\n      }}\n      onClose={props.onCancel}\n    >\n      <Box padding={4}>\n        <Text size={1}>{t('confirm-delete-dialog.error.message.text')}</Text>\n      </Box>\n    </Dialog>\n  ) : (\n    <ErrorBoundary onCatch={setError}>\n      <ConfirmDeleteDialog {...props} />\n    </ErrorBoundary>\n  )\n}\n\nexport {ConfirmDeleteDialogContainer as ConfirmDeleteDialog}\n","import {useEffect, useState} from 'react'\n\nexport function Delay({\n  children,\n  ms = 0,\n}: {\n  children?: React.JSX.Element | (() => React.JSX.Element)\n  ms?: number\n}): React.JSX.Element {\n  const [ready, setReady] = useState(ms <= 0)\n\n  useEffect(() => {\n    if (ms <= 0) {\n      return undefined\n    }\n\n    const timeoutId = setTimeout(() => setReady(true), ms)\n\n    return () => {\n      clearTimeout(timeoutId)\n    }\n  }, [ms])\n\n  if (!ready || !children) {\n    return <></>\n  }\n\n  return typeof children === 'function' ? children() : children\n}\n","/**\n * @internal\n */\nexport const PANE_DEBUG = false\n\n/**\n * @internal\n */\nexport const PANE_COLLAPSED_WIDTH = 51\n\n/**\n * @internal\n */\nexport const PANE_DEFAULT_MIN_WIDTH = PANE_COLLAPSED_WIDTH * 4\n","import {Layer} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {styled} from 'styled-components'\n\nimport {usePaneLayout} from './usePaneLayout'\n\nconst Root = styled(Layer)`\n  position: relative;\n  width: 1px;\n  min-width: 1px;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 1px;\n    background-color: var(--card-border-color);\n  }\n\n  &:not([data-disabled]) {\n    cursor: ew-resize;\n    width: 9px;\n    min-width: 9px;\n    margin: 0 -4px;\n\n    &:before {\n      left: 4px;\n    }\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    &[data-dragging]:after,\n    &:hover:after {\n      opacity: 0.2;\n    }\n  }\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneDivider({\n  disabled,\n  element,\n}: {\n  disabled?: boolean\n  element: HTMLElement | null\n}) {\n  const {resize} = usePaneLayout()\n  const [dragging, setDragging] = useState(false)\n\n  const handleMouseDown = useCallback(\n    (event: any) => {\n      if (!element) return\n\n      setDragging(true)\n\n      event.preventDefault()\n\n      const startX = event.pageX\n\n      resize('start', element, 0)\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n\n        const deltaX = e.pageX - startX\n\n        resize('move', element, deltaX)\n      }\n\n      const handleMouseUp = (e: MouseEvent) => {\n        e.preventDefault()\n\n        setDragging(false)\n\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n\n        resize('end', element, 0)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [element, resize],\n  )\n\n  return (\n    <Root\n      data-disabled={disabled ? '' : undefined}\n      data-dragging={dragging ? '' : undefined}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n","import {BoundaryElementProvider, Card, type CardProps, Code, Flex} from '@sanity/ui'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  type HTMLProps,\n  type ReactNode,\n  useCallback,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {IsLastPaneProvider, LegacyLayerProvider} from 'sanity'\nimport {PaneContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {PANE_COLLAPSED_WIDTH, PANE_DEBUG, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {PaneDivider} from './PaneDivider'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneProps {\n  children?: ReactNode\n  currentMinWidth?: number\n  currentMaxWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  selected?: boolean\n}\n\nconst Root = styled(Card)`\n  outline: none;\n\n  // NOTE: This will render a border to the right side of each pane\n  // without taking up physical space.\n  box-shadow: 1px 0 0 var(--card-border-color);\n`\n\n/**\n * @hidden\n * @internal\n */\n// eslint-disable-next-line complexity\nexport const Pane = forwardRef(function Pane(\n  props: PaneProps &\n    Omit<CardProps, 'as' | 'overflow'> &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'hidden' | 'id' | 'style'>,\n  forwardedRef: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    children,\n    currentMinWidth: currentMinWidthProp,\n    currentMaxWidth: currentMaxWidthProp,\n    flex: flexProp = 1,\n    id,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    selected = false,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const {\n    collapse,\n    collapsed: layoutCollapsed,\n    expand,\n    expandedElement,\n    mount,\n    panes,\n  } = usePaneLayout()\n  const pane = panes.find((p) => p.element === rootElement)\n  const paneIndex = pane && panes.indexOf(pane)\n  const nextPane = typeof paneIndex === 'number' ? panes[paneIndex + 1] : undefined\n  const isLast = paneIndex === panes.length - 1\n  const expanded = expandedElement === rootElement\n  const collapsed = layoutCollapsed ? false : pane?.collapsed || false\n  const nextCollapsed = nextPane?.collapsed || false\n  const ref = useRef<HTMLDivElement | null>(null)\n  const flex = pane?.flex ?? flexProp\n  const currentMinWidth = pane?.currentMinWidth ?? currentMinWidthProp\n  const currentMaxWidth = pane?.currentMaxWidth ?? currentMaxWidthProp\n\n  // Forward ref to parent\n  useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(forwardedRef, () => ref.current)\n\n  const setRef = useCallback((refValue: HTMLDivElement | null) => {\n    setRootElement(refValue)\n    ref.current = refValue\n  }, [])\n\n  useLayoutEffect(() => {\n    if (!rootElement) return undefined\n    return mount(rootElement, {\n      currentMinWidth: currentMinWidthProp,\n      currentMaxWidth: currentMaxWidthProp,\n      flex: flexProp,\n      id,\n      minWidth: minWidthProp,\n      maxWidth: maxWidthProp,\n    })\n  }, [\n    currentMinWidthProp,\n    currentMaxWidthProp,\n    flexProp,\n    id,\n    minWidthProp,\n    maxWidthProp,\n    mount,\n    rootElement,\n  ])\n\n  const handleCollapse = useCallback(() => {\n    if (!rootElement) return\n    collapse(rootElement)\n  }, [collapse, rootElement])\n\n  const handleExpand = useCallback(() => {\n    if (!rootElement) return\n    expand(rootElement)\n  }, [expand, rootElement])\n\n  const contextValue = useMemo(\n    () => ({\n      collapse: handleCollapse,\n      collapsed: layoutCollapsed ? false : collapsed,\n      expand: handleExpand,\n      index: paneIndex,\n      isLast,\n      rootElement,\n    }),\n    [collapsed, handleCollapse, handleExpand, isLast, layoutCollapsed, paneIndex, rootElement],\n  )\n\n  const minWidth = useMemo(() => {\n    if (layoutCollapsed) {\n      return undefined\n    }\n\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (currentMinWidth === 0) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    if (isLast) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    return currentMinWidth || minWidthProp || PANE_DEFAULT_MIN_WIDTH\n  }, [collapsed, currentMinWidth, isLast, layoutCollapsed, minWidthProp])\n\n  const maxWidth = useMemo(() => {\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (layoutCollapsed && isLast) {\n      return undefined\n    }\n\n    if (isLast) {\n      if (maxWidthProp) {\n        return currentMaxWidth ?? maxWidthProp\n      }\n\n      return undefined\n    }\n\n    return currentMaxWidth ?? maxWidthProp\n  }, [collapsed, currentMaxWidth, isLast, layoutCollapsed, maxWidthProp])\n\n  const hidden = layoutCollapsed && !isLast\n\n  const divider = useMemo(\n    () =>\n      !isLast &&\n      !layoutCollapsed && (\n        <LegacyLayerProvider zOffset=\"paneResizer\">\n          <PaneDivider disabled={collapsed || nextCollapsed} element={rootElement} />\n        </LegacyLayerProvider>\n      ),\n    [collapsed, isLast, layoutCollapsed, nextCollapsed, rootElement],\n  )\n\n  const style = useMemo(\n    () => ({\n      flex,\n      minWidth,\n      maxWidth: maxWidth === Infinity ? undefined : maxWidth,\n    }),\n    [flex, minWidth, maxWidth],\n  )\n\n  return (\n    <>\n      <LegacyLayerProvider zOffset=\"pane\">\n        <PaneContext.Provider value={contextValue}>\n          <IsLastPaneProvider isLastPane={isLast}>\n            <Root\n              data-testid=\"pane\"\n              data-ui=\"Pane\"\n              tone=\"inherit\"\n              hidden={hidden}\n              id={id}\n              overflow={layoutCollapsed ? undefined : 'hidden'}\n              {...restProps}\n              data-pane-collapsed={collapsed ? '' : undefined}\n              data-pane-index={paneIndex}\n              data-pane-selected={selected ? '' : undefined}\n              ref={setRef}\n              style={style}\n            >\n              {PANE_DEBUG && (\n                <Card padding={4} tone={expanded ? 'primary' : 'caution'}>\n                  <Code size={1}>\n                    {[\n                      `#${paneIndex}`,\n                      `collapsed=${collapsed}`,\n                      `currentMinWidth=${currentMinWidth}`,\n                      `currentMaxWidth=${currentMaxWidth}`,\n                      `flex=${flex}`,\n                      `minWidth=${minWidth}`,\n                      `maxWidth=${maxWidth}`,\n                    ].join('\\n')}\n                  </Code>\n                </Card>\n              )}\n\n              <BoundaryElementProvider element={rootElement}>\n                {!hidden && (\n                  <Flex direction=\"column\" height=\"fill\">\n                    {children}\n                  </Flex>\n                )}\n              </BoundaryElementProvider>\n            </Root>\n          </IsLastPaneProvider>\n        </PaneContext.Provider>\n      </LegacyLayerProvider>\n\n      {divider}\n    </>\n  )\n})\n","import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  position: relative;\n  outline: none;\n`\n\nRoot.displayName = 'PaneContent__root'\n","import {useContext} from 'react'\nimport {PaneContext} from 'sanity/_singletons'\n\nimport {type PaneContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePane(): PaneContextValue {\n  const pane = useContext(PaneContext)\n\n  if (!pane) {\n    throw new Error('Pane: missing context value')\n  }\n\n  return pane\n}\n","import {type BoxOverflow} from '@sanity/ui'\nimport {type ElementType, type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {Root} from './PaneContent.styles'\nimport {usePane} from './usePane'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneContentProps {\n  as?: ElementType | keyof React.JSX.IntrinsicElements\n  overflow?: BoxOverflow\n  padding?: number | number[]\n}\n\n/**\n * @hidden\n * @internal\n */\nexport const PaneContent = forwardRef(function PaneContent(\n  props: PaneContentProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {as, children, overflow, padding, ...restProps} = props\n  const {collapsed} = usePane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  return (\n    <Root\n      data-testid=\"pane-content\"\n      forwardedAs={as}\n      {...restProps}\n      flex={1}\n      hidden={collapsed}\n      overflow={layoutCollapsed ? undefined : overflow}\n      padding={padding}\n      ref={ref}\n      tone=\"inherit\"\n    >\n      {children}\n    </Root>\n  )\n})\n","/**\n * Remove the spaces and lower case the string\n *\n * @param str - string to remove the spaces and lower case\n * @returns str with no spaces and lower case\n */\nexport function toLowerCaseNoSpaces(str: string | undefined): string {\n  if (!str) return ''\n  return str.toLocaleLowerCase().replaceAll(' ', '')\n}\n","import {CheckmarkIcon} from '@sanity/icons'\nimport {MenuDivider, Text} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {TooltipOfDisabled, useGetI18nText, useI18nText} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {MenuGroup, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {toLowerCaseNoSpaces} from '../../util/toLowerCaseNoSpaces'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\nconst MENU_GROUP_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'left-start',\n  portal: true,\n}\n\nexport function PaneMenuButtonItem(props: {\n  disabled?: boolean\n  isAfterGroup: boolean\n  node: _PaneMenuNode\n}) {\n  const {disabled, isAfterGroup, node} = props\n  const getI18nText = useGetI18nText('i18n' in node ? node : undefined)\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  const {title} = getI18nText(node)\n\n  if (node.type === 'group') {\n    if (node.children.length === 0) {\n      return null\n    }\n\n    if (node.expanded) {\n      return (\n        <>\n          {isAfterGroup && <MenuDivider />}\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              key={child.key}\n              node={child}\n            />\n          ))}\n        </>\n      )\n    }\n\n    return (\n      <>\n        {isAfterGroup && <MenuDivider />}\n        <MenuGroup\n          disabled={disabled}\n          icon={node.icon}\n          popover={MENU_GROUP_POPOVER_PROPS}\n          text={title}\n        >\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              key={child.key}\n              node={child}\n            />\n          ))}\n        </MenuGroup>\n      </>\n    )\n  }\n\n  return (\n    <>\n      {isAfterGroup && <MenuDivider />}\n      <PaneContextMenuItemResolver disabled={disabled} node={node} />\n    </>\n  )\n}\n\nfunction PaneContextMenuItemResolver(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {node} = props\n\n  if (node.intent) {\n    return <PaneContextIntentMenuItem {...props} intent={node.intent} />\n  }\n\n  return <PaneContextMenuItem {...props} />\n}\n\nfunction PaneContextMenuItem(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {disabled, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        icon={node.icon}\n        iconRight={node.iconRight || (node.selected && CheckmarkIcon)}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClick={node.onAction}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n        data-testid={`action-${toLowerCaseNoSpaces(node.title)}`}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nfunction PaneContextIntentMenuItem(props: {\n  disabled?: boolean\n  intent: Intent\n  node: _PaneMenuItem\n}) {\n  const {disabled, intent, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLDivElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        as=\"a\"\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        href={intentLink.href}\n        icon={node.icon}\n        iconRight={node.selected ? CheckmarkIcon : undefined}\n        onClick={handleClick}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n","import {Menu, MenuDivider} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {ContextMenuButton} from 'sanity'\n\nimport {MenuButton, type PopoverProps} from '../../../ui-components'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\ninterface PaneContextMenuButtonProps {\n  nodes: _PaneMenuNode[]\n  actionsNodes?: ReactNode\n}\n\nconst CONTEXT_MENU_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nfunction nodesHasTone(nodes: _PaneMenuNode[], tone: NonNullable<_PaneMenuItem['tone']>): boolean {\n  return nodes.some((node) => {\n    return (\n      (node.type === 'item' && node.tone === tone) ||\n      (node.type === 'group' && nodesHasTone(node.children, tone))\n    )\n  })\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneContextMenuButton(props: PaneContextMenuButtonProps) {\n  const {nodes, actionsNodes} = props\n  const id = useId()\n\n  const hasCritical = nodesHasTone(nodes, 'critical')\n  const hasCaution = nodesHasTone(nodes, 'caution')\n\n  return (\n    <MenuButton\n      button={\n        <ContextMenuButton\n          // eslint-disable-next-line no-nested-ternary\n          tone={hasCritical ? 'critical' : hasCaution ? 'caution' : undefined}\n          data-testid=\"pane-context-menu-button\"\n        />\n      }\n      id={id}\n      menu={\n        <Menu>\n          {actionsNodes && (\n            <>\n              {actionsNodes}\n              <MenuDivider />\n            </>\n          )}\n          {nodes.map((node, nodeIndex) => {\n            const isAfterGroup = nodes[nodeIndex - 1]?.type === 'group'\n            return <PaneMenuButtonItem isAfterGroup={isAfterGroup} key={node.key} node={node} />\n          })}\n        </Menu>\n      }\n      popover={CONTEXT_MENU_POPOVER_PROPS}\n    />\n  )\n}\n","import {Card, Layer} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Layer)`\n  position: sticky;\n  bottom: 0;\n`\n\nexport const RootCard = styled(Card)`\n  padding-bottom: env(safe-area-inset-bottom);\n`\n","import {Box} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Root, RootCard} from './PaneFooter.styles'\nimport {usePane} from './usePane'\n\ninterface PaneFooterProps {\n  children?: ReactNode\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneFooter = forwardRef(function PaneFooter(\n  props: PaneFooterProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {children, padding} = props\n  const {collapsed} = usePane()\n\n  return (\n    <LegacyLayerProvider zOffset=\"paneFooter\">\n      <Root data-testid=\"pane-footer\" hidden={collapsed} ref={ref}>\n        <RootCard tone=\"inherit\">\n          <Box padding={padding}>{children}</Box>\n        </RootCard>\n      </Root>\n    </LegacyLayerProvider>\n  )\n})\n","import {Card, Flex, Layer, Text, TextSkeleton, type Theme} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {css, styled} from 'styled-components'\n\ninterface RootProps {\n  $border?: boolean\n}\n\nexport const Root = styled(Layer)<RootProps>(({$border}) => {\n  return css`\n    line-height: 0;\n    position: sticky;\n    top: 0;\n\n    &:not([data-collapsed]):after {\n      content: '';\n      display: block;\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: -1px;\n      border-bottom: 1px solid ${$border ? 'var(--card-border-color)' : 'transparent'};\n      opacity: 1;\n    }\n  `\n})\n\nexport const Layout = styled(Flex)`\n  transform-origin: calc(51px / 2);\n\n  [data-collapsed] > div > & {\n    transform: rotate(90deg);\n  }\n`\n\nexport const TitleCard = styled(Card)(({theme}: {theme: Theme}) => {\n  const {fg, bg} = theme.sanity.color.card.enabled\n\n  // Disable color updates on hover\n  return css`\n    background-color: ${bg};\n\n    [data-ui='Text'] {\n      color: ${fg};\n    }\n  `\n})\n\nexport const TitleTextSkeleton = styled(TextSkeleton)`\n  width: 66%;\n  max-width: 175px;\n`\n\nexport const TitleText = styled(Text)`\n  cursor: default;\n  outline: none;\n`\n","import {Box, Card, Flex, LayerProvider, useElementRect} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode, useCallback, useMemo} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Layout, Root, TitleCard, TitleText, TitleTextSkeleton} from './PaneHeader.styles'\nimport {usePane} from './usePane'\n\nexport type TabsType = 'default' | 'dropdown'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneHeaderProps {\n  actions?: ReactNode\n  backButton?: ReactNode\n  border?: boolean\n  contentAfter?: ReactNode\n  loading?: boolean\n  subActions?: ReactNode\n  tabIndex?: number\n  tabs?: ReactNode\n  title: ReactNode\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneHeader = forwardRef(function PaneHeader(\n  props: PaneHeaderProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {actions, backButton, border, contentAfter, loading, subActions, tabs, tabIndex, title} =\n    props\n  const {collapse, collapsed, expand, rootElement: paneElement} = usePane()\n  const paneRect = useElementRect(paneElement || null)\n\n  const layoutStyle = useMemo(\n    () => ({\n      width: collapsed ? paneRect?.height || window.innerHeight : undefined,\n    }),\n    [collapsed, paneRect],\n  )\n\n  const handleTitleClick = useCallback(() => {\n    if (collapsed) return\n    collapse()\n  }, [collapse, collapsed])\n\n  const handleLayoutClick = useCallback(() => {\n    if (!collapsed) return\n    expand()\n  }, [collapsed, expand])\n\n  const showTabsOrSubActions = Boolean(!collapsed && (tabs || subActions))\n\n  return (\n    <LayerProvider zOffset={100}>\n      <Root\n        $border={border}\n        data-collapsed={collapsed ? '' : undefined}\n        data-testid=\"pane-header\"\n        ref={ref}\n      >\n        <LegacyLayerProvider zOffset=\"paneHeader\">\n          <Card data-collapsed={collapsed ? '' : undefined} tone=\"inherit\">\n            <Layout\n              gap={3}\n              onClick={handleLayoutClick}\n              padding={3}\n              sizing=\"border\"\n              style={layoutStyle}\n            >\n              {backButton && <Box flex=\"none\">{backButton}</Box>}\n\n              <TitleCard\n                __unstable_focusRing\n                flex={1}\n                onClick={handleTitleClick}\n                paddingLeft={backButton ? 1 : 2}\n                padding={2}\n                tabIndex={tabIndex}\n              >\n                {loading && (\n                  <Box>\n                    <TitleTextSkeleton animated radius={1} size={1} />\n                  </Box>\n                )}\n                {!loading && (\n                  <TitleText size={1} textOverflow=\"ellipsis\" weight=\"semibold\">\n                    {title}\n                  </TitleText>\n                )}\n              </TitleCard>\n\n              {actions && (\n                <Box hidden={collapsed}>\n                  <LegacyLayerProvider zOffset=\"paneHeader\">{actions}</LegacyLayerProvider>\n                </Box>\n              )}\n              {showTabsOrSubActions && (\n                <Flex align=\"center\" hidden={collapsed} overflow=\"auto\">\n                  <Box flex={1} marginRight={subActions ? 3 : 0}>\n                    {tabs}\n                  </Box>\n\n                  {subActions && subActions}\n                </Flex>\n              )}\n            </Layout>\n\n            {!collapsed && contentAfter && contentAfter}\n          </Card>\n        </LegacyLayerProvider>\n      </Root>\n    </LayerProvider>\n  )\n})\n","import {UnknownIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type MouseEvent, useCallback, useId} from 'react'\nimport {StatusButton, useI18nText, useTranslation} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {Button, MenuButton} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuGroup, type _PaneMenuItem} from './types'\n\nfunction getDisabledReason(node: _PaneMenuItem) {\n  if (!node.disabled) {\n    return {disabledReason: undefined, ariaLabel: undefined, isDisabled: false}\n  }\n\n  /**\n   * This component supports receiving a `reason: string | react.ReactNode`.\n   * We are casting it as string, to avoid the ts error, as content will be rendered into the tooltip which only accepts string, but it won't crash if it's a ReactNode.\n   * For the aria label, we want to check if it's actually a string, to avoid generating an aria-label with the value `[object Object]`.\n   */\n  const disabledReason =\n    typeof node.disabled === 'object' ? (node.disabled.reason as string) : undefined\n  const ariaLabel =\n    typeof node.disabled === 'object' && typeof node.disabled?.reason === 'string'\n      ? node.disabled.reason\n      : 'This is disabled'\n\n  return {disabledReason, ariaLabel, isDisabled: Boolean(node.disabled)}\n}\nexport interface PaneHeaderActionButtonProps {\n  node: _PaneMenuItem | _PaneMenuGroup\n}\n\nexport function PaneHeaderActionButton(props: PaneHeaderActionButtonProps) {\n  const {node} = props\n\n  if (node.type === 'item') {\n    return <PaneHeaderMenuItemActionButton node={node} />\n  }\n\n  if (node.type === 'group') {\n    return <PaneHeaderMenuGroupActionButton node={node} />\n  }\n\n  console.warn('unknown menu node (expected `type: \"item\" | \"group\"`):', node)\n\n  return null\n}\n\nexport interface PaneHeaderMenuItemActionButtonProps {\n  node: _PaneMenuItem\n}\n\nexport function PaneHeaderMenuItemActionButton(props: PaneHeaderMenuItemActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n  const {t} = useTranslation()\n\n  if (node.intent) {\n    return <PaneHeaderActionIntentButton {...props} intent={node.intent} />\n  }\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      disabled={isDisabled}\n      icon={node.icon}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClick={node.onAction}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : title,\n      }}\n    />\n  )\n}\n\nfunction PaneHeaderActionIntentButton(props: {intent: Intent; node: _PaneMenuItem}) {\n  const {intent, node} = props\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n  const {t} = useTranslation()\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      forwardedAs=\"a\"\n      disabled={isDisabled}\n      href={intentLink.href}\n      icon={node.icon}\n      onClick={handleClick}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || node.title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : node.title,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n}\n\nexport interface PaneHeaderMenuGroupActionButtonProps {\n  node: _PaneMenuGroup\n}\n\nfunction PaneHeaderMenuGroupActionButton(props: PaneHeaderMenuGroupActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          disabled={!!node.disabled}\n          icon={node.icon ?? UnknownIcon}\n          label={title}\n          mode=\"bleed\"\n          tooltipProps={{content: node.title, portal: true}}\n        />\n      }\n      id={useId()}\n      menu={\n        <Menu>\n          {node.children.map((child, idx) => {\n            return (\n              <PaneMenuButtonItem\n                disabled={Boolean(node.disabled)}\n                isAfterGroup={node.children[idx - 1]?.type === 'group'}\n                key={child.key}\n                node={child}\n              />\n            )\n          })}\n        </Menu>\n      }\n    />\n  )\n}\n","import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  transition: opacity 200ms;\n  position: relative;\n  z-index: 1;\n  padding-left: env(safe-area-inset-left);\n  padding-right: env(safe-area-inset-right);\n  opacity: 0;\n\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  &:not([data-collapsed]) {\n    overflow: auto;\n  }\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n\n  &[data-resizing] {\n    pointer-events: none;\n  }\n`\n","import {PANE_DEFAULT_MIN_WIDTH} from '../constants'\nimport {type PaneConfigOpts, type PaneResizeCache} from '../types'\n\nexport function _calcPaneResize(\n  cache: PaneResizeCache,\n  left: PaneConfigOpts,\n  right: PaneConfigOpts,\n  deltaX: number,\n): {leftFlex: number; leftW: number; rightFlex: number; rightW: number} {\n  const sum = {\n    flex: cache.left.flex + cache.right.flex,\n    width: cache.left.width + cache.right.width,\n  }\n\n  const leftMinWidth = left.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n  const rightMinWidth = right.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n\n  const leftMaxWidth = Math.min(left.maxWidth || Infinity, sum.width - rightMinWidth)\n  const rightMaxWidth = Math.min(right.maxWidth || Infinity, sum.width - leftMinWidth)\n\n  // Get min. delta X\n  let minDeltaX = leftMinWidth - cache.left.width\n  const rightMinDeltaX = cache.right.width - rightMaxWidth\n  if (minDeltaX < rightMinDeltaX) {\n    minDeltaX = rightMinDeltaX\n  }\n\n  // Get max. delta X\n  let maxDeltaX = cache.right.width - rightMinWidth\n  const leftMaxDeltaX = leftMaxWidth - cache.left.width\n  if (maxDeltaX > leftMaxDeltaX) {\n    maxDeltaX = leftMaxDeltaX\n  }\n\n  const _deltaX = Math.min(Math.max(deltaX, minDeltaX), maxDeltaX)\n\n  const leftW = cache.left.width + _deltaX\n  const rightW = cache.right.width - _deltaX\n\n  const leftFlex = (leftW / sum.width) * sum.flex\n  const rightFlex = (rightW / sum.width) * sum.flex\n\n  return {leftFlex, leftW, rightFlex, rightW}\n}\n","/**\n * @internal\n */\nexport function _getDOMPath(rootElement: HTMLElement, el: HTMLElement): number[] {\n  const path: number[] = []\n\n  let e = el\n\n  while (e !== rootElement) {\n    const parentElement = e.parentElement\n\n    if (!parentElement) return path\n\n    const children = Array.from(parentElement.childNodes)\n    const index = children.indexOf(e)\n\n    path.unshift(index)\n\n    if (parentElement === rootElement) {\n      return path\n    }\n\n    e = parentElement\n  }\n\n  return path\n}\n","import {_getDOMPath} from './_getDOMPath'\n\nconst EMPTY_PATH: number[] = []\n\n/**\n * @internal\n */\nexport function _sortElements(rootElement: HTMLElement, elements: HTMLElement[]): void {\n  // Create a map containing the DOM path of each pane element.\n  // The DOM path is relative to the `rootElement`, and is used in the next step for sorting.\n  const map = new WeakMap<HTMLElement, number[]>()\n\n  for (const element of elements) {\n    map.set(element, _getDOMPath(rootElement, element))\n  }\n\n  const _sortByElementPath = (a: HTMLElement, b: HTMLElement) => {\n    const _a = map.get(a) || EMPTY_PATH\n    const _b = map.get(b) || EMPTY_PATH\n\n    const len = Math.max(_a.length, _b.length)\n\n    // Loop until there are different indexes\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1\n      const bIndex = _b[i] || -1\n\n      if (aIndex !== bIndex) {\n        return aIndex - bIndex\n      }\n    }\n\n    return 0\n  }\n\n  elements.sort(_sortByElementPath)\n}\n","import {PANE_COLLAPSED_WIDTH, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {_calcPaneResize, _sortElements} from './helpers'\nimport {\n  type PaneConfigOpts,\n  type PaneData,\n  type PaneResizeCache,\n  type PaneResizeData,\n} from './types'\n\nexport interface PaneLayoutState {\n  expandedElement: HTMLElement | null\n  panes: PaneData[]\n  resizing: boolean\n}\n\nexport type PaneLayoutStateObserver = (state: PaneLayoutState) => void\n\nexport interface PaneLayoutController {\n  collapse: (element: HTMLElement) => void\n  expand: (element: HTMLElement) => void\n  mount: (element: HTMLElement, options: PaneConfigOpts) => () => void\n  resize: (type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) => void\n  setRootElement: (nextRootElement: HTMLElement | null) => void\n  setRootWidth: (nextRootWidth: number) => void\n  subscribe: (observer: PaneLayoutStateObserver) => () => void\n}\n\nexport function createPaneLayoutController(): PaneLayoutController {\n  const observers: PaneLayoutStateObserver[] = []\n  const elements: HTMLElement[] = []\n  const optionsMap = new WeakMap<HTMLElement, PaneConfigOpts & {original: PaneConfigOpts}>()\n  const userCollapsedElementSet = new Set<HTMLElement>()\n  const cache: Partial<PaneResizeCache> = {}\n\n  // Mutable internal state\n  let rootElement: HTMLElement | null = null\n  let rootWidth = 0\n  let expandedElement: HTMLElement | null = null\n  let resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n  let resizing = false\n\n  function collapse(element: HTMLElement) {\n    userCollapsedElementSet.add(element)\n\n    if (expandedElement === element) {\n      expandedElement = null\n    }\n\n    _notifyObservers()\n  }\n\n  function expand(element: HTMLElement) {\n    userCollapsedElementSet.delete(element)\n\n    expandedElement = element\n\n    _notifyObservers()\n  }\n\n  function mount(element: HTMLElement, options: PaneConfigOpts) {\n    optionsMap.set(element, {...options, original: options})\n\n    elements.push(element)\n\n    if (rootElement) {\n      _sortElements(rootElement, elements)\n    }\n\n    expand(element)\n\n    return () => {\n      const idx = elements.indexOf(element)\n\n      if (idx > -1) {\n        elements.splice(idx, 1)\n      }\n\n      optionsMap.delete(element)\n\n      _notifyObservers()\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  function resize(type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) {\n    const leftIndex = elements.indexOf(leftElement)\n    const leftOptions = optionsMap.get(leftElement)\n\n    if (!leftOptions) return\n\n    const rightElement = elements[leftIndex + 1]\n    const rightOptions = optionsMap.get(rightElement)\n\n    if (!rightOptions) return\n\n    if (type === 'start') {\n      resizing = true\n\n      cache.left = {\n        element: leftElement,\n        flex: leftOptions.flex || 1,\n        width: leftElement.offsetWidth,\n      }\n\n      cache.right = {\n        element: rightElement,\n        flex: rightOptions.flex || 1,\n        width: rightElement.offsetWidth,\n      }\n\n      _notifyObservers()\n    }\n\n    if (type === 'move' && cache.left && cache.right) {\n      resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n\n      const {leftW, rightW, leftFlex, rightFlex} = _calcPaneResize(\n        cache as PaneResizeCache,\n        leftOptions,\n        rightOptions,\n        deltaX,\n      )\n\n      // update resize cache\n      resizeDataMap.set(leftElement, {flex: leftFlex, width: leftW})\n      resizeDataMap.set(rightElement, {flex: rightFlex, width: rightW})\n\n      _notifyObservers()\n    }\n\n    if (type === 'end') {\n      resizing = false\n\n      const leftResizeData = resizeDataMap.get(leftElement)\n      const rightResizeData = resizeDataMap.get(rightElement)\n\n      // Update left options\n      optionsMap.set(leftElement, {\n        ...leftOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: leftResizeData?.flex ?? leftOptions.flex,\n      })\n\n      // Update right options\n      optionsMap.set(rightElement, {\n        ...rightOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: rightResizeData?.flex ?? rightOptions.flex,\n      })\n\n      // Reset resize data map\n      resizeDataMap = new Map()\n\n      // Reset cache\n      delete cache.left\n      delete cache.right\n\n      _notifyObservers()\n    }\n  }\n\n  function setRootElement(nextRootElement: HTMLElement | null) {\n    rootElement = nextRootElement\n  }\n\n  function setRootWidth(nextRootWidth: number) {\n    rootWidth = nextRootWidth\n    _notifyObservers()\n  }\n\n  function subscribe(observer: PaneLayoutStateObserver) {\n    observers.push(observer)\n\n    return () => {\n      const idx = observers.push(observer)\n\n      if (idx > -1) {\n        observers.splice(idx, 1)\n      }\n    }\n  }\n\n  return {collapse, expand, mount, resize, setRootElement, setRootWidth, subscribe}\n\n  // eslint-disable-next-line complexity\n  function _notifyObservers() {\n    if (!rootWidth) return\n\n    // Create a reversed array of pane elements, so we can loop over them backwards.\n    // Place the expanded element first (so it has the least chance of being collapsed).\n    const _elements: HTMLElement[] = []\n    for (const element of elements) {\n      if (element !== expandedElement) {\n        _elements.unshift(element)\n      }\n    }\n    if (expandedElement) {\n      _elements.unshift(expandedElement)\n    }\n\n    const dataMap = new WeakMap<HTMLElement, PaneData>()\n    const len = _elements.length\n    const lastElement = _elements[0]\n    const collapsedWidth = (len - 1) * PANE_COLLAPSED_WIDTH\n\n    let remaingWidth = rootWidth - collapsedWidth\n\n    for (const element of _elements) {\n      const options = optionsMap.get(element)\n\n      if (!options) {\n        continue\n      }\n\n      const minWidth = options.currentMinWidth || options.minWidth || PANE_DEFAULT_MIN_WIDTH\n      const isLast = element === lastElement\n\n      // A pane is collapsed if:\n      // - it’s explictly collapsed by the user\n      const userCollapsed = userCollapsedElementSet.has(element)\n      // - it’s minimum width is larger than the remaining width\n      const sizeCollapsed = minWidth > remaingWidth\n      // - if the element is not the last (expanded pane)\n      const collapsed = isLast ? false : userCollapsed || sizeCollapsed\n\n      const resizeData = resizeDataMap.get(element)\n\n      // Collect pane data\n      dataMap.set(element, {\n        element: element,\n        collapsed: collapsed,\n        currentMinWidth: resizeData?.width ?? options.currentMinWidth,\n        currentMaxWidth: resizeData?.width ?? options.currentMaxWidth,\n        flex: resizeData?.flex ?? options.flex ?? 1,\n      })\n\n      // Update remaining width\n      if (collapsed) {\n        remaingWidth -= PANE_COLLAPSED_WIDTH\n      } else {\n        remaingWidth -= minWidth - PANE_COLLAPSED_WIDTH\n      }\n    }\n\n    const panes: PaneData[] = []\n\n    for (const element of elements) {\n      const data = dataMap.get(element)\n\n      if (data) panes.push(data)\n    }\n\n    for (const observer of observers) {\n      observer({\n        expandedElement: expandedElement || elements[elements.length - 1] || null,\n        panes,\n        resizing,\n      })\n    }\n  }\n}\n","import {type CardProps, useElementRect} from '@sanity/ui'\nimport {type HTMLProps, useEffect, useMemo, useState} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {Root} from './PaneLayout.styles'\nimport {createPaneLayoutController, type PaneLayoutState} from './paneLayoutController'\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneLayoutProps {\n  minWidth?: number\n  onCollapse?: () => void\n  onExpand?: () => void\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneLayout(\n  props: PaneLayoutProps &\n    CardProps &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'wrap'>,\n) {\n  const {children, minWidth, onCollapse, onExpand, ...restProps} = props\n  const [controller] = useState(() => createPaneLayoutController())\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const rootRect = useElementRect(rootElement)\n  const width = rootRect?.width || 0\n  const collapsed = width === undefined || !minWidth ? undefined : width < minWidth\n  const [state, setState] = useState<PaneLayoutState>({\n    expandedElement: null,\n    panes: [],\n    resizing: false,\n  })\n\n  // Set root element\n  useEffect(() => controller.setRootElement(rootElement), [controller, rootElement])\n\n  // Set root size\n  useEffect(() => controller.setRootWidth(width), [controller, width])\n\n  // Subscribe to state changes\n  useEffect(() => controller.subscribe(setState), [controller])\n\n  // Call the `onCollapse` and `onExpand` callbacks as the `collapsed` boolean changes\n  useEffect(() => {\n    if (collapsed === undefined) return\n    if (collapsed && onCollapse) onCollapse()\n    if (!collapsed && onExpand) onExpand()\n  }, [collapsed, onCollapse, onExpand])\n\n  // This is the context value that gives each pane the information they need\n  const paneLayout: PaneLayoutContextValue = useMemo(\n    () => ({\n      collapse: controller.collapse,\n      collapsed,\n      expand: controller.expand,\n      expandedElement: state.expandedElement,\n      mount: controller.mount,\n      panes: state.panes,\n      resize: controller.resize,\n      resizing: state.resizing,\n    }),\n    [collapsed, controller, state.expandedElement, state.panes, state.resizing],\n  )\n\n  return (\n    <PaneLayoutContext.Provider value={paneLayout}>\n      <Root\n        data-ui=\"PaneLayout\"\n        {...restProps}\n        data-collapsed={collapsed ? '' : undefined}\n        // The `data-resizing` attribute is used to improve cursor behavior\n        data-resizing={state.resizing ? '' : undefined}\n        // The `data-mounted` attribute is used to fade in the layout and prevent flash of\n        // non-collapsed panes\n        data-mounted={width ? '' : undefined}\n        ref={setRootElement}\n      >\n        {children}\n      </Root>\n    </PaneLayoutContext.Provider>\n  )\n}\n","/* eslint-disable camelcase */\n\nimport {negate} from 'lodash'\n\nimport {type _PaneMenuGroup, type _PaneMenuItem, type _PaneMenuNode} from './components/pane/types'\nimport {type DocumentFieldMenuActionNode, type PaneMenuItem, type PaneMenuItemGroup} from './types'\n\nexport function isMenuNodeButton(node: _PaneMenuNode): node is _PaneMenuItem | _PaneMenuGroup {\n  return (node.type === 'item' || node.type === 'group') && node.renderAsButton\n}\n\nexport const isNotMenuNodeButton = negate(isMenuNodeButton)\n\nexport function resolveMenuNodes(params: {\n  actionHandler: (item: PaneMenuItem) => void\n  fieldActions?: DocumentFieldMenuActionNode[]\n  menuItems: PaneMenuItem[]\n  menuItemGroups: PaneMenuItemGroup[]\n}): _PaneMenuNode[] {\n  const {fieldActions = [], menuItems, menuItemGroups} = params\n\n  const nodes: _PaneMenuNode[] = []\n\n  let keyOffset = 0\n\n  for (let i = 0; i < fieldActions.length; i += 1) {\n    const a = fieldActions[i]\n\n    nodes.push(mapFieldActionToPaneMenuNode(a, `${i}-${a.type}`))\n  }\n\n  keyOffset += nodes.length\n\n  const groups: _PaneMenuGroup[] = []\n\n  for (const itemGroup of menuItemGroups) {\n    const group = groups.find((g) => g.key === itemGroup.id)\n\n    if (!group) {\n      groups.push({\n        type: 'group',\n        key: itemGroup.id,\n\n        children: [],\n        expanded: true,\n        renderAsButton: false,\n        title: itemGroup.title,\n        i18n: itemGroup.i18n,\n      })\n    }\n  }\n\n  const ungroupedItems: _PaneMenuItem[] = []\n\n  for (let i = 0; i < menuItems.length; i += 1) {\n    const item = menuItems[i]\n\n    let group = item.group && groups.find((g) => g.key === item.group)\n\n    if (item.group && !group) {\n      group = {\n        type: 'group',\n        key: item.group,\n\n        expanded: true,\n        icon: item.icon,\n        title: item.group,\n        children: [],\n        renderAsButton: false,\n      }\n      groups.push(group)\n    }\n\n    if (group) {\n      group.children.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    } else {\n      ungroupedItems.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    }\n  }\n\n  return [...ungroupedItems, ...groups, ...nodes]\n}\n\nfunction mapFieldActionToPaneMenuNode(a: DocumentFieldMenuActionNode, key: string): _PaneMenuNode {\n  if (a.type === 'divider') {\n    return {\n      type: 'divider',\n      key,\n    }\n  }\n\n  if (a.type === 'group') {\n    return {\n      type: 'group',\n      key,\n\n      children: a.children.map((child, childIdx) =>\n        mapFieldActionToPaneMenuNode(child, `${key}-${childIdx}-${child.type}`),\n      ),\n      disabled: a.disabled,\n      expanded: a.expanded ?? true,\n      icon: a.icon,\n      title: a.title,\n      i18n: a.i18n,\n      renderAsButton: a.renderAsButton ?? false,\n    }\n  }\n\n  return {\n    type: 'item',\n    key,\n    intent: a.intent,\n    disabled: a.disabled,\n    icon: a.icon,\n    iconRight: a.iconRight,\n    onAction: a.onAction,\n    renderAsButton: a.renderAsButton ?? false,\n    selected: a.selected,\n    title: a.title,\n    i18n: a.i18n,\n    tone: a.tone,\n  }\n}\n","import {type ComponentProps, type ForwardedRef, forwardRef, type ReactNode, useMemo} from 'react'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, type ButtonProps} from '../../ui-components'\nimport {type PaneMenuItem} from '../types'\n\ntype RouterIntent = NonNullable<PaneMenuItem['intent']>\n\nexport const IntentButton = forwardRef(function IntentButton(\n  props: {\n    intent: RouterIntent\n  } & ButtonProps &\n    Omit<ComponentProps<typeof Button>, 'as' | 'href' | 'type'>,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {intent, ...restProps} = props\n\n  const Link = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      forwardRef(function Link(\n        linkProps: {children: ReactNode},\n        linkRef: ForwardedRef<HTMLAnchorElement>,\n      ) {\n        return (\n          <IntentLink\n            {...linkProps}\n            intent={intent.type}\n            params={intent.params}\n            ref={linkRef}\n            searchParams={intent.searchParams}\n          />\n        )\n      }),\n    [intent],\n  )\n\n  return props.disabled ? (\n    <Button {...restProps} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button {...restProps} as={Link} data-as=\"a\" ref={ref as ForwardedRef<HTMLButtonElement>} />\n  )\n})\n","import {type ComponentProps, type ReactNode} from 'react'\nimport {InsufficientPermissionsMessage, useCurrentUser, useTranslation} from 'sanity'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\ninterface InsufficientPermissionsMessageTooltipProps {\n  reveal: boolean\n  /**\n   * delegates to `InsufficientPermissionsMessage`'s `context` prop\n   * @see InsufficientPermissionsMessage\n   */\n  context: ComponentProps<typeof InsufficientPermissionsMessage>['context']\n  loading: boolean\n  children: ReactNode\n}\n\nexport function InsufficientPermissionsMessageTooltip({\n  reveal,\n  context,\n  loading,\n  children,\n}: InsufficientPermissionsMessageTooltipProps) {\n  const currentUser = useCurrentUser()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!reveal) {\n    return <>{children}</>\n  }\n\n  return (\n    <Tooltip\n      content={\n        loading ? (\n          t('insufficient-permissions-message-tooltip.loading-text')\n        ) : (\n          <InsufficientPermissionsMessage context={context} currentUser={currentUser} />\n        )\n      }\n      portal\n    >\n      {/* this wrapping div is to allow mouse events */}\n      {/* while the child element is disabled */}\n      <div>{children}</div>\n    </Tooltip>\n  )\n}\n","import {AddIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type ComponentProps, type ForwardedRef, forwardRef, useMemo} from 'react'\nimport {\n  type InitialValueTemplateItem,\n  isPublishedPerspective,\n  type ReleaseId,\n  type Template,\n  type TemplatePermissionsResult,\n  useGetI18nText,\n  useIsReleaseActive,\n  usePerspective,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, MenuButton, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {IntentButton} from '../IntentButton'\nimport {InsufficientPermissionsMessageTooltip} from './InsufficientPermissionsMessageTooltip'\n\nexport type PaneHeaderIntentProps = ComponentProps<typeof IntentButton>['intent']\n\nconst POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nconst getIntent = (\n  templates: Template[],\n  item: InitialValueTemplateItem,\n  version?: ReleaseId,\n): PaneHeaderIntentProps | null => {\n  const typeName = templates.find((t) => t.id === item.templateId)?.schemaType\n  if (!typeName) return null\n\n  const baseParams = {\n    template: item.templateId,\n    type: typeName,\n    version,\n    id: item.initialDocumentId,\n  }\n\n  return {\n    type: 'create',\n    params: item.parameters ? [baseParams, item.parameters] : baseParams,\n    searchParams: version ? [['perspective', version]] : undefined,\n  }\n}\n\ninterface PaneHeaderCreateButtonProps {\n  templateItems: InitialValueTemplateItem[]\n}\n\nexport function PaneHeaderCreateButton({templateItems}: PaneHeaderCreateButtonProps) {\n  const templates = useTemplates()\n  const {selectedReleaseId, selectedPerspective} = usePerspective()\n  const isReleaseActive = useIsReleaseActive()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n  const getI18nText = useGetI18nText([...templateItems, ...templates])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n\n  const nothingGranted = useMemo(() => {\n    return (\n      !isTemplatePermissionsLoading &&\n      templatePermissions?.every((permission) => !permission.granted)\n    )\n  }, [isTemplatePermissionsLoading, templatePermissions])\n\n  const permissionsById = useMemo(() => {\n    if (!templatePermissions) return {}\n    return templatePermissions.reduce<Record<string, TemplatePermissionsResult | undefined>>(\n      (acc, permission) => {\n        acc[permission.id] = permission\n        return acc\n      },\n      {},\n    )\n  }, [templatePermissions])\n\n  if (nothingGranted) {\n    return (\n      <InsufficientPermissionsMessageTooltip\n        context=\"create-document-type\"\n        reveal\n        loading={isTemplatePermissionsLoading}\n      >\n        <Button\n          aria-label={t('pane-header.disabled-created-button.aria-label')}\n          icon={AddIcon}\n          data-testid=\"action-intent-button\"\n          disabled\n          mode=\"bleed\"\n          // This button handles the tooltip in a special way, won't reuse the forced tooltip.\n          tooltipProps={null}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  const disabledByPerspectiveTooltipProps = {\n    content: tCore(\n      isPublishedPerspective(selectedPerspective)\n        ? 'new-document.disabled-published.tooltip'\n        : 'new-document.disabled-release.tooltip',\n    ),\n  }\n\n  if (templateItems.length === 1) {\n    const firstItem = templateItems[0]\n    const permissions = permissionsById[firstItem.id]\n    const disabled = !permissions?.granted || !isReleaseActive\n    const intent = getIntent(templates, firstItem, selectedReleaseId)\n    if (!intent) return null\n\n    return (\n      <InsufficientPermissionsMessageTooltip\n        reveal={disabled}\n        loading={isTemplatePermissionsLoading}\n        context=\"create-document-type\"\n      >\n        <IntentButton\n          aria-label={getI18nText(firstItem).title}\n          icon={firstItem.icon || AddIcon}\n          intent={intent}\n          mode=\"bleed\"\n          disabled={disabled}\n          data-testid=\"action-intent-button\"\n          tooltipProps={\n            disabled\n              ? disabledByPerspectiveTooltipProps\n              : {content: t('pane-header.create-new-button.tooltip')}\n          }\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          icon={AddIcon}\n          mode=\"bleed\"\n          disabled={!isReleaseActive}\n          data-testid=\"multi-action-intent-button\"\n          tooltipProps={\n            isReleaseActive\n              ? {content: t('pane-header.create-new-button.tooltip')}\n              : disabledByPerspectiveTooltipProps\n          }\n        />\n      }\n      id=\"create-menu\"\n      menu={\n        <Menu>\n          {templateItems.map((item, itemIndex) => {\n            const permissions = permissionsById[item.id]\n            const disabled = !permissions?.granted\n            const intent = getIntent(templates, item, selectedReleaseId)\n            const template = templates.find((i) => i.id === item.templateId)\n            if (!template || !intent) return null\n\n            const Link = forwardRef((linkProps, linkRef: ForwardedRef<never>) =>\n              disabled ? (\n                <button type=\"button\" disabled {...linkProps} ref={linkRef} />\n              ) : (\n                <IntentLink\n                  {...linkProps}\n                  intent={intent.type}\n                  params={intent.params}\n                  searchParams={intent.searchParams}\n                  ref={linkRef}\n                />\n              ),\n            )\n\n            Link.displayName = 'Link'\n\n            const {title} = getI18nText({\n              ...item,\n              // replace the title with the template title\n              title: item.title || getI18nText(template).title,\n            })\n\n            return (\n              <InsufficientPermissionsMessageTooltip\n                context=\"create-document-type\"\n                key={item.id}\n                reveal={disabled}\n                loading={isTemplatePermissionsLoading}\n              >\n                <MenuItem\n                  as={Link}\n                  data-as={disabled ? 'button' : 'a'}\n                  text={title}\n                  aria-label={\n                    disabled ? t('pane-header.disabled-created-button.aria-label') : title\n                  }\n                  disabled={disabled}\n                  data-testid={`action-intent-button-${itemIndex}`}\n                />\n              </InsufficientPermissionsMessageTooltip>\n            )\n          })}\n        </Menu>\n      }\n      popover={POPOVER_PROPS}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {uniqBy} from 'lodash'\nimport {memo, useCallback, useMemo} from 'react'\nimport {EMPTY_ARRAY, EMPTY_OBJECT, type InitialValueTemplateItem, useTemplates} from 'sanity'\n\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../menuNodes'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {PaneContextMenuButton} from '../pane/PaneContextMenuButton'\nimport {PaneHeaderActionButton} from '../pane/PaneHeaderActionButton'\nimport {PaneHeaderCreateButton} from './PaneHeaderCreateButton'\n\nfunction isNonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n\n/**\n * hashes an object to a string where the order of the keys don't matter\n */\nconst hashObject = (value: unknown) => {\n  const sortObject = (v: unknown): unknown => {\n    if (typeof v !== 'object' || !v) return v\n    if (Array.isArray(v)) return v.map(sortObject)\n    return Object.entries(v).sort(([keyA], [keyB]) => keyA.localeCompare(keyB, 'en'))\n  }\n\n  const normalize = (v: unknown) => JSON.parse(JSON.stringify(v))\n\n  return JSON.stringify(sortObject(normalize(value)))\n}\n\ninterface PaneHeaderActionsProps {\n  initialValueTemplateItems?: InitialValueTemplateItem[]\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  actionHandlers?: Record<string, StructureToolPaneActionHandler>\n}\n\nexport const PaneHeaderActions = memo(function PaneHeaderActions(props: PaneHeaderActionsProps) {\n  const {\n    initialValueTemplateItems: initialValueTemplateItemsFromStructure = EMPTY_ARRAY,\n    menuItems = EMPTY_ARRAY,\n    menuItemGroups = EMPTY_ARRAY,\n    actionHandlers = EMPTY_OBJECT as Record<string, StructureToolPaneActionHandler>,\n  } = props\n\n  const templates = useTemplates()\n\n  const handleAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (typeof item.action === 'string' && !(item.action in actionHandlers)) {\n        console.warn('No handler for action:', item.action)\n        return false\n      }\n\n      const handler =\n        // eslint-disable-next-line no-nested-ternary\n        typeof item.action === 'function'\n          ? item.action\n          : typeof item.action === 'string'\n            ? actionHandlers[item.action]\n            : null\n\n      if (handler) {\n        handler(item.params as Record<string, string>)\n        return true\n      }\n\n      return false\n    },\n    [actionHandlers],\n  )\n\n  const menuNodes = useMemo(\n    () =>\n      resolveMenuNodes({\n        actionHandler: handleAction,\n        menuItemGroups,\n        menuItems: menuItems\n          // remove items with `create` intents because those will get combined\n          // into one action button (see `initialValueTemplateItemFromMenuItems`)\n          .filter((item) => item.intent?.type !== 'create'),\n      }),\n    [handleAction, menuItemGroups, menuItems],\n  )\n\n  const actionNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n  const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n\n  const initialValueTemplateItemFromMenuItems = useMemo(() => {\n    return menuItems\n      .map((item, menuItemIndex) => {\n        if (item.intent?.type !== 'create') return null\n\n        const {params} = item.intent\n        if (!params) return null\n\n        const intentParams = Array.isArray(params) ? params[0] : params\n        const templateParams = Array.isArray(params) ? params[1] : undefined\n\n        // fallback to the schema type name as the template ID.\n        // by default, the initial template values are populated from every\n        // document type in the schema\n        const templateId = intentParams.template || intentParams.type\n        if (!templateId) return null\n\n        // eslint-disable-next-line max-nested-callbacks\n        const template = templates.find((t) => t.id === templateId)\n        // the template doesn't exist then the action might be disabled\n        if (!template) return null\n\n        const initialDocumentId = intentParams.id\n\n        return {\n          item,\n          template,\n          templateParams,\n          menuItemIndex,\n          initialDocumentId,\n        }\n      })\n      .filter(isNonNullable)\n      .map(({initialDocumentId, item, template, menuItemIndex, templateParams}) => {\n        const initialValueTemplateItem: InitialValueTemplateItem = {\n          id: `menuItem${menuItemIndex}`,\n          initialDocumentId,\n          templateId: template.id,\n          type: 'initialValueTemplateItem',\n          title: item.title || template.title,\n          i18n: item.i18n || template.i18n,\n          icon: item.icon as InitialValueTemplateItem['icon'],\n          description: template.description,\n          parameters: templateParams,\n          schemaType: template.schemaType,\n        }\n\n        return initialValueTemplateItem\n      })\n  }, [menuItems, templates])\n\n  const combinedInitialValueTemplates = useMemo(() => {\n    // this de-dupes create actions\n    return uniqBy(\n      [...initialValueTemplateItemFromMenuItems, ...initialValueTemplateItemsFromStructure],\n      (item) => hashObject([item.initialDocumentId, item.templateId, item.parameters]),\n    )\n  }, [initialValueTemplateItemFromMenuItems, initialValueTemplateItemsFromStructure])\n\n  return (\n    <Flex gap={1}>\n      {combinedInitialValueTemplates.length > 0 && (\n        <PaneHeaderCreateButton templateItems={combinedInitialValueTemplates} />\n      )}\n\n      {actionNodes.map((node) => (\n        <PaneHeaderActionButton key={node.key} node={node} />\n      ))}\n\n      {contextMenuNodes.length > 0 && <PaneContextMenuButton nodes={contextMenuNodes} />}\n    </Flex>\n  )\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {type GeneralPreviewLayoutKey, SanityDefaultPreview, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nexport interface MissingSchemaTypeProps {\n  layout?: GeneralPreviewLayoutKey\n  value: SanityDocument\n}\n\nexport function MissingSchemaType(props: MissingSchemaTypeProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {layout, value} = props\n\n  return (\n    <SanityDefaultPreview\n      title={\n        <em>\n          <Translate\n            t={t}\n            i18nKey=\"pane-item.missing-schema-type.title\"\n            components={{Code: 'code'}}\n            values={{documentType: value._type}}\n          />\n        </em>\n      }\n      subtitle={\n        <Translate\n          t={t}\n          i18nKey=\"pane-item.missing-schema-type.subtitle\"\n          components={{Code: 'code'}}\n          values={{documentId: value._id}}\n        />\n      }\n      // eslint-disable-next-line react/jsx-no-bind\n      media={() => <WarningOutlineIcon />}\n      layout={layout}\n    />\n  )\n}\n","import {ChevronRightIcon, DocumentIcon, FolderIcon} from '@sanity/icons'\nimport {\n  isSanityDocument,\n  type PreviewValue,\n  type SanityDocument,\n  type SchemaType,\n} from '@sanity/types'\nimport {Box, type CardProps, Text} from '@sanity/ui'\nimport {\n  type ComponentType,\n  type MouseEvent,\n  startTransition,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  type FIXME,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  PreviewCard,\n  SanityDefaultPreview,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n  useEditState,\n  useSchema,\n} from 'sanity'\n\nimport {MissingSchemaType} from '../MissingSchemaType'\nimport {usePaneRouter} from '../paneRouter'\nimport {PaneItemPreview} from './PaneItemPreview'\n\ninterface PaneItemProps {\n  id: string\n  layout?: GeneralPreviewLayoutKey\n  icon?: ComponentType<any> | false\n  pressed?: boolean\n  selected?: boolean\n  title?: string\n  value?: PreviewValue | SanityDocument\n  schemaType?: SchemaType\n  margin?: CardProps['margin']\n  marginBottom?: CardProps['marginBottom']\n  marginTop?: CardProps['marginTop']\n}\n\n/**\n * Return `false` if we explicitly disable the icon.\n * Otherwise return the passed icon or the schema type icon as a backup.\n */\nexport function getIconWithFallback(\n  icon: ComponentType<any> | false | undefined,\n  schemaType: SchemaType | undefined,\n  defaultIcon: ComponentType<any>,\n): ComponentType<any> | false {\n  if (icon === false) {\n    return false\n  }\n\n  return icon || (schemaType && schemaType.icon) || defaultIcon || false\n}\n\nexport function PaneItem(props: PaneItemProps) {\n  const {\n    icon,\n    id,\n    layout = 'default',\n    pressed,\n    schemaType,\n    selected,\n    title,\n    value,\n    margin,\n    marginBottom,\n    marginTop,\n  } = props\n  const schema = useSchema()\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ChildLink} = usePaneRouter()\n  const documentPresence = useDocumentPresence(id)\n  const hasSchemaType = Boolean(schemaType && schemaType.name && schema.get(schemaType.name))\n  const [clicked, setClicked] = useState<boolean>(false)\n\n  const preview = useMemo(() => {\n    if (value && isSanityDocument(value)) {\n      if (!schemaType || !hasSchemaType) {\n        return <MissingSchemaType value={value} />\n      }\n\n      return (\n        <PaneItemPreview\n          documentPreviewStore={documentPreviewStore}\n          icon={getIconWithFallback(icon, schemaType, DocumentIcon)}\n          layout={layout}\n          schemaType={schemaType}\n          value={value}\n          presence={documentPresence}\n        />\n      )\n    }\n\n    // Always render non-document values as compact previews\n    return (\n      <SanityDefaultPreview\n        status={\n          <Box style={{opacity: 0.5}}>\n            <Text muted size={1}>\n              <ChevronRightIcon />\n            </Text>\n          </Box>\n        }\n        icon={getIconWithFallback(icon, schemaType, FolderIcon)}\n        layout=\"compact\"\n        title={title}\n      />\n    )\n  }, [\n    documentPreviewStore,\n    hasSchemaType,\n    icon,\n    layout,\n    schemaType,\n    title,\n    value,\n    documentPresence,\n  ])\n\n  const handleClick = useCallback((e: MouseEvent<HTMLElement>) => {\n    if (e.metaKey) {\n      setClicked(false)\n      return\n    }\n\n    setClicked(true)\n  }, [])\n\n  // Reset `clicked` state when `selected` prop changes\n  useEffect(() => setClicked(false), [selected])\n\n  // Preloads the edit state on hover, using concurrent rendering with `startTransition` so preloads can be interrupted and not block rendering\n  const [preloading, setPreload] = useState(false)\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null)\n  const handleMouseEnter = useCallback(() => {\n    timeoutRef.current = setTimeout(() => startTransition(() => setPreload(true)), 400)\n  }, [])\n  const handleMouseLeave = useCallback(() => {\n    if (timeoutRef.current) clearTimeout(timeoutRef.current)\n    startTransition(() => setPreload(false))\n  }, [])\n\n  return (\n    <PreviewCard\n      data-testid={`pane-item-${title}`}\n      __unstable_focusRing\n      as={ChildLink as FIXME}\n      // @ts-expect-error - `childId` is a valid prop on `ChildLink`\n      childId={id}\n      data-as=\"a\"\n      margin={margin}\n      marginBottom={marginBottom}\n      marginTop={marginTop}\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      pressed={pressed}\n      radius={2}\n      selected={selected || clicked}\n      sizing=\"border\"\n      tabIndex={-1}\n      tone=\"inherit\"\n    >\n      {preview}\n      {preloading && schemaType?.name && value && isSanityDocument(value) && (\n        <PreloadDocumentPane documentId={id} documentType={schemaType.name} />\n      )}\n    </PreviewCard>\n  )\n}\n\nfunction PreloadDocumentPane(props: {documentId: string; documentType: string}) {\n  const {documentId, documentType} = props\n  // Preload the edit state for the document, and keep it alive until mouse leave\n  useEditState(getPublishedId(documentId), documentType)\n\n  return null\n}\nPreloadDocumentPane.displayName = 'PreloadDocumentPane'\n","import {memo, type ReactNode} from 'react'\nimport {\n  type DocumentActionDescription,\n  type DocumentActionGroup,\n  type DocumentActionProps,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Action<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderActionCollectionProps {\n  actions: Action<DocumentActionProps, DocumentActionDescription>[]\n  actionProps: Omit<DocumentActionProps, 'onComplete'>\n  children: (props: {states: DocumentActionDescription[]}) => ReactNode\n  onActionComplete?: () => void\n  group?: DocumentActionGroup\n}\n\n/** @internal */\nexport const RenderActionCollectionState = memo((props: RenderActionCollectionProps) => {\n  const {actions, children, actionProps, onActionComplete, group} = props\n\n  return (\n    <GetHookCollectionState<Omit<DocumentActionProps, 'onComplete'>, DocumentActionDescription>\n      onReset={onActionComplete}\n      hooks={actions}\n      args={actionProps}\n      group={group}\n    >\n      {children}\n    </GetHookCollectionState>\n  )\n})\nRenderActionCollectionState.displayName = 'Memo(RenderActionCollectionState)'\n","import {memo, type ReactNode} from 'react'\nimport {\n  type DocumentBadgeDescription,\n  type DocumentBadgeProps,\n  type EditStateFor,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Badge<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderBadgeCollectionProps {\n  badges: Badge<DocumentBadgeProps, DocumentBadgeDescription>[]\n  badgeProps: EditStateFor\n  children: (props: {states: DocumentBadgeDescription[]}) => ReactNode\n}\n\n/** @internal */\nexport const RenderBadgeCollectionState = memo((props: RenderBadgeCollectionProps) => {\n  const {badges, children, badgeProps} = props\n\n  return (\n    <GetHookCollectionState<EditStateFor, DocumentBadgeDescription>\n      hooks={badges}\n      args={badgeProps}\n    >\n      {children}\n    </GetHookCollectionState>\n  )\n})\nRenderBadgeCollectionState.displayName = 'Memo(RenderBadgeCollectionState)'\n","import {useMemo} from 'react'\nimport {Subject} from 'rxjs'\n\nimport {type PathSyncChannel, type PathSyncState} from '../types/pathSyncChannel'\n\n/**\n * @internal\n */\nexport function useCreatePathSyncChannel(): PathSyncChannel {\n  return useMemo(() => new Subject<PathSyncState>(), [])\n}\n","/**\n * @internal\n */\nexport const DIFF_VIEW_SEARCH_PARAMETER = 'diffView'\n\n/**\n * @internal\n */\nexport const DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER = 'previousDocument'\n\n/**\n * @internal\n */\nexport const DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER = 'nextDocument'\n\n/**\n * @internal\n */\nexport const DIFF_SEARCH_PARAM_DELIMITER = ','\n","import {fromPairs, toPairs} from 'lodash'\nimport {useCallback} from 'react'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  DIFF_SEARCH_PARAM_DELIMITER,\n  DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_SEARCH_PARAMETER,\n} from '../constants'\nimport {type DiffViewMode} from '../types/diffViewMode'\n\ntype NavigateDiffView = (\n  options: {\n    mode?: DiffViewMode\n  } & Partial<\n    Record<\n      'previousDocument' | 'nextDocument',\n      {\n        type: string\n        id: string\n      }\n    >\n  >,\n) => void\n\nexport interface DiffViewRouter {\n  navigateDiffView: NavigateDiffView\n  exitDiffView: () => void\n}\n\n/**\n * @internal\n */\nexport function useDiffViewRouter(): DiffViewRouter {\n  const {navigate, state: routerState} = useRouter()\n\n  const navigateDiffView = useCallback<NavigateDiffView>(\n    ({mode, previousDocument, nextDocument}) => {\n      const next = {\n        ...fromPairs(routerState._searchParams),\n        ...(mode\n          ? {\n              [DIFF_VIEW_SEARCH_PARAMETER]: mode,\n            }\n          : {}),\n        ...(previousDocument\n          ? {\n              [DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER]: [\n                previousDocument.type,\n                previousDocument.id,\n              ].join(DIFF_SEARCH_PARAM_DELIMITER),\n            }\n          : {}),\n        ...(nextDocument\n          ? {\n              [DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER]: [nextDocument.type, nextDocument.id].join(\n                DIFF_SEARCH_PARAM_DELIMITER,\n              ),\n            }\n          : {}),\n      }\n\n      navigate({\n        ...routerState,\n        _searchParams: toPairs(next),\n      })\n    },\n    [navigate, routerState],\n  )\n\n  const exitDiffView = useCallback(() => {\n    navigate({\n      ...routerState,\n      _searchParams: (routerState._searchParams ?? []).filter(\n        ([key]) =>\n          ![\n            DIFF_VIEW_SEARCH_PARAMETER,\n            DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n            DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n          ].includes(key),\n      ),\n    })\n  }, [navigate, routerState])\n\n  return {\n    navigateDiffView,\n    exitDiffView,\n  }\n}\n","/**\n * @internal\n */\nexport const diffViewModes = ['version'] as const\n\n/**\n * @internal\n */\nexport type DiffViewMode = (typeof diffViewModes)[number]\n","import {useEffect, useMemo} from 'react'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  DIFF_SEARCH_PARAM_DELIMITER,\n  DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_SEARCH_PARAMETER,\n} from '../constants'\nimport {type DiffViewMode, diffViewModes} from '../types/diffViewMode'\n\nfunction isDiffViewMode(maybeDiffViewMode: unknown): maybeDiffViewMode is DiffViewMode {\n  return diffViewModes.includes(maybeDiffViewMode as DiffViewMode)\n}\n\ntype DiffViewState =\n  | {\n      isActive: true\n      state: 'ready'\n      mode: DiffViewMode\n      documents: Record<\n        'previous' | 'next',\n        {\n          type: string\n          id: string\n        }\n      >\n    }\n  | {\n      isActive: true\n      state: 'error'\n      mode: DiffViewMode\n      documents?: never\n    }\n  | {\n      isActive: false\n      state?: never\n      mode?: never\n      documents?: never\n    }\n\nexport function useDiffViewState({\n  onParamsError,\n}: {\n  onParamsError?: (errors: DiffViewStateErrorWithInput[]) => void\n} = {}): DiffViewState {\n  const {state: routerState} = useRouter()\n  const searchParams = new URLSearchParams(routerState._searchParams)\n  const previousDocument = searchParams.get(DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER)\n  const nextDocument = searchParams.get(DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER)\n  const mode = searchParams.get(DIFF_VIEW_SEARCH_PARAMETER)\n  const anyParamSet = [previousDocument, nextDocument, mode].some((param) => param !== null)\n\n  const params = useMemo(\n    () =>\n      parseParams({\n        previousDocument: previousDocument ?? '',\n        nextDocument: nextDocument ?? '',\n        mode: mode ?? '',\n      }),\n    [mode, nextDocument, previousDocument],\n  )\n\n  useEffect(() => {\n    if (params.result === 'error' && anyParamSet) {\n      onParamsError?.(params.errors)\n    }\n  }, [anyParamSet, onParamsError, params])\n\n  if (params.result === 'error') {\n    return {\n      isActive: false,\n    }\n  }\n\n  return {\n    state: 'ready',\n    isActive: true,\n    ...params.params,\n  }\n}\n\ntype DiffViewStateError =\n  | 'invalidModeParam'\n  | 'invalidPreviousDocumentParam'\n  | 'invalidNextDocumentParam'\n\ntype DiffViewStateErrorWithInput = [error: DiffViewStateError, input: unknown]\n\ninterface ParamsSuccess {\n  result: 'success'\n  params: Pick<DiffViewState & {state: 'ready'}, 'mode' | 'documents'>\n}\n\ninterface ParamsError {\n  result: 'error'\n  errors: DiffViewStateErrorWithInput[]\n}\n\nfunction parseParams({\n  previousDocument,\n  nextDocument,\n  mode,\n}: {\n  previousDocument: string\n  nextDocument: string\n  mode: string\n}): ParamsSuccess | ParamsError {\n  const errors: DiffViewStateErrorWithInput[] = []\n\n  const [previousDocumentType, previousDocumentId] = previousDocument\n    .split(DIFF_SEARCH_PARAM_DELIMITER)\n    .filter(Boolean)\n\n  const [nextDocumentType, nextDocumentId] = nextDocument\n    .split(DIFF_SEARCH_PARAM_DELIMITER)\n    .filter(Boolean)\n\n  if (!isDiffViewMode(mode)) {\n    errors.push(['invalidModeParam', mode])\n  }\n\n  if (typeof previousDocumentType === 'undefined' || typeof previousDocumentId === 'undefined') {\n    errors.push(['invalidPreviousDocumentParam', previousDocument])\n  }\n\n  if (typeof nextDocumentType === 'undefined' || typeof nextDocumentId === 'undefined') {\n    errors.push(['invalidNextDocumentParam', nextDocument])\n  }\n\n  if (errors.length !== 0) {\n    return {\n      result: 'error',\n      errors,\n    }\n  }\n\n  return {\n    result: 'success',\n    params: {\n      mode,\n      documents: {\n        previous: {\n          type: previousDocumentType,\n          id: previousDocumentId,\n        },\n        next: {\n          type: nextDocumentType,\n          id: nextDocumentId,\n        },\n      },\n    },\n  } as ParamsSuccess\n}\n","import {useEffect} from 'react'\nimport ScrollMirror from 'scrollmirror'\n\n/**\n * Use the ScrollMirror library to synchronise the scroll position for an array of elements.\n *\n * @internal\n */\nexport function useScrollMirror(elements: (HTMLElement | null)[]): void {\n  useEffect(() => {\n    const existentElements = elements.filter((element) => element !== null)\n\n    if (existentElements.length === 0) {\n      return undefined\n    }\n\n    const scrollMirror = new ScrollMirror(existentElements)\n    return () => scrollMirror.destroy()\n  }, [elements])\n}\n","import {CloseIcon, LockIcon, TransferIcon} from '@sanity/icons'\nimport {\n  Box,\n  // eslint-disable-next-line no-restricted-imports -- we need more control over how the `Button` component is rendered\n  Button,\n  type ButtonTone,\n  Flex,\n  Menu,\n  // eslint-disable-next-line no-restricted-imports -- the `VersionModeHeader` component needs more control over how the `MenuItem` component is rendered\n  MenuItem,\n  Stack,\n  Text,\n} from '@sanity/ui'\nimport {type TFunction} from 'i18next'\nimport {type ComponentProps, type ComponentType, useCallback, useMemo} from 'react'\nimport {\n  type DocumentLayoutProps,\n  formatRelativeLocalePublishDate,\n  getDraftId,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  getVersionId,\n  isDraftId,\n  isPublishedId,\n  isReleaseDocument,\n  isReleaseScheduledOrScheduling,\n  ReleaseAvatar,\n  type ReleaseDocument,\n  useActiveReleases,\n  useDocumentVersions,\n  useEditState,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {MenuButton} from '../../../../ui-components/menuButton/MenuButton'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useDiffViewRouter} from '../../hooks/useDiffViewRouter'\nimport {useDiffViewState} from '../../hooks/useDiffViewState'\n\nconst VersionModeHeaderLayout = styled.header`\n  display: grid;\n  grid-area: header;\n  grid-template-columns: 1fr min-content 1fr;\n  border-block-end: 1px solid var(--card-border-color);\n`\n\nconst VersionModeHeaderLayoutSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\n/**\n * The header component that is rendered when diff view is being used to compare versions of a\n * document.\n *\n * @internal\n */\nexport const VersionModeHeader: ComponentType<\n  {state: 'pending' | 'ready' | 'error'} & Pick<DocumentLayoutProps, 'documentId'>\n> = ({documentId, state}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {data: documentVersions} = useDocumentVersions({documentId})\n  const {exitDiffView, navigateDiffView} = useDiffViewRouter()\n  const {documents} = useDiffViewState()\n  const activeReleases = useActiveReleases()\n  const releasesIds = documentVersions.flatMap((id) => getVersionFromId(id) ?? [])\n\n  const releases = useMemo(() => {\n    return activeReleases.data.filter((release) => {\n      const releaseId = getReleaseIdFromReleaseDocumentId(release._id)\n      return typeof releaseId !== 'undefined' && releasesIds.includes(releaseId)\n    })\n  }, [activeReleases.data, releasesIds])\n\n  const onSelectPreviousRelease = useCallback(\n    (selectedDocumentId: string): void => {\n      if (typeof documents?.previous !== 'undefined') {\n        navigateDiffView({\n          previousDocument: {\n            ...documents.previous,\n            id: selectedDocumentId,\n          },\n        })\n      }\n    },\n    [documents?.previous, navigateDiffView],\n  )\n\n  const onSelectNextRelease = useCallback(\n    (selectedDocumentId: string): void => {\n      if (typeof documents?.next !== 'undefined') {\n        navigateDiffView({\n          nextDocument: {\n            ...documents.next,\n            id: selectedDocumentId,\n          },\n        })\n      }\n    },\n    [documents?.next, navigateDiffView],\n  )\n\n  return (\n    <VersionModeHeaderLayout>\n      <VersionModeHeaderLayoutSection>\n        <Box padding={4}>\n          <Text as=\"h1\" size={1} muted>\n            {t('compare-versions.title')}\n          </Text>\n        </Box>\n        {typeof documents?.previous !== 'undefined' && (\n          <VersionMenu\n            releases={releases}\n            onSelectRelease={onSelectPreviousRelease}\n            role=\"previous\"\n            documentId={documentId}\n            state={state}\n            document={documents.previous}\n          />\n        )}\n      </VersionModeHeaderLayoutSection>\n      <Flex align=\"center\" paddingX={3}>\n        <Text size={1}>\n          <TransferIcon />\n        </Text>\n      </Flex>\n      <VersionModeHeaderLayoutSection>\n        {typeof documents?.next !== 'undefined' && (\n          <VersionMenu\n            releases={releases}\n            onSelectRelease={onSelectNextRelease}\n            role=\"next\"\n            documentId={documentId}\n            state={state}\n            document={documents.next}\n          />\n        )}\n        <Box\n          padding={3}\n          style={{\n            justifySelf: 'end',\n          }}\n        >\n          <Button icon={CloseIcon} mode=\"bleed\" onClick={exitDiffView} padding={2} />\n        </Box>\n      </VersionModeHeaderLayoutSection>\n    </VersionModeHeaderLayout>\n  )\n}\n\ninterface VersionMenuProps {\n  state: 'pending' | 'ready' | 'error'\n  releases: ReleaseDocument[]\n  role: 'previous' | 'next'\n  onSelectRelease: (releaseId: string) => void\n  documentId: string\n  document: {\n    type: string\n    id: string\n  }\n}\n\nconst VersionMenu: ComponentType<VersionMenuProps> = ({\n  releases = [],\n  onSelectRelease,\n  role,\n  documentId,\n  document,\n}) => {\n  const {published, draft} = useEditState(getPublishedId(document.id), document.type)\n  const selected = useMemo(() => findRelease(document.id, releases), [document.id, releases])\n  const {t: tStructure} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  return (\n    <MenuButton\n      id={role}\n      button={\n        <Button\n          type=\"button\"\n          mode=\"bleed\"\n          padding={2}\n          paddingRight={3}\n          radius=\"full\"\n          selected\n          {...getMenuButtonProps({selected, tCore, tStructure})}\n        />\n      }\n      menu={\n        <Menu>\n          {published && (\n            <VersionMenuItem\n              type=\"published\"\n              onSelect={onSelectRelease}\n              isSelected={selected === 'published'}\n              documentId={documentId}\n            />\n          )}\n          {draft && (\n            <VersionMenuItem\n              type=\"draft\"\n              onSelect={onSelectRelease}\n              isSelected={selected === 'draft'}\n              documentId={documentId}\n            />\n          )}\n          {releases.map((release) => (\n            <VersionMenuItem\n              key={release._id}\n              release={release}\n              onSelect={onSelectRelease}\n              isSelected={typeof selected !== 'string' && selected?._id === release._id}\n              documentId={documentId}\n            />\n          ))}\n        </Menu>\n      }\n    />\n  )\n}\n\ntype VersionMenuItemProps = {\n  onSelect: (releaseId: string) => void\n  isSelected?: boolean\n  documentId: string\n} & (\n  | {\n      release: ReleaseDocument\n      type?: never\n    }\n  | {\n      type: 'published' | 'draft'\n      release?: never\n    }\n)\n\nconst VersionMenuItem: ComponentType<VersionMenuItemProps> = ({\n  type,\n  release,\n  onSelect,\n  isSelected,\n  documentId,\n}) => {\n  const {t: tCore} = useTranslation()\n  const {t: tStructure} = useTranslation(structureLocaleNamespace)\n\n  const onClick = useCallback(() => {\n    if (type === 'draft') {\n      onSelect(getDraftId(documentId))\n      return\n    }\n\n    if (type === 'published') {\n      onSelect(getPublishedId(documentId))\n      return\n    }\n\n    if (typeof release?._id !== 'undefined') {\n      onSelect(getVersionId(documentId, getReleaseIdFromReleaseDocumentId(release._id)))\n    }\n  }, [type, onSelect, documentId, release?._id])\n\n  if (type) {\n    const tone: ButtonTone = type === 'published' ? 'positive' : 'caution'\n\n    return (\n      <MenuItem padding={1} paddingRight={3} onClick={onClick} pressed={isSelected}>\n        <Flex gap={1}>\n          <ReleaseAvatar padding={2} tone={tone} />\n          <Box paddingY={2}>\n            <Text size={1} weight=\"medium\">\n              {tStructure(['compare-versions.status', type].join('.'))}\n            </Text>\n          </Box>\n        </Flex>\n      </MenuItem>\n    )\n  }\n\n  const tone: ButtonTone = release ? getReleaseTone(release) : 'neutral'\n\n  return (\n    <MenuItem padding={1} paddingRight={3} onClick={onClick} pressed={isSelected}>\n      <Flex gap={1}>\n        <ReleaseAvatar padding={2} tone={tone} />\n        <Stack flex={1} paddingY={2} paddingRight={2} space={2}>\n          <Text size={1} weight=\"medium\">\n            {release.metadata.title || tCore('release.placeholder-untitled-release')}\n          </Text>\n          {['asap', 'undecided'].includes(release.metadata.releaseType) && (\n            <Text muted size={1}>\n              {tCore(`release.type.${release.metadata.releaseType}`)}\n            </Text>\n          )}\n          {release.metadata.releaseType === 'scheduled' && (\n            <Text muted size={1}>\n              {formatRelativeLocalePublishDate(release)}\n            </Text>\n          )}\n        </Stack>\n        <Flex flex=\"none\">\n          {isReleaseScheduledOrScheduling(release) && (\n            <Box padding={2}>\n              <Text size={1}>\n                <LockIcon />\n              </Text>\n            </Box>\n          )}\n        </Flex>\n      </Flex>\n    </MenuItem>\n  )\n}\n\nfunction getMenuButtonProps({\n  selected,\n  tCore,\n  tStructure,\n}: {\n  selected?: ReleaseDocument | 'published' | 'draft'\n  tCore: TFunction\n  tStructure: TFunction\n}): Pick<ComponentProps<typeof Button>, 'text' | 'tone' | 'icon' | 'iconRight' | 'disabled'> {\n  if (typeof selected === 'undefined') {\n    return {\n      text: tCore('common.loading'),\n      tone: 'neutral',\n      disabled: true,\n    }\n  }\n\n  if (isReleaseDocument(selected)) {\n    const tone: ButtonTone = selected ? getReleaseTone(selected) : 'neutral'\n\n    return {\n      text: selected?.metadata.title || tCore('release.placeholder-untitled-release'),\n      icon: <ReleaseAvatar padding={1} tone={tone} />,\n      iconRight: selected && isReleaseScheduledOrScheduling(selected) ? <LockIcon /> : undefined,\n      tone,\n    }\n  }\n\n  const tone: ButtonTone = selected === 'published' ? 'positive' : 'caution'\n\n  return {\n    text: tStructure(['compare-versions.status', selected].join('.')),\n    icon: <ReleaseAvatar padding={1} tone={tone} />,\n    tone,\n  }\n}\n\n/**\n * If the provided document id represents a version, find and return the corresponding release\n * document. Otherwise, return a string literal signifying whether the document id represents a\n * published or draft document.\n */\nfunction findRelease(\n  documentId: string,\n  releases: ReleaseDocument[],\n): ReleaseDocument | 'published' | 'draft' | undefined {\n  if (isPublishedId(documentId)) {\n    return 'published'\n  }\n\n  if (isDraftId(documentId)) {\n    return 'draft'\n  }\n\n  return releases.find(\n    ({_id}) => getReleaseIdFromReleaseDocumentId(_id) === getVersionFromId(documentId),\n  )\n}\n","import {styled} from 'styled-components'\n\nexport const DialogLayout = styled.div`\n  --offset-block: 40px;\n  display: grid;\n  height: calc(100vh - var(--offset-block));\n  min-height: 0;\n  overflow: hidden;\n  grid-template-areas:\n    'header header'\n    'previous-document next-document';\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: min-content minmax(0, 1fr);\n`\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, type PluginOptions} from 'sanity'\n\n/**\n * Pick the document layout component when composing the component middleware chain.\n */\nexport function pickDocumentLayoutComponent(plugin: PluginOptions) {\n  return plugin.document?.components?.unstable_layout as ComponentType<\n    Omit<DocumentLayoutProps, 'renderDefault'>\n  >\n}\n","import {type Path} from '@sanity/types'\nimport {useCallback, useMemo} from 'react'\nimport deepEquals from 'react-fast-compare'\nimport {distinctUntilChanged, filter, map, type Observable} from 'rxjs'\n\nimport {type PathSyncChannelProps, type PathSyncState} from '../types/pathSyncChannel'\n\ntype Push = (state: PathSyncState) => void\n\n/**\n * Synchronise the open path between multiple document panes.\n *\n * @internal\n */\nexport function usePathSyncChannel({syncChannel, id}: PathSyncChannelProps): {\n  push: Push\n  path: Observable<Path>\n} {\n  const push = useCallback<Push>(\n    (state) => syncChannel.next({...state, source: id}),\n    [id, syncChannel],\n  )\n\n  const path = useMemo(\n    () =>\n      syncChannel.pipe(\n        distinctUntilChanged<PathSyncState>((previous, next) =>\n          deepEquals(previous.path, next.path),\n        ),\n        filter(({source}) => source !== id),\n        map((state) => state.path),\n      ),\n    [id, syncChannel],\n  )\n\n  return {\n    path,\n    push,\n  }\n}\n","import {styled} from 'styled-components'\n\nexport const Scroller = styled.div`\n  position: relative;\n  height: 100%;\n  overflow: auto;\n  scroll-behavior: smooth;\n  scrollbar-width: var(--scrollbar-width);\n  overscroll-behavior: contain;\n  will-change: scroll-position;\n`\n","import {type Path, type SanityDocument} from '@sanity/types'\nimport {\n  BoundaryElementProvider,\n  Card,\n  Container as UiContainer,\n  DialogProvider,\n  PortalProvider,\n} from '@sanity/ui'\nimport {noop} from 'lodash'\nimport {\n  type ComponentType,\n  type CSSProperties,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  ChangeIndicatorsTracker,\n  createPatchChannel,\n  FormBuilder,\n  getPublishedId,\n  getVersionFromId,\n  isDraftId,\n  isPublishedId,\n  isVersionId,\n  LoadingBlock,\n  useDocumentForm,\n  useEditState,\n  useMiddlewareComponents,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {CommentsEnabledContext, ConnectorContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {pickDocumentLayoutComponent} from '../../panes/document/document-layout/pickDocumentLayoutComponent'\nimport {usePathSyncChannel} from '../hooks/usePathSyncChannel'\nimport {type PathSyncChannel} from '../types/pathSyncChannel'\nimport {Scroller} from './Scroller'\n\nconst DiffViewPaneLayout = styled(Card)`\n  position: relative;\n  grid-area: var(--grid-area);\n`\n\nconst Container = styled(UiContainer)`\n  width: auto;\n`\n\ninterface DiffViewPaneProps {\n  documentType: string\n  documentId: string\n  role: 'previous' | 'next'\n  scrollElement: HTMLElement | null\n  syncChannel: PathSyncChannel\n  compareDocument: {\n    type: string\n    id: string\n  }\n}\n\nexport const DiffViewPane = forwardRef<HTMLDivElement, DiffViewPaneProps>(function DiffViewPane(\n  {role, documentType, documentId, scrollElement, syncChannel, compareDocument},\n  ref,\n) {\n  const containerElement = useRef<HTMLDivElement | null>(null)\n  const [portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const DocumentLayout = useMiddlewareComponents({\n    pick: pickDocumentLayoutComponent,\n    defaultComponent: useCallback(\n      () => (\n        <DiffViewDocument\n          compareDocument={compareDocument}\n          documentId={documentId}\n          documentType={documentType}\n          role={role}\n          scrollElement={scrollElement}\n          syncChannel={syncChannel}\n        />\n      ),\n      [compareDocument, documentId, documentType, role, scrollElement, syncChannel],\n    ),\n  })\n\n  return (\n    <ConnectorContext.Provider\n      value={{\n        // Render the change indicators inertly, because the diff view modal does not currently\n        // provide a way to display document inspectors.\n        isInteractive: false,\n        onOpenReviewChanges: noop,\n        onSetFocus: noop,\n        isReviewChangesOpen: false,\n      }}\n    >\n      <ChangeIndicatorsTracker>\n        <VirtualizerScrollInstanceProvider\n          scrollElement={scrollElement}\n          containerElement={containerElement}\n        >\n          <BoundaryElementProvider element={boundaryElement}>\n            <DiffViewPaneLayout\n              ref={setBoundaryElement}\n              style={\n                {\n                  '--grid-area': `${role}-document`,\n                } as CSSProperties\n              }\n              borderLeft={role === 'next'}\n            >\n              <Scroller\n                ref={ref}\n                style={\n                  {\n                    // The scroll position is synchronised between panes. This style hides the\n                    // scrollbar for all panes except the one displaying the next document.\n                    '--scrollbar-width': role !== 'next' && 'none',\n                  } as CSSProperties\n                }\n              >\n                <PortalProvider element={portalElement}>\n                  <DialogProvider position=\"absolute\">\n                    <Container ref={containerElement} padding={4} width={1}>\n                      <DocumentLayout documentId={documentId} documentType={documentType} />\n                    </Container>\n                  </DialogProvider>\n                </PortalProvider>\n              </Scroller>\n              <div data-testid=\"diffView-document-panel-portal\" ref={setPortalElement} />\n            </DiffViewPaneLayout>\n          </BoundaryElementProvider>\n        </VirtualizerScrollInstanceProvider>\n      </ChangeIndicatorsTracker>\n    </ConnectorContext.Provider>\n  )\n})\n\nconst DiffViewDocument: ComponentType<DiffViewPaneProps> = ({\n  role,\n  documentType,\n  documentId,\n  syncChannel,\n  compareDocument,\n}) => {\n  const compareValue = useCompareValue({compareDocument})\n  const [patchChannel] = useState(() => createPatchChannel())\n\n  const {\n    formState,\n    onChange,\n    onFocus,\n    onBlur,\n    onSetActiveFieldGroup,\n    onSetCollapsedFieldSet,\n    onSetCollapsedPath,\n    collapsedFieldSets,\n    ready,\n    collapsedPaths,\n    schemaType,\n    value,\n    onProgrammaticFocus,\n    ...documentForm\n  } = useDocumentForm({\n    documentId: getPublishedId(documentId),\n    documentType,\n    selectedPerspectiveName: perspectiveName(documentId),\n    releaseId: getVersionFromId(documentId),\n    comparisonValue: compareValue,\n  })\n\n  const isLoading = formState === null || !ready\n\n  const pathSyncChannel = usePathSyncChannel({\n    id: role,\n    syncChannel,\n  })\n\n  const onPathOpen = useCallback(\n    (path: Path) => {\n      documentForm.onPathOpen(path)\n      pathSyncChannel.push({source: role, path})\n    },\n    [documentForm, pathSyncChannel, role],\n  )\n\n  useEffect(() => {\n    const subscription = pathSyncChannel.path.subscribe(onProgrammaticFocus)\n    return () => subscription.unsubscribe()\n  }, [onProgrammaticFocus, pathSyncChannel.path])\n\n  return isLoading ? (\n    <LoadingBlock showText />\n  ) : (\n    <CommentsEnabledContext.Provider\n      value={{\n        enabled: false,\n        mode: null,\n      }}\n    >\n      <FormBuilder\n        // eslint-disable-next-line camelcase\n        __internal_patchChannel={patchChannel}\n        id={`diffView-pane-${role}`}\n        onChange={onChange}\n        onPathFocus={onFocus}\n        onPathOpen={onPathOpen}\n        onPathBlur={onBlur}\n        onFieldGroupSelect={onSetActiveFieldGroup}\n        onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n        onSetPathCollapsed={onSetCollapsedPath}\n        collapsedPaths={collapsedPaths}\n        collapsedFieldSets={collapsedFieldSets}\n        focusPath={formState.focusPath}\n        changed={formState.changed}\n        focused={formState.focused}\n        groups={formState.groups}\n        validation={formState.validation}\n        members={formState.members}\n        presence={formState.presence}\n        schemaType={schemaType}\n        value={value}\n      />\n    </CommentsEnabledContext.Provider>\n  )\n}\n\nfunction perspectiveName(documentId: string): string | undefined {\n  if (isVersionId(documentId)) {\n    return getVersionFromId(documentId)\n  }\n\n  if (isPublishedId(documentId)) {\n    return 'published'\n  }\n\n  return undefined\n}\n\ntype UseCompareValueOptions = Pick<DiffViewPaneProps, 'compareDocument'>\n\n/**\n * Fetch the contents of `compareDocument` for comparison with another version of the document.\n */\nfunction useCompareValue({compareDocument}: UseCompareValueOptions): SanityDocument | undefined {\n  const compareDocumentEditState = useEditState(\n    getPublishedId(compareDocument.id),\n    compareDocument.type,\n    'low',\n    getVersionFromId(compareDocument.id),\n  )\n\n  return useMemo(() => {\n    if (isVersionId(compareDocument.id)) {\n      return compareDocumentEditState.version ?? undefined\n    }\n\n    if (isDraftId(compareDocument.id)) {\n      return compareDocumentEditState.draft ?? undefined\n    }\n\n    if (isPublishedId(compareDocument.id)) {\n      return compareDocumentEditState.published ?? undefined\n    }\n\n    return undefined\n  }, [\n    compareDocument.id,\n    compareDocumentEditState.draft,\n    compareDocumentEditState.published,\n    compareDocumentEditState.version,\n  ])\n}\n","import {type ReferenceInputOptions} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\nimport {styled} from 'styled-components'\n\nconst Link = styled.a`\n  flex: 1;\n  text-decoration: none;\n  color: inherit;\n`\n\nexport const EditReferenceLinkComponent: ReferenceInputOptions['EditReferenceLinkComponent'] = ({\n  children,\n  documentId: _documentId,\n  documentType,\n}) => {\n  const {href} = useIntentLink({\n    intent: 'edit',\n    params: {\n      id: _documentId,\n      type: documentType,\n    },\n  })\n\n  return (\n    <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      {children}\n    </Link>\n  )\n}\n","import {type ComponentType, useContext, useMemo, useState} from 'react'\nimport {type DocumentLayoutProps} from 'sanity'\nimport {ReferenceInputOptionsContext} from 'sanity/_singletons'\n\nimport {Dialog} from '../../../ui-components/dialog/Dialog'\nimport {useCreatePathSyncChannel} from '../hooks/useCreatePathSyncChannel'\nimport {useDiffViewRouter} from '../hooks/useDiffViewRouter'\nimport {useDiffViewState} from '../hooks/useDiffViewState'\nimport {useScrollMirror} from '../hooks/useScrollMirror'\nimport {VersionModeHeader} from '../versionMode/components/VersionModeHeader'\nimport {DialogLayout} from './DialogLayout'\nimport {DiffViewPane} from './DiffViewPane'\nimport {EditReferenceLinkComponent} from './EditReferenceLinkComponent'\n\nexport const DiffView: ComponentType<Pick<DocumentLayoutProps, 'documentId'>> = ({documentId}) => {\n  const {documents, state, mode} = useDiffViewState()\n  const {exitDiffView} = useDiffViewRouter()\n  const syncChannel = useCreatePathSyncChannel()\n  const [previousPaneElement, setPreviousPaneElement] = useState<HTMLElement | null>(null)\n  const [nextPaneElement, setNextPaneElement] = useState<HTMLElement | null>(null)\n  const referenceInputOptionsContext = useContext(ReferenceInputOptionsContext)\n\n  const diffViewReferenceInputOptionsContext = useMemo(\n    () => ({\n      ...referenceInputOptionsContext,\n      disableNew: true,\n      EditReferenceLinkComponent,\n    }),\n    [referenceInputOptionsContext],\n  )\n\n  useScrollMirror([previousPaneElement, nextPaneElement])\n\n  return (\n    <ReferenceInputOptionsContext.Provider value={diffViewReferenceInputOptionsContext}>\n      <Dialog\n        id=\"diffView\"\n        width=\"auto\"\n        onClose={exitDiffView}\n        padding={false}\n        __unstable_hideCloseButton\n      >\n        <DialogLayout>\n          {mode === 'version' && <VersionModeHeader documentId={documentId} state={state} />}\n          {state === 'ready' && (\n            <>\n              <DiffViewPane\n                documentType={documents.previous.type}\n                documentId={documents.previous.id}\n                role=\"previous\"\n                ref={setPreviousPaneElement}\n                scrollElement={previousPaneElement}\n                syncChannel={syncChannel}\n                compareDocument={documents.previous}\n              />\n              <DiffViewPane\n                documentType={documents.next.type}\n                documentId={documents.next.id}\n                role=\"next\"\n                ref={setNextPaneElement}\n                scrollElement={nextPaneElement}\n                syncChannel={syncChannel}\n                // The previous document's edit state is used to calculate the diff inroduced by the next document.\n                compareDocument={documents.previous}\n              />\n            </>\n          )}\n        </DialogLayout>\n      </Dialog>\n    </ReferenceInputOptionsContext.Provider>\n  )\n}\n","import {useToast} from '@sanity/ui'\nimport {type ComponentType, type PropsWithChildren} from 'react'\nimport {type DocumentLayoutProps, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DiffView} from '../components/DiffView'\nimport {useDiffViewState} from '../hooks/useDiffViewState'\n\nexport const DiffViewDocumentLayout: ComponentType<\n  PropsWithChildren<Pick<DocumentLayoutProps, 'documentId' | 'documentType'>>\n> = ({children, documentId}) => {\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isActive} = useDiffViewState({\n    onParamsError: (errors) => {\n      toast.push({\n        id: 'diffViewParamsParsingError',\n        status: 'error',\n        title: t('compare-version.error.invalidParams.title'),\n        description: (\n          <ul>\n            {errors.map(([error, input]) => (\n              <li key={error}>\n                {t(`compare-version.error.${error}`, {\n                  input,\n                })}\n              </li>\n            ))}\n          </ul>\n        ),\n      })\n    },\n  })\n\n  return (\n    <>\n      {children}\n      {isActive && <DiffView documentId={documentId} />}\n    </>\n  )\n}\n","import {Box, type CardTone} from '@sanity/ui'\n\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\n\n/**\n * @internal\n */\nexport function ErrorPane(props: {\n  children?: React.ReactNode\n  currentMinWidth?: number\n  flex?: number\n  minWidth?: number\n  paneKey: string\n  title?: React.ReactNode\n  tone?: CardTone\n}) {\n  const {\n    children,\n    currentMinWidth,\n    flex,\n    minWidth,\n    paneKey,\n    title = 'Error',\n    tone = 'critical',\n  } = props\n\n  return (\n    <Pane\n      currentMinWidth={currentMinWidth}\n      flex={flex}\n      id={paneKey}\n      minWidth={minWidth}\n      tone={tone}\n    >\n      <PaneHeader title={title} />\n      <PaneContent overflow=\"auto\">\n        <Box paddingX={4} paddingY={5}>\n          {children}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {merge, type Observable, of} from 'rxjs'\nimport {delay, mapTo} from 'rxjs/operators'\nimport {isDev} from 'sanity'\n\n/**\n * @internal\n */\nexport type WaitMessage = {messageKey: string} | {message: string}\n\n/**\n * @internal\n */\nexport function getWaitMessages(path: string[]): Observable<WaitMessage> {\n  const thresholds: (WaitMessage & {ms: number})[] = [\n    {ms: 300, messageKey: 'panes.resolving.default-message'},\n    {ms: 5000, messageKey: 'panes.resolving.slow-resolve-message'},\n  ]\n\n  if (isDev) {\n    const message = [\n      'Check console for errors?',\n      'Is your observable/promise resolving?',\n      path.length > 0 ? `Structure path: ${path.join(' ➝ ')}` : '',\n    ]\n\n    thresholds.push({\n      ms: 10000,\n      message: message.join('\\n'),\n    })\n  }\n\n  const src = of(null)\n\n  return merge(\n    ...thresholds.map((threshold) =>\n      src.pipe(\n        mapTo(\n          'messageKey' in threshold\n            ? {messageKey: threshold.messageKey}\n            : {message: threshold.message},\n        ),\n        delay(threshold.ms),\n      ),\n    ),\n  )\n}\n","import {_raf2, type CardTone, Flex} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useState} from 'react'\nimport {type Observable} from 'rxjs'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay} from '../../components/Delay'\nimport {Pane, PaneContent} from '../../components/pane'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {getWaitMessages, type WaitMessage} from './getWaitMessages'\n\ninterface LoadingPaneProps {\n  delay?: number\n  flex?: number\n  message?: string | ((p: string[]) => string | Observable<WaitMessage>)\n  minWidth?: number\n  paneKey: string\n  path?: string\n  selected?: boolean\n  title?: string\n  tone?: CardTone\n}\n\nconst DELAY = false\nconst DEFAULT_MESSAGE_KEY = 'panes.resolving.default-message'\n\nconst Content = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n`\n\n/**\n * @internal\n */\nexport const LoadingPane = memo((props: LoadingPaneProps) => {\n  const {\n    delay = 300,\n    flex,\n    message: messageProp = getWaitMessages,\n    minWidth,\n    paneKey,\n    path,\n    selected,\n    title,\n    tone,\n  } = props\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const resolvedMessage = useMemo(() => {\n    if (typeof messageProp === 'function') {\n      return messageProp(path ? path.split(';') : [])\n    }\n\n    return messageProp\n  }, [messageProp, path])\n\n  const [currentMessage, setCurrentMessage] = useState<string | null>(() => {\n    if (typeof resolvedMessage === 'string') return resolvedMessage\n    return t(DEFAULT_MESSAGE_KEY)\n  })\n\n  useEffect(() => {\n    if (typeof resolvedMessage !== 'object') return undefined\n    if (typeof resolvedMessage.subscribe !== 'function') return undefined\n\n    const sub = resolvedMessage.subscribe((message) => {\n      setCurrentMessage('messageKey' in message ? t(message.messageKey) : message.message)\n    })\n\n    return () => sub.unsubscribe()\n  }, [resolvedMessage, t])\n\n  const [contentElement, setContentElement] = useState<HTMLDivElement | null>(null)\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (!contentElement) return undefined\n    return _raf2(() => setMounted(true))\n  }, [contentElement])\n\n  const content = (\n    <Content\n      align=\"center\"\n      data-mounted={mounted ? '' : undefined}\n      direction=\"column\"\n      height=\"fill\"\n      justify=\"center\"\n      ref={setContentElement}\n    >\n      <LoadingBlock showText title={title || currentMessage} />\n    </Content>\n  )\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} selected={selected} tone={tone}>\n      <PaneContent>{DELAY ? <Delay ms={delay}>{content}</Delay> : content}</PaneContent>\n    </Pane>\n  )\n})\n\nLoadingPane.displayName = 'Memo(LoadingPane)'\n","import {useContext} from 'react'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\n\n/** @internal */\nexport function useDocumentPane(): DocumentPaneContextValue {\n  const documentPane = useContext(DocumentPaneContext)\n\n  if (!documentPane) {\n    throw new Error('DocumentPane: missing context value')\n  }\n\n  return documentPane\n}\n","import {useCallback, useLayoutEffect, useRef} from 'react'\nimport {\n  COMMENTS_INSPECTOR_NAME,\n  CommentsEnabledProvider,\n  CommentsProvider,\n  useCommentsEnabled,\n  usePerspective,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface CommentsWrapperProps {\n  children: React.ReactNode\n  documentId: string\n  documentType: string\n}\n\n/**\n * @internal\n * A wrapper that conditionally wraps the document layout in a comments provider\n * if the feature is enabled for the project and the current document.\n */\nexport function CommentsWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  return (\n    <CommentsEnabledProvider documentId={documentId} documentType={documentType}>\n      <CommentsProviderWrapper documentId={documentId} documentType={documentType}>\n        {children}\n      </CommentsProviderWrapper>\n    </CommentsEnabledProvider>\n  )\n}\n\nfunction CommentsProviderWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  const {enabled} = useCommentsEnabled()\n  const {connectionState, onPathOpen, inspector, openInspector} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const {params, setParams, createPathWithParams} = usePaneRouter()\n\n  const selectedCommentId = params?.comment\n  const paramsRef = useRef(params)\n\n  useLayoutEffect(() => {\n    paramsRef.current = params\n  }, [params])\n\n  const getCommentLink = useCallback(\n    (commentId: string) => {\n      // Generate a path based on the current pane params.\n      // We force a value for `inspect` to ensure that this is included in URLs when comments\n      // are created outside of the inspector context (i.e. directly on the field)\n      // @todo: consider filtering pane router params and culling all non-active RHS panes prior to generating this link\n      const path = createPathWithParams({\n        ...paramsRef.current,\n        comment: commentId,\n        inspect: COMMENTS_INSPECTOR_NAME,\n      })\n      return `${window.location.origin}${path}`\n    },\n    [createPathWithParams],\n  )\n\n  const handleClearSelectedComment = useCallback(() => {\n    setParams({...paramsRef.current, comment: undefined})\n  }, [setParams])\n\n  const handleOpenCommentsInspector = useCallback(() => {\n    if (inspector?.name === COMMENTS_INSPECTOR_NAME) return\n\n    openInspector(COMMENTS_INSPECTOR_NAME)\n  }, [inspector?.name, openInspector])\n\n  // If comments are not enabled, render the default document layout\n  if (!enabled) {\n    return <>{children}</>\n  }\n\n  return (\n    <CommentsProvider\n      documentId={documentId}\n      documentType={documentType}\n      getCommentLink={getCommentLink}\n      isCommentsOpen={inspector?.name === COMMENTS_INSPECTOR_NAME}\n      isConnecting={connectionState === 'connecting'}\n      onClearSelectedComment={handleClearSelectedComment}\n      onCommentsOpen={handleOpenCommentsInspector}\n      onPathOpen={onPathOpen}\n      selectedCommentId={selectedCommentId}\n      sortOrder=\"desc\"\n      type=\"field\"\n      releaseId={selectedReleaseId}\n    >\n      {children}\n    </CommentsProvider>\n  )\n}\n","import {useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionFromId,\n  type ReleaseDocument,\n  useActiveReleases,\n  useArchivedReleases,\n  useDocumentVersions,\n  usePerspective,\n} from 'sanity'\n\nimport {usePaneRouter} from '../components/paneRouter/usePaneRouter'\nimport {type DocumentPaneContextValue} from '../panes/document/DocumentPaneContext'\n\ntype FilterReleases = {\n  notCurrentReleases: ReleaseDocument[]\n  currentReleases: ReleaseDocument[]\n  inCreation: ReleaseDocument | null\n}\n\n/**\n * @internal\n */\nexport function useFilteredReleases({\n  displayed,\n  documentId,\n}: Pick<DocumentPaneContextValue, 'displayed' | 'documentId'>): FilterReleases {\n  const {selectedReleaseId} = usePerspective()\n  const {data: releases} = useActiveReleases()\n  const {data: archivedReleases} = useArchivedReleases()\n  const {data: documentVersions} = useDocumentVersions({documentId})\n  const isCreatingDocument = displayed && !displayed._createdAt\n  const {params} = usePaneRouter()\n\n  return useMemo(() => {\n    if (!documentVersions) return {notCurrentReleases: [], currentReleases: [], inCreation: null}\n    // Gets the releases ids from the document versions, it means, the releases that the document belongs to\n    const releasesIds = documentVersions.map((id) => getVersionFromId(id))\n    const activeReleases = releases.reduce(\n      (acc: FilterReleases, release) => {\n        const versionDocExists = releasesIds.includes(\n          getReleaseIdFromReleaseDocumentId(release._id),\n        )\n        const releaseId = getReleaseIdFromReleaseDocumentId(release._id)\n        const isCreatingThisVersion =\n          isCreatingDocument &&\n          releaseId === getVersionFromId(displayed._id || '') &&\n          releaseId === selectedReleaseId\n\n        if (isCreatingThisVersion) {\n          acc.inCreation = release\n        } else if (versionDocExists) {\n          acc.currentReleases.push(release)\n        } else {\n          acc.notCurrentReleases.push(release)\n        }\n        return acc\n      },\n      {notCurrentReleases: [], currentReleases: [], inCreation: null},\n    )\n\n    // without historyVersion, version is not in an archived release\n    if (!params?.historyVersion) return activeReleases\n\n    const archivedRelease = archivedReleases.find(\n      (r) => getReleaseIdFromReleaseDocumentId(r._id) === params?.historyVersion,\n    )\n\n    // only for explicitly archived releases; published releases use published perspective\n    if (archivedRelease?.state === 'archived') {\n      activeReleases.currentReleases.push(archivedRelease)\n    }\n\n    return activeReleases\n  }, [\n    archivedReleases,\n    isCreatingDocument,\n    displayed?._id,\n    documentVersions,\n    params?.historyVersion,\n    releases,\n    selectedReleaseId,\n  ])\n}\n","import {useMemo} from 'react'\nimport {getReleaseIdFromReleaseDocumentId, getVersionId} from 'sanity'\n\nimport {type DocumentPaneContextValue} from '../panes/document/DocumentPaneContext'\nimport {useFilteredReleases} from './useFilteredReleases'\n\n/**\n * @internal\n */\nexport interface DocumentIdStack {\n  /**\n   * The position of the displayed document within the stack.\n   */\n  position: number\n  /**\n   * The id of the previous document in the stack.\n   */\n  previousId?: string\n  /**\n   * The id of the next document in the stack.\n   */\n  nextId?: string\n  /**\n   * An array of document ids comprising the stack the displayed document is a member of, ordered per\n   * release layering.\n   */\n  stack: string[]\n}\n\n/**\n * Get a stack of document ids representing existing versions of the provided document with release\n * layering applied.\n *\n * @internal\n */\nexport function useDocumentIdStack({\n  displayed,\n  documentId,\n  editState,\n}: Pick<DocumentPaneContextValue, 'displayed' | 'documentId' | 'editState'>): DocumentIdStack {\n  const filteredReleases = useFilteredReleases({displayed, documentId})\n  const systemStack = [editState?.published?._id, editState?.draft?._id]\n\n  const releaseStack = filteredReleases.currentReleases.map(\n    (release) =>\n      editState?.id && getVersionId(editState.id, getReleaseIdFromReleaseDocumentId(release._id)),\n  )\n\n  const stack = systemStack.concat(releaseStack).filter((id) => typeof id === 'string')\n\n  const position = useMemo(\n    () => stack.findIndex((id) => id === displayed?._id),\n    [displayed?._id, stack],\n  )\n\n  const previousId = useMemo(() => stack[position - 1] ?? undefined, [position, stack])\n  const nextId = useMemo(() => stack[position + 1] ?? undefined, [position, stack])\n\n  return {\n    position,\n    previousId,\n    nextId,\n    stack,\n  }\n}\n","import {useContext} from 'react'\nimport {StructureToolContext} from 'sanity/_singletons'\n\nimport {type StructureToolContextValue} from './types'\n\n/** @internal */\nexport function useStructureTool(): StructureToolContextValue {\n  const structureTool = useContext(StructureToolContext)\n  if (!structureTool) throw new Error(`StructureTool: missing context value`)\n\n  return structureTool\n}\n","import {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItemGroup} from '../../types'\n\nexport const DOCUMENT_PANEL_MIN_WIDTH = 320\nexport const DOCUMENT_PANEL_INITIAL_MIN_WIDTH = 600\n\nexport const DOCUMENT_INSPECTOR_MIN_WIDTH = 320\nexport const DOCUMENT_INSPECTOR_MAX_WIDTH = 540\n\nexport const EMPTY_PARAMS: NonNullable<PaneRouterContextValue['params']> = {}\n\nexport const INSPECT_ACTION_PREFIX = 'inspect:'\n\nexport const DEFAULT_MENU_ITEM_GROUPS: PaneMenuItemGroup[] = [{id: 'inspectors'}, {id: 'links'}]\n\n// inspectors\nexport const HISTORY_INSPECTOR_NAME = 'sanity/structure/history'\nexport const VALIDATION_INSPECTOR_NAME = 'sanity/structure/validation'\n","import {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, useUnique} from 'sanity'\n\ninterface DocumentInspectorMenuItemsResolverProps {\n  documentId: string\n  documentType: string\n  inspectors: DocumentInspector[]\n  onMenuItems: (items: DocumentInspectorMenuItem[]) => void\n}\n\n// The menu item in a document inspector are resolved in a React hook (`useMenuItem`).\n// This means that the menu item needs to be resolved in a React component (in accordance with the rules of hooks).\n// In this component, we map over the configured inspectors and render a `InspectorMenuItem` for each.\n// The `InspectorMenuItem` will resolve the menu item in a React hook and call the `setMenuItem` callback\n// with the resolved menu item and the index of the inspector.\n// Finally, we call the `onMenuItems` callback with the resolved menu items.\nexport function DocumentInspectorMenuItemsResolver(props: DocumentInspectorMenuItemsResolverProps) {\n  const {documentId, documentType, inspectors, onMenuItems} = props\n\n  const len = inspectors.length\n  const [menuItems, setMenuItems] = useState<DocumentInspectorMenuItem[]>(() =>\n    Array.from(new Array(len)),\n  )\n\n  useEffect(() => {\n    if (menuItems.length !== len) {\n      const newFieldActions = Array.from(new Array(len))\n\n      for (let i = 0; i < len; i++) {\n        newFieldActions[i] = menuItems[i]\n      }\n\n      setMenuItems(newFieldActions)\n    }\n  }, [len, menuItems])\n\n  const setMenuItem = useCallback((index: number, node: DocumentInspectorMenuItem) => {\n    setMenuItems((prev) => {\n      const next = [...prev]\n      next[index] = node\n      return next\n    })\n  }, [])\n\n  useEffect(() => {\n    onMenuItems(menuItems.filter(Boolean))\n  }, [menuItems, onMenuItems])\n\n  const InspectorMenuItems = useMemo(() => {\n    return inspectors.map((inspector, index) => {\n      return inspector.useMenuItem\n        ? ([\n            defineInspectorMenuItemComponent({\n              documentId,\n              documentType,\n              index,\n              setMenuItem,\n              useMenuItem: inspector.useMenuItem,\n            }),\n            inspector.name,\n          ] as const)\n        : ([() => null, ''] as const)\n    })\n  }, [documentId, documentType, inspectors, setMenuItem])\n\n  return (\n    <>\n      {InspectorMenuItems.map(([InspectorMenuItem, key]) => key && <InspectorMenuItem key={key} />)}\n    </>\n  )\n}\nDocumentInspectorMenuItemsResolver.displayName = 'DocumentInspectorMenuItemsResolver'\n\nfunction defineInspectorMenuItemComponent({\n  documentId,\n  documentType,\n  index,\n  setMenuItem,\n  useMenuItem,\n}: {\n  documentId: string\n  documentType: string\n  index: number\n  setMenuItem: (index: number, node: DocumentInspectorMenuItem) => void\n  useMenuItem: NonNullable<DocumentInspector['useMenuItem']>\n}) {\n  return memo(function InspectorMenuItem() {\n    const menuItem = useMenuItem({\n      documentId,\n      documentType,\n    })\n    const node = useUnique(menuItem)\n\n    useEffect(() => {\n      setMenuItem(index, node)\n    }, [node])\n\n    return null\n  })\n}\n","import {unstable_useValuePreview as useValuePreview, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\n\n/**\n * useDocumentTitle hook return type.\n *\n * @beta\n * @hidden\n */\ninterface UseDocumentTitle {\n  error?: string\n  title?: string\n}\n\n/**\n * React hook that returns the document title for the current document in the document pane.\n *\n * @beta\n * @hidden\n *\n * @returns The document title or error. See {@link UseDocumentTitle}\n */\nexport function useDocumentTitle(): UseDocumentTitle {\n  const {connectionState, schemaType, title, displayed} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const subscribed = Boolean(displayed)\n\n  const {error, value} = useValuePreview({\n    enabled: subscribed,\n    schemaType,\n    value: displayed,\n  })\n\n  if (connectionState === 'connecting' && !subscribed) {\n    return {error: undefined, title: undefined}\n  }\n\n  if (title) {\n    return {error: undefined, title}\n  }\n\n  if (!displayed) {\n    return {\n      error: undefined,\n      title: t('panes.document-header-title.new.text', {\n        schemaType: schemaType?.title || schemaType?.name,\n      }),\n    }\n  }\n\n  if (error) {\n    return {\n      error: t('panes.document-list-pane.error.text', {error: error.message}),\n      title: undefined,\n    }\n  }\n\n  return {error: undefined, title: value?.title}\n}\n","import {useToast} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useRef} from 'react'\nimport {Translate, useDocumentOperationEvent, useTranslation} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\nimport {useDocumentTitle} from './useDocumentTitle'\n\nconst IGNORE_OPS = ['patch', 'commit']\n\nexport const DocumentOperationResults = memo(function DocumentOperationResults() {\n  const {push: pushToast} = useToast()\n  const {documentId, documentType, value: documentPaneValue} = useDocumentPane()\n  const documentTitleInfo = useDocumentTitle()\n  const titleError = documentTitleInfo.error\n  const event: any = useDocumentOperationEvent(documentId, documentType)\n  const prevEvent = useRef(event)\n  const paneRouter = usePaneRouter()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const title = useMemo(() => {\n    // If title isn't set from document preview, use the title from the document pane value\n    if (\n      !documentTitleInfo.title &&\n      !titleError &&\n      !IGNORE_OPS.includes(event?.op) &&\n      typeof documentPaneValue.title === 'string' &&\n      event?.type === 'success'\n    ) {\n      return documentPaneValue.title\n    }\n    return documentTitleInfo.title\n  }, [documentTitleInfo.title, titleError, event, documentPaneValue.title])\n  //Truncate the document title and add \"...\" if it is over 25 characters\n  const documentTitleBase = title || t('panes.document-operation-results.operation-undefined-title')\n  const documentTitle =\n    documentTitleBase.length > 25 ? `${documentTitleBase.slice(0, 25)}...` : documentTitleBase\n\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    let cleanupId: number | undefined\n\n    if (event.type === 'error') {\n      pushToast({\n        closable: true,\n        duration: 30000, // 30s\n        status: 'error',\n        title: t('panes.document-operation-results.operation-error', {context: event.op}),\n        description: (\n          <details>\n            <summary>{t('panes.document-operation-results.error.summary.title')}</summary>\n            {event.error.message}\n          </details>\n        ),\n      })\n    }\n\n    if (event.type === 'success' && !IGNORE_OPS.includes(event.op)) {\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: (\n          <Translate\n            context={event.op}\n            i18nKey=\"panes.document-operation-results.operation-success\"\n            t={t}\n            values={{\n              op: event.op,\n              title: documentTitle,\n            }}\n            components={{\n              Strong: 'strong',\n            }}\n          />\n        ),\n      })\n    }\n\n    /**\n     * If the document was deleted successfully, close the pane.\n     */\n    if (event.type === 'success' && event.op === 'delete') {\n      // Wait until next tick to allow deletion toasts to appear first\n      cleanupId = setTimeout(() => paneRouter.closeCurrentAndAfter(), 0) as any as number\n    }\n\n    prevEvent.current = event\n\n    // eslint-disable-next-line consistent-return\n    return () => clearTimeout(cleanupId)\n  }, [event, paneRouter, pushToast, t, documentTitle])\n\n  return null\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type PreviewValue, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {assignWith} from 'lodash'\nimport {type ReactNode} from 'react'\nimport {combineLatest, type Observable, of} from 'rxjs'\nimport {map, startWith} from 'rxjs/operators'\nimport {type DocumentPreviewStore, getDraftId, getPublishedId} from 'sanity'\n\nimport {type PaneItemPreviewState} from './types'\n\nexport const isLiveEditEnabled = (schemaType: SchemaType) => schemaType.liveEdit === true\n\nexport const getMissingDocumentFallback = (item: SanityDocument) => ({\n  title: <em>{item.title ? String(item.title) : 'Missing document'}</em>,\n  subtitle: <em>{item.title ? `Missing document ID: ${item._id}` : `Document ID: ${item._id}`}</em>,\n  media: () => <WarningOutlineIcon />,\n})\n\nexport const getValueWithFallback = ({\n  value,\n  draft,\n  published,\n}: {\n  value: SanityDocument\n  draft?: Partial<SanityDocument> | PreviewValue | null\n  published?: Partial<SanityDocument> | PreviewValue | null\n}) => {\n  const snapshot = draft || published\n\n  if (!snapshot) {\n    return getMissingDocumentFallback(value)\n  }\n\n  return assignWith({}, snapshot, value, (objValue, srcValue) => {\n    return typeof srcValue === 'undefined' ? objValue : srcValue\n  })\n}\n\nexport function getPreviewStateObservable(\n  documentPreviewStore: DocumentPreviewStore,\n  schemaType: SchemaType,\n  documentId: string,\n  title: ReactNode,\n): Observable<PaneItemPreviewState> {\n  const draft$ = isLiveEditEnabled(schemaType)\n    ? of({snapshot: null})\n    : documentPreviewStore.observeForPreview(\n        {_type: 'reference', _ref: getDraftId(documentId)},\n        schemaType,\n      )\n\n  const published$ = documentPreviewStore.observeForPreview(\n    {_type: 'reference', _ref: getPublishedId(documentId)},\n    schemaType,\n  )\n\n  return combineLatest([draft$, published$]).pipe(\n    map(([draft, published]) => ({\n      draft: draft.snapshot ? {title, ...(draft.snapshot || {})} : null,\n      isLoading: false,\n      published: published.snapshot ? {title, ...(published.snapshot || {})} : null,\n    })),\n    startWith({draft: null, isLoading: true, published: null}),\n  )\n}\n","import {CloseIcon} from '@sanity/icons'\nimport {Box, Card, type CardProps, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport interface DocumentInspectorHeaderProps {\n  as?: CardProps['as']\n  closeButtonLabel: string\n  flex?: CardProps['flex']\n  onClose: () => void\n  title: ReactNode\n}\n\nconst Root = styled(Card)({\n  position: 'relative',\n  zIndex: 1,\n  lineHeight: 0,\n})\n\n/** @internal */\nexport function DocumentInspectorHeader(\n  props: DocumentInspectorHeaderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n) {\n  const {as: forwardedAs, children, closeButtonLabel, onClose, title, ...restProps} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Root {...restProps} as={forwardedAs}>\n      <Flex padding={2}>\n        <Box flex={1} padding={3}>\n          <Text as=\"h1\" size={1} weight=\"medium\">\n            {title}\n          </Text>\n        </Box>\n        <Box flex=\"none\" padding={1}>\n          <Button\n            aria-label={closeButtonLabel}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Box>\n      </Flex>\n      {children}\n    </Root>\n  )\n}\n","import {Box} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Resizable} from 'sanity'\n\nimport {usePane} from '../../../components'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DOCUMENT_INSPECTOR_MAX_WIDTH, DOCUMENT_INSPECTOR_MIN_WIDTH} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentInspectorPanelProps {\n  documentId: string\n  documentType: string\n  flex?: number | number[]\n}\n\nexport function DocumentInspectorPanel(\n  props: DocumentInspectorPanelProps,\n): React.JSX.Element | null {\n  const {documentId, documentType, flex} = props\n  const {collapsed} = usePane()\n  const {closeInspector, inspector} = useDocumentPane()\n  const {features} = useStructureTool()\n\n  const handleClose = useCallback(() => {\n    if (inspector) closeInspector(inspector.name)\n  }, [closeInspector, inspector])\n\n  if (collapsed || !inspector) return null\n\n  const Component = inspector.component\n  const element = (\n    <Component onClose={handleClose} documentId={documentId} documentType={documentType} />\n  )\n\n  if (features.resizablePanes) {\n    return (\n      <Resizable\n        as=\"aside\"\n        data-ui=\"DocumentInspectorPanel\"\n        flex={flex}\n        resizerPosition=\"left\"\n        maxWidth={DOCUMENT_INSPECTOR_MAX_WIDTH}\n        minWidth={DOCUMENT_INSPECTOR_MIN_WIDTH}\n      >\n        {element}\n      </Resizable>\n    )\n  }\n\n  return (\n    <Box as=\"aside\" data-ui=\"DocumentInspectorPanel\" flex={flex}>\n      {element}\n    </Box>\n  )\n}\n","import {useCallback, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {map} from 'rxjs/operators'\nimport {useKeyValueStore} from 'sanity'\n\nconst STRUCTURE_TOOL_NAMESPACE = 'studio.structure-tool'\n\n/**\n * @internal\n */\nexport function useStructureToolSetting<ValueType>(\n  namespace: string,\n  key: string | null,\n  defaultValue?: ValueType,\n): [ValueType | undefined, (_value: ValueType) => void] {\n  const keyValueStore = useKeyValueStore()\n\n  const keyValueStoreKey = [STRUCTURE_TOOL_NAMESPACE, namespace, key].filter(Boolean).join('.')\n\n  const value$ = useMemo(() => {\n    return keyValueStore\n      .getKey(keyValueStoreKey)\n      .pipe(map((value) => (value === null ? defaultValue : value)))\n  }, [defaultValue, keyValueStore, keyValueStoreKey])\n\n  const value = useObservable(value$, defaultValue) as ValueType\n  const set = useCallback(\n    (newValue: ValueType) => {\n      if (newValue !== value) {\n        keyValueStore.setKey(keyValueStoreKey, newValue as string)\n      }\n    },\n    [keyValueStore, keyValueStoreKey, value],\n  )\n\n  return useMemo(() => [value, set], [set, value])\n}\n","export const VIEW_MODE_PARSED = {id: 'parsed', title: 'document-inspector.view-mode.parsed'}\nexport const VIEW_MODE_RAW = {id: 'raw', title: 'document-inspector.view-mode.raw-json'}\nexport const VIEW_MODES = [VIEW_MODE_PARSED, VIEW_MODE_RAW]\n","import {type SanityDocumentLike} from '@sanity/types'\nimport LRU from 'quick-lru'\nimport {isRecord, isString} from 'sanity'\n\nconst lru = new LRU({maxSize: 1000})\n\nexport function isExpanded(keyPath: any, value: any): any {\n  const cached = lru.get(keyPath)\n\n  if (cached === undefined) {\n    lru.set(keyPath, Array.isArray(value) || isRecord(value))\n    return isExpanded(keyPath, value)\n  }\n\n  return cached\n}\n\nexport function toggleExpanded(event: any): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nexport function selectElement(element: HTMLElement): void {\n  const sel = window.getSelection()\n\n  if (sel) {\n    const range = document.createRange()\n\n    sel.removeAllRanges()\n    range.selectNodeContents(element)\n    sel.addRange(range)\n  }\n}\n\nexport function select(event: any): void {\n  selectElement(event.currentTarget)\n}\n\nexport function maybeSelectAll(event: any): void {\n  const selectAll = event.keyCode === 65 && (event.metaKey || event.ctrlKey)\n\n  if (!selectAll) {\n    return\n  }\n\n  event.preventDefault()\n\n  selectElement(event.currentTarget)\n}\n\nexport function isDocumentLike(value: unknown): value is SanityDocumentLike {\n  return isRecord(value) && isString(value._id) && isString(value._type)\n}\n","import {rem, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const JSONInspectorWrapper = styled.div(({theme}: {theme: Theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[3])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0 - ${rem(space[4])} + 3px);\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[3])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import {SearchIcon} from '@sanity/icons'\nimport {TextInput} from '@sanity/ui'\nimport {type ChangeEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport function Search(props: {onChange: (q: string) => void; query: string}) {\n  const {onChange, query} = props\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => onChange(event.target.value),\n    [onChange],\n  )\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <TextInput\n      icon={SearchIcon}\n      onChange={handleChange}\n      placeholder={t('document-inspector.search.placeholder')}\n      radius={2}\n      value={query || ''}\n    />\n  )\n}\n","import {JsonInspector} from '@rexxars/react-json-inspector'\nimport {type SanityDocument} from '@sanity/types'\nimport {Card, Code, Flex, TabList, TabPanel} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Translate, useTranslation} from 'sanity'\n\nimport {Dialog, Tab} from '../../../../ui-components'\nimport {DocTitle} from '../../../components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureToolSetting} from '../../../useStructureToolSetting'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {VIEW_MODE_PARSED, VIEW_MODE_RAW, VIEW_MODES} from './constants'\nimport {isDocumentLike, isExpanded, maybeSelectAll, select, toggleExpanded} from './helpers'\nimport {JSONInspectorWrapper} from './InspectDialog.styles'\nimport {Search} from './Search'\n\ninterface InspectDialogProps {\n  value: Partial<SanityDocument> | null\n}\n\nexport function InspectDialog(props: InspectDialogProps) {\n  const {value} = props\n  const {onInspectClose, paneKey} = useDocumentPane()\n  const dialogIdPrefix = `${paneKey}_inspect_`\n\n  /* this creates a view mode (the default that it opens with is the parsed tab) that is saved based on the paneKey\n  where the inspect dialog lives.\n  This also means that when a page is loaded, the state of the tabs remains and doesn't revert to the pane tab */\n  const [viewModeId, onViewModeChange] = useStructureToolSetting(\n    'inspect-view-mode',\n    null,\n    'parsed',\n  )\n\n  /* based on the view mode it shows the right tab content */\n  const viewMode = VIEW_MODES.find((mode) => mode.id === viewModeId)\n\n  const setParsedViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_PARSED.id)\n  }, [onViewModeChange])\n\n  const setRawViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_RAW.id)\n  }, [onViewModeChange])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Dialog\n      bodyHeight=\"fill\"\n      id={`${dialogIdPrefix}dialog`}\n      header={\n        isDocumentLike(value) ? (\n          <Translate\n            t={t}\n            i18nKey=\"document-inspector.dialog.title\"\n            components={{\n              DocumentTitle: () => (\n                <em>\n                  <DocTitle document={value} />\n                </em>\n              ),\n            }}\n          />\n        ) : (\n          <em>{t('document-inspector.dialog.title-no-value')}</em>\n        )\n      }\n      onClose={onInspectClose}\n      onClickOutside={onInspectClose}\n      padding={false}\n      width={2}\n    >\n      <Flex direction=\"column\" height=\"fill\">\n        <Card\n          padding={3}\n          paddingTop={0}\n          shadow={1}\n          style={{position: 'sticky', bottom: 0, zIndex: 3}}\n        >\n          <TabList space={1}>\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_PARSED.id}`}\n              label={t(VIEW_MODE_PARSED.title)}\n              onClick={setParsedViewMode}\n              selected={viewMode === VIEW_MODE_PARSED}\n            />\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_RAW.id}`}\n              label={t(VIEW_MODE_RAW.title)}\n              onClick={setRawViewMode}\n              selected={viewMode === VIEW_MODE_RAW}\n            />\n          </TabList>\n        </Card>\n\n        <TabPanel\n          aria-labelledby={`${dialogIdPrefix}tab-${viewModeId}`}\n          flex={1}\n          id={`${dialogIdPrefix}tabpanel`}\n          overflow=\"auto\"\n          padding={4}\n          style={{outline: 'none'}}\n        >\n          {viewMode === VIEW_MODE_PARSED && (\n            <JSONInspectorWrapper>\n              <JsonInspector\n                data={value}\n                isExpanded={isExpanded}\n                onClick={toggleExpanded}\n                search={Search}\n                filterOptions={{ignoreCase: true}}\n              />\n            </JSONInspectorWrapper>\n          )}\n\n          {viewMode === VIEW_MODE_RAW && (\n            <Code\n              language=\"json\"\n              tabIndex={0}\n              onKeyDown={maybeSelectAll}\n              onDoubleClick={select}\n              onFocus={select}\n              size={1}\n            >\n              {JSON.stringify(value, null, 2)}\n            </Code>\n          )}\n        </TabPanel>\n      </Flex>\n    </Dialog>\n  )\n}\n","import {Box, type ButtonMode, type ButtonTone, Card, type CardTone, Flex, Text} from '@sanity/ui'\nimport {type ComponentType, type ElementType, type ReactNode} from 'react'\n\nimport {Button} from '../../../../../ui-components'\n\ninterface BannerProps {\n  action?: {\n    as?: ElementType | keyof React.JSX.IntrinsicElements\n    icon?: ComponentType\n    onClick?: () => void\n    text: string\n    tone?: ButtonTone\n    disabled?: boolean\n    mode?: ButtonMode\n  }\n  content: ReactNode\n  icon?: ComponentType\n  tone?: CardTone\n  paddingY?: number\n}\n\nexport function Banner(props: BannerProps) {\n  const {action, content, icon: Icon, tone = 'transparent', paddingY = 2, ...rest} = props\n\n  return (\n    <Box padding={1}>\n      <Card radius={3} paddingX={2} paddingY={paddingY} tone={tone} {...rest}>\n        <Flex align=\"center\" gap={3} paddingX={2}>\n          {Icon && (\n            <Text size={0}>\n              <Icon />\n            </Text>\n          )}\n\n          <Flex align=\"center\" flex={1} gap={2} paddingY={2}>\n            {content}\n          </Flex>\n\n          {action && (\n            <Button {...action} mode={action.mode || 'ghost'} tone={action.tone || 'default'} />\n          )}\n        </Flex>\n      </Card>\n    </Box>\n  )\n}\n","import {DocumentRemoveIcon, ReadOnlyIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  isDraftPerspective,\n  isPublishedPerspective,\n  type ReleaseDocument,\n  Translate,\n  useDocumentOperation,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeletedDocumentBanners() {\n  const {isDeleted, isDeleting} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n\n  if (\n    !isPublishedPerspective(selectedPerspective) &&\n    !isDraftPerspective(selectedPerspective) &&\n    selectedPerspective.state === 'archived'\n  ) {\n    return <ArchivedReleaseBanner release={selectedPerspective as ReleaseDocument} />\n  }\n  if (isDeleted && !isDeleting) return <DeletedDocumentBanner />\n}\n\nfunction DeletedDocumentBanner() {\n  const {documentId, documentType, lastNonDeletedRevId} = useDocumentPane()\n  const {restore} = useDocumentOperation(documentId, documentType)\n  const {navigateIntent} = useRouter()\n\n  const handleRestore = useCallback(() => {\n    if (lastNonDeletedRevId) {\n      restore.execute(lastNonDeletedRevId)\n      navigateIntent('edit', {id: documentId, type: documentType})\n    }\n  }, [documentId, documentType, navigateIntent, restore, lastNonDeletedRevId])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Banner\n      action={\n        lastNonDeletedRevId\n          ? {\n              onClick: handleRestore,\n              text: t('banners.deleted-document-banner.restore-button.text'),\n            }\n          : undefined\n      }\n      content={\n        <Text size={1} weight=\"medium\">\n          {t('banners.deleted-document-banner.text')}\n        </Text>\n      }\n      data-testid=\"deleted-document-banner\"\n      icon={ReadOnlyIcon}\n    />\n  )\n}\n\nconst ArchivedReleaseBanner = ({release}: {release: ReleaseDocument}) => {\n  const {t} = useTranslation()\n\n  return (\n    <Banner\n      tone=\"caution\"\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate\n            t={t}\n            i18nKey=\"banners.deleted-release-banner.text\"\n            values={{title: release.metadata?.title || t('release.placeholder-untitled-release')}}\n          />\n        </Text>\n      }\n      data-testid=\"deleted-release-banner\"\n      icon={DocumentRemoveIcon}\n    />\n  )\n}\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {isDeprecatedSchemaType, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeprecatedDocumentTypeBanner() {\n  const {schemaType} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!isDeprecatedSchemaType(schemaType)) {\n    return null\n  }\n\n  return (\n    <Banner\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate t={t} i18nKey=\"banners.deprecated-document-type-banner.text\" />{' '}\n          {schemaType.deprecated.reason}\n        </Text>\n      }\n      data-testid=\"deprecated-document-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {defineEvent} from '@sanity/telemetry'\n\n/** @internal */\nexport const AskToEditDialogOpened = defineEvent({\n  name: 'Ask To Edit Dialog Opened',\n  version: 1,\n  description: 'User clicked the \"Ask to edit\" button in the document permissions banner',\n})\n\n/** @internal */\nexport const AskToEditRequestSent = defineEvent({\n  name: 'Ask To Edit Request Sent',\n  version: 1,\n  description: 'User sent a role change request from the dialog',\n})\n","import {useTelemetry} from '@sanity/telemetry/react'\nimport {Box, Card, DialogProvider, Flex, Stack, Text, TextInput, useToast} from '@sanity/ui'\nimport {useId, useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {catchError, map, type Observable, of, startWith} from 'rxjs'\nimport {type Role, useClient, useProjectId, useTranslation, useZIndex} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {AskToEditRequestSent} from './__telemetry__/RequestPermissionDialog.telemetry'\nimport {type AccessRequest} from './useRoleRequestsStatus'\n\nconst MAX_NOTE_LENGTH = 150\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface RequestPermissionDialogProps {\n  onClose?: () => void\n  onRequestSubmitted?: () => void\n}\n\n/**\n * A dialog that enables the user to request permission to change their\n * member role from \"Viewer\" to \"Editor\" or \"Admin\" depending on the\n * project's available roles.\n *\n * @internal\n */\nexport function RequestPermissionDialog({\n  onClose,\n  onRequestSubmitted,\n}: RequestPermissionDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const telemtry = useTelemetry()\n  const dialogId = `request-permissions-${useId()}`\n  const projectId = useProjectId()\n  const client = useClient({apiVersion: '2024-09-26'})\n  const toast = useToast()\n  const zOffset = useZIndex()\n\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const [note, setNote] = useState('')\n\n  const [msgError, setMsgError] = useState<string | undefined>()\n  const [hasTooManyRequests, setHasTooManyRequests] = useState<boolean>(false)\n  const [hasBeenDenied, setHasBeenDenied] = useState<boolean>(false)\n\n  const requestedRole$: Observable<'administrator' | 'editor'> = useMemo(() => {\n    const adminRole = 'administrator' as const\n    if (!projectId || !client) return of(adminRole)\n    return client.observable\n      .request<(Role & {appliesToUsers?: boolean})[]>({url: `/projects/${projectId}/roles`})\n      .pipe(\n        map((roles) => {\n          const hasEditor = roles\n            .filter((role) => role?.appliesToUsers)\n            .find((role) => role.name === 'editor')\n          return hasEditor ? 'editor' : adminRole\n        }),\n        startWith(adminRole),\n        catchError(() => of(adminRole)),\n      )\n  }, [projectId, client])\n\n  const requestedRole = useObservable(requestedRole$)\n\n  const onSubmit = () => {\n    setIsSubmitting(true)\n    client\n      .request<AccessRequest | null>({\n        url: `/access/project/${projectId}/requests`,\n        method: 'post',\n        body: {note, requestUrl: window?.location.href, requestedRole, type: 'role'},\n      })\n      .then((request) => {\n        if (request) {\n          if (onRequestSubmitted) onRequestSubmitted()\n          telemtry.log(AskToEditRequestSent)\n          toast.push({title: 'Edit access requested'})\n        }\n      })\n      .catch((err) => {\n        const statusCode = err?.response?.statusCode\n        const errMessage = err?.response?.body?.message\n        if (statusCode === 429) {\n          // User is over their cross-project request limit\n          setHasTooManyRequests(true)\n          setMsgError(errMessage)\n        }\n        if (statusCode === 409) {\n          // If we get a 409, user has been denied on this project or has a valid pending request\n          // valid pending request should be handled by GET request above\n          setHasBeenDenied(true)\n          setMsgError(errMessage)\n        } else {\n          toast.push({\n            title: 'There was a problem submitting your request.',\n            status: 'error',\n          })\n        }\n      })\n      .finally(() => {\n        setIsSubmitting(false)\n      })\n  }\n\n  return (\n    <DialogProvider position={'fixed'} zOffset={zOffset.fullscreen}>\n      <Dialog\n        width={1}\n        id={dialogId}\n        header={t('request-permission-dialog.header.text')}\n        footer={{\n          cancelButton: {\n            onClick: onClose,\n            text: t('confirm-dialog.cancel-button.fallback-text'),\n          },\n          confirmButton: {\n            onClick: onSubmit,\n            loading: isSubmitting,\n            disabled: hasTooManyRequests || hasBeenDenied,\n            text: t('request-permission-dialog.confirm-button.text'),\n            tone: 'primary',\n            type: 'submit',\n          },\n        }}\n        onClose={onClose}\n        onClickOutside={onClose}\n      >\n        <DialogBody>\n          <Stack space={4}>\n            <Text>{t('request-permission-dialog.description.text')}</Text>\n            {hasTooManyRequests || hasBeenDenied ? (\n              <Card tone={'caution'} padding={3} radius={2} shadow={1}>\n                <Text size={1}>\n                  {hasTooManyRequests && (\n                    <>{msgError ?? t('request-permission-dialog.warning.limit-reached.text')}</>\n                  )}\n                  {hasBeenDenied && (\n                    <>{msgError ?? t('request-permission-dialog.warning.denied.text')}</>\n                  )}\n                </Text>\n              </Card>\n            ) : (\n              <Stack space={3} paddingBottom={0}>\n                <TextInput\n                  placeholder={t('request-permission-dialog.note-input.placeholder.text')}\n                  disabled={isSubmitting}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') onSubmit()\n                  }}\n                  maxLength={MAX_NOTE_LENGTH}\n                  value={note}\n                  onChange={(e) => {\n                    setNote(e.currentTarget.value)\n                  }}\n                />\n\n                <Text align=\"right\" muted size={1}>{`${note.length}/${MAX_NOTE_LENGTH}`}</Text>\n              </Stack>\n            )}\n          </Stack>\n        </DialogBody>\n      </Dialog>\n    </DialogProvider>\n  )\n}\n","import {addWeeks, isAfter, isBefore} from 'date-fns'\nimport {useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {of} from 'rxjs'\nimport {catchError, map, startWith} from 'rxjs/operators'\nimport {type SanityClient, useClient, useProjectId} from 'sanity'\n\n/** @internal */\nexport interface AccessRequest {\n  id: string\n  status: 'pending' | 'accepted' | 'declined'\n  resourceId: string\n  resourceType: 'project'\n  createdAt: string\n  updatedAt: string\n  updatedByUserId: string\n  requestedByUserId: string\n  requestedRole: string\n  type: 'access' | 'role'\n  note: string\n}\n\nconst LOADING_STATE = {loading: true, error: false, status: undefined}\nconst EMPTY_STATE = {loading: false, error: false, status: 'none'}\nconst DECLINED_STATE = {loading: false, error: false, status: 'declined'}\nconst PENDING_STATE = {loading: false, error: false, status: 'pending'}\nconst EXPIRED_STATE = {loading: false, error: false, status: 'expired'}\n\n/** @internal */\nexport const useRoleRequestsStatus = () => {\n  const client = useClient({apiVersion: '2024-07-01'})\n  const projectId = useProjectId()\n\n  const checkRoleRequests$ = useMemo(() => {\n    if (!client || !projectId) {\n      return of(EMPTY_STATE)\n    }\n\n    return checkRoleRequests(client, projectId)\n  }, [client, projectId])\n\n  const {loading, error, status} = useObservable(checkRoleRequests$, LOADING_STATE)\n  return {data: status, loading, error}\n}\n\nfunction checkRoleRequests(client: SanityClient, projectId: string) {\n  return client.observable\n    .request<AccessRequest[] | null>({\n      url: '/access/requests/me',\n      tag: 'use-role-requests-status',\n    })\n    .pipe(\n      map((requests) => {\n        if (!requests || requests.length === 0) {\n          return EMPTY_STATE\n        }\n\n        // Filter requests for the specific project and where type is 'role'\n        const projectRequests = requests.filter(\n          (request) => request.resourceId === projectId && request.type === 'role',\n        )\n\n        const declinedRequest = projectRequests.find((request) => request.status === 'declined')\n        if (\n          declinedRequest &&\n          isAfter(addWeeks(new Date(declinedRequest.createdAt), 2), new Date())\n        ) {\n          return DECLINED_STATE\n        }\n\n        const pendingRequest = projectRequests.find(\n          (request) =>\n            request.status === 'pending' &&\n            isAfter(addWeeks(new Date(request.createdAt), 2), new Date()),\n        )\n        if (pendingRequest) {\n          return PENDING_STATE\n        }\n\n        const oldPendingRequest = projectRequests.find(\n          (request) =>\n            request.status === 'pending' &&\n            isBefore(addWeeks(new Date(request.createdAt), 2), new Date()),\n        )\n\n        return oldPendingRequest ? EXPIRED_STATE : EMPTY_STATE\n      }),\n      catchError((err) => {\n        console.error('Failed to fetch access requests', err)\n        return of({loading: false, error: true, status: undefined})\n      }),\n      startWith(LOADING_STATE), // Start with loading state\n    )\n}\n","import {ReadOnlyIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {Text} from '@sanity/ui'\nimport {useMemo, useState} from 'react'\nimport {Translate, useCurrentUser, useListFormat, useTranslation} from 'sanity'\n\nimport {\n  RequestPermissionDialog,\n  useRoleRequestsStatus,\n} from '../../../../components/requestPermissionDialog'\nimport {AskToEditDialogOpened} from '../../../../components/requestPermissionDialog/__telemetry__/RequestPermissionDialog.telemetry'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\ninterface InsufficientPermissionBannerProps {\n  requiredPermission: 'update' | 'create'\n}\n\nexport function InsufficientPermissionBanner({\n  requiredPermission,\n}: InsufficientPermissionBannerProps) {\n  const currentUser = useCurrentUser()\n\n  const {\n    data: roleRequestStatus,\n    loading: requestStatusLoading,\n    error: requestStatusError,\n  } = useRoleRequestsStatus()\n  const [requestSent, setRequestSent] = useState(false)\n  const requestPending = useMemo(\n    () => roleRequestStatus === 'pending' || roleRequestStatus === 'declined' || requestSent,\n    [roleRequestStatus, requestSent],\n  )\n  const currentUserRoles = currentUser?.roles || []\n  const isOnlyViewer = currentUserRoles.length === 1 && currentUserRoles[0].name === 'viewer'\n  const [showRequestPermissionDialog, setShowRequestPermissionDialog] = useState(false)\n\n  const listFormat = useListFormat({style: 'short'})\n  const {t} = useTranslation(structureLocaleNamespace)\n  const telemetry = useTelemetry()\n\n  const roleTitles = currentUserRoles.map((role) => role.title)\n  const roles = listFormat\n    .formatToParts(roleTitles)\n    .map((part) =>\n      part.type === 'element' ? <code key={part.value}>{part.value}</code> : part.value,\n    )\n\n  return (\n    <>\n      <Banner\n        content={\n          <Text size={1} weight=\"medium\">\n            <Translate\n              t={t}\n              i18nKey=\"banners.permission-check-banner.missing-permission\"\n              components={{Roles: () => <>{roles}</>}}\n              values={{count: roles.length, roles: roleTitles}}\n              context={requiredPermission}\n            />\n          </Text>\n        }\n        action={\n          isOnlyViewer && roleRequestStatus && !requestStatusError && !requestStatusLoading\n            ? {\n                onClick: requestPending\n                  ? undefined\n                  : () => {\n                      setShowRequestPermissionDialog(true)\n                      telemetry.log(AskToEditDialogOpened)\n                    },\n                text: requestPending\n                  ? t('banners.permission-check-banner.request-permission-button.sent')\n                  : t('banners.permission-check-banner.request-permission-button.text'),\n                tone: requestPending ? 'default' : 'primary',\n                disabled: requestPending,\n                mode: requestPending ? 'bleed' : undefined,\n              }\n            : undefined\n        }\n        data-testid=\"permission-check-banner\"\n        icon={ReadOnlyIcon}\n      />\n      {showRequestPermissionDialog && (\n        <RequestPermissionDialog\n          onClose={() => setShowRequestPermissionDialog(false)}\n          onRequestSubmitted={() => {\n            setRequestSent(true)\n            setShowRequestPermissionDialog(false)\n          }}\n        />\n      )}\n    </>\n  )\n}\n","import {CloseIcon, SyncIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {type KeyedSegment, type Reference} from '@sanity/types'\nimport {Text} from '@sanity/ui'\nimport {fromString as pathFromString, get as pathGet} from '@sanity/util/paths'\nimport {memo, useCallback, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {concat, type Observable, of} from 'rxjs'\nimport {debounceTime, map} from 'rxjs/operators'\nimport {\n  type DocumentAvailability,\n  getPublishedId,\n  useDocumentPreviewStore,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {type RouterPaneGroup} from '../../../../types'\nimport {Banner} from './Banner'\n\ninterface ParentReferenceInfo {\n  loading: boolean\n  result?: {\n    availability: {\n      draft: DocumentAvailability\n      published: DocumentAvailability\n      version?: DocumentAvailability\n    }\n    refValue: string | undefined\n  }\n}\n\nexport const ReferenceChangedBanner = memo(() => {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {selectedReleaseId} = usePerspective()\n  const {params, groupIndex, routerPanesState, replaceCurrent, BackLink} = usePaneRouter()\n  const routerReferenceId = routerPanesState[groupIndex]?.[0].id\n  const parentGroup = routerPanesState[groupIndex - 1] as RouterPaneGroup | undefined\n  const parentSibling = parentGroup?.[0]\n  const parentId = parentSibling?.id\n  const hasHistoryOpen = Boolean(parentSibling?.params?.rev)\n  const parentRefPath = useMemo(() => {\n    return (params?.parentRefPath && pathFromString(params.parentRefPath)) || null\n  }, [params?.parentRefPath])\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  /**\n   * Loads information regarding the reference field of the parent pane. This\n   * is only applicable to child references (aka references-in-place).\n   *\n   * It utilizes the pane ID of the parent pane (which is a document ID) along\n   * with the `parentRefPath` router param on the current pane to find the\n   * current value of the reference field on the parent document.\n   *\n   * This is used to compare with the current pane's document ID. If the IDs\n   * don't match then this banner should reveal itself\n   */\n  const referenceInfoObservable = useMemo((): Observable<ParentReferenceInfo> => {\n    const parentRefPathSegment = parentRefPath?.[0] as string | undefined\n\n    // short-circuit: this document pane is not a child reference pane\n    if (!parentId || !parentRefPathSegment || !parentRefPath) {\n      return of({loading: false})\n    }\n\n    const publishedId = getPublishedId(parentId)\n    const path = pathFromString(parentRefPathSegment)\n\n    // note: observePaths doesn't support keyed path segments, so we need to select the nearest parent\n    const keyedSegmentIndex = path.findIndex(\n      (p): p is KeyedSegment => typeof p == 'object' && '_key' in p,\n    )\n\n    return concat(\n      // emit a loading state instantly\n      of({loading: true}),\n      // then emit the values from watching the published ID's path\n      documentPreviewStore\n        .unstable_observePathsDocumentPair(\n          publishedId,\n          (keyedSegmentIndex === -1 ? path : path.slice(0, keyedSegmentIndex)) as string[][],\n          {\n            version: selectedReleaseId,\n          },\n        )\n        .pipe(\n          // this debounce time is needed to prevent flashing banners due to\n          // the router state updating faster than the content-lake state. we\n          // debounce to wait for more emissions because the value pulled\n          // initially could be stale.\n          debounceTime(750),\n          map(\n            ({draft, published, version}): ParentReferenceInfo => ({\n              loading: false,\n              result: {\n                availability: {\n                  draft: draft.availability,\n                  published: published.availability,\n                  ...(version?.availability\n                    ? {\n                        version: version.availability,\n                      }\n                    : {}),\n                },\n                refValue: pathGet<Reference>(\n                  version?.snapshot || draft.snapshot || published.snapshot,\n                  parentRefPath,\n                )?._ref,\n              },\n            }),\n          ),\n        ),\n    )\n  }, [selectedReleaseId, documentPreviewStore, parentId, parentRefPath])\n  const referenceInfo = useObservable(referenceInfoObservable, {loading: true})\n\n  const handleReloadReference = useCallback(() => {\n    if (referenceInfo.loading) return\n\n    if (referenceInfo.result?.refValue) {\n      replaceCurrent({\n        id: referenceInfo.result.refValue,\n        params: params as Record<string, string>,\n      })\n    }\n  }, [referenceInfo.loading, referenceInfo.result, replaceCurrent, params])\n\n  const shouldHide =\n    // if `parentId` or `parentRefPath` is not present then this banner is n/a\n    !parentId ||\n    !parentRefPath ||\n    // if viewing this pane via history, then hide\n    hasHistoryOpen ||\n    // if loading, hide\n    referenceInfo.loading ||\n    // if the parent document is not available (e.g. due to permission denied or\n    // not found) we don't want to display a warning here, but instead rely on the\n    // parent view to display the appropriate message\n    (!referenceInfo.result?.availability.draft.available &&\n      !referenceInfo.result?.availability.published.available) ||\n    // if the references are the same, then hide the reference changed banner\n    referenceInfo.result?.refValue === routerReferenceId\n\n  if (shouldHide) return null\n\n  return (\n    <Banner\n      action={\n        referenceInfo.result?.refValue\n          ? {\n              onClick: handleReloadReference,\n              icon: SyncIcon,\n              text: t('banners.reference-changed-banner.reason-changed.reload-button.text'),\n            }\n          : {\n              as: BackLink,\n              icon: CloseIcon,\n              text: t('banners.reference-changed-banner.reason-removed.close-button.text'),\n            }\n      }\n      data-testid=\"reference-changed-banner\"\n      content={\n        <Text size={1} weight=\"medium\">\n          {referenceInfo.result?.refValue\n            ? t('banners.reference-changed-banner.reason-changed.text')\n            : t('banners.reference-changed-banner.reason-removed.text')}\n        </Text>\n      }\n      icon={WarningOutlineIcon}\n      tone=\"caution\"\n    />\n  )\n})\n\nReferenceChangedBanner.displayName = 'Memo(ReferenceChangedBanner)'\n","import {type ToastParams, useToast} from '@sanity/ui'\nimport {useEffect} from 'react'\n\n// https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value\nconst LONG_ENOUGH_BUT_NOT_TOO_LONG = 1000 * 60 * 60 * 24 * 24\n\n/**\n * Workaround to support conditional toast (e.g. a toast that is visible as long as a condition holds true)\n */\nexport function useConditionalToast(params: ToastParams & {id: string; enabled?: boolean}) {\n  const toast = useToast()\n\n  // note1: there's a `duration || 0` in Sanity UI's pushToast(), so make it non-falsey\n  // note2: cannot use `Infinity` as duration, since it exceeds setTimeout's maximum delay value\n  useEffect(() => {\n    if (params.enabled) {\n      toast.push({...params, duration: LONG_ENOUGH_BUT_NOT_TOO_LONG})\n    }\n    return () => {\n      if (params.enabled) {\n        toast.push({\n          ...params,\n          // Note: @sanity/ui fallbacks to the default duration of 4s in case of falsey values\n          duration: 0.01,\n        })\n      }\n    }\n  }, [params, toast])\n}\n","import {Text, useToast} from '@sanity/ui'\nimport {useCallback, useEffect, useState} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionInlineBadge,\n  LATEST,\n  type ReleaseDocument,\n  Translate,\n  useTranslation,\n  useVersionOperations,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useConditionalToast} from '../documentViews/useConditionalToast'\nimport {Banner} from './Banner'\n\n// How long to wait after user hit the \"Add to release\"-button before displaying the \"waiting…\" toast\nconst TOAST_DELAY = 1000\n\ntype VersionCreateState = {\n  status: 'creating' | 'created'\n  lastUpdate: Date\n}\n\nexport function AddToReleaseBanner({\n  documentId,\n  currentRelease,\n  value,\n}: {\n  documentId: string\n  currentRelease: ReleaseDocument\n  value?: Record<string, unknown>\n}): React.JSX.Element {\n  const tone = getReleaseTone(currentRelease ?? LATEST)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  const {createVersion} = useVersionOperations()\n\n  const [versionCreateState, setVersionCreateState] = useState<VersionCreateState | undefined>()\n  const toast = useToast()\n  const handleAddToRelease = useCallback(async () => {\n    if (currentRelease._id) {\n      setVersionCreateState({status: 'creating', lastUpdate: new Date()})\n      try {\n        await createVersion(\n          getReleaseIdFromReleaseDocumentId(currentRelease._id),\n          documentId,\n          value,\n        )\n        setVersionCreateState({status: 'created', lastUpdate: new Date()})\n      } catch (err) {\n        toast.push({\n          status: 'error',\n          closable: true,\n          title: t('banners.release.error.title'),\n          description: t('banners.release.error.description', {message: err.message}),\n        })\n        // Note: we only want to reset pending state in case of failure, not unconditionally the request completes (i.e. in a finally clause)\n        // this is because the UI won't reflect that the document was successfully added to the release until we get the result back over the listener\n        // once the listener event that adds the document to the release arrives the UI knows that a version exists,\n        // and this banner will not be rendered anymore\n        setVersionCreateState(undefined)\n      }\n    }\n  }, [createVersion, currentRelease._id, documentId, t, toast, value])\n\n  const now = useCurrentTime(200)\n\n  useConditionalToast({\n    status: 'info',\n    id: 'add-document-to-release',\n    enabled: Boolean(\n      versionCreateState?.status === 'created' &&\n        now.getTime() - versionCreateState.lastUpdate.getTime() > TOAST_DELAY,\n    ),\n    closable: true,\n    title: t('banners.release.waiting.title'),\n    description: t('banners.release.waiting.description'),\n  })\n\n  return (\n    <Banner\n      tone={tone}\n      content={\n        <Text size={1}>\n          <Translate\n            i18nKey=\"banners.release.not-in-release\"\n            t={t}\n            values={{\n              title:\n                currentRelease?.metadata?.title || tCore('release.placeholder-untitled-release'),\n            }}\n            components={{\n              VersionBadge: getVersionInlineBadge(currentRelease),\n            }}\n          />\n        </Text>\n      }\n      action={{\n        text: t('banners.release.action.add-to-release'),\n        tone: tone,\n        disabled: Boolean(versionCreateState),\n        onClick: handleAddToRelease,\n        mode: 'default',\n      }}\n    />\n  )\n}\n\nfunction useCurrentTime(updateIntervalMs: number): Date {\n  const [currentTime, setCurrentTime] = useState(new Date())\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(new Date())\n    }, updateIntervalMs)\n    return () => clearInterval(intervalId)\n  }, [updateIntervalMs])\n  return currentTime\n}\n","import {Text} from '@sanity/ui'\nimport {useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionInlineBadge,\n  Translate,\n  useArchivedReleases,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function ArchivedReleaseDocumentBanner(): React.JSX.Element {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n  const {data: archivedReleases} = useArchivedReleases()\n\n  const {params, setParams} = usePaneRouter()\n  const handleGoBack = () => {\n    setParams({\n      ...params,\n      rev: params?.historyEvent || undefined,\n      since: undefined,\n      historyVersion: undefined,\n    })\n  }\n\n  const release = useMemo(() => {\n    return archivedReleases.find(\n      (r) => getReleaseIdFromReleaseDocumentId(r._id) === params?.historyVersion,\n    )\n  }, [archivedReleases, params?.historyVersion])\n\n  const description =\n    release?.state === 'published'\n      ? 'banners.published-release.description'\n      : 'banners.archived-release.description'\n\n  const title = release?.metadata.title || tCore('release.placeholder-untitled-release')\n\n  return (\n    <Banner\n      tone=\"caution\"\n      content={\n        <Text size={1}>\n          <Translate\n            t={t}\n            i18nKey={description}\n            values={{\n              title,\n            }}\n            components={{\n              VersionBadge: getVersionInlineBadge(release),\n            }}\n          />\n        </Text>\n      }\n      action={\n        params?.archivedRelease\n          ? undefined\n          : {\n              text: 'Go back to published version',\n              onClick: handleGoBack,\n            }\n      }\n    />\n  )\n}\n","import {getSanityCreateLinkMetadata, useSanityCreateConfig} from 'sanity'\n\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function CreateLinkedBanner() {\n  const {value} = useDocumentPane()\n  const {documentLinkedBannerContent: CreateLinkedBannerContent} =\n    useSanityCreateConfig().components ?? {}\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n\n  if (!CreateLinkedBannerContent || !createLinkMetadata) return null\n\n  return (\n    <Banner\n      tone=\"transparent\"\n      data-test-id=\"sanity-create-read-only-banner\"\n      content={<CreateLinkedBannerContent metadata={createLinkMetadata} />}\n    />\n  )\n}\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface TypeInfo {\n  liveEditResolveType: 'publish' | 'discard'\n}\n\n/**\n * When a draft in a live edit document is published\n * @internal\n */\nexport const ResolvedLiveEdit = defineEvent<TypeInfo>({\n  name: 'LiveEdit Draft Resolved',\n  version: 1,\n  description: 'User resolved a draft of a live edit document to continue editing',\n})\n","import {type SanityDocument} from '@sanity/client'\nimport {ErrorOutlineIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {Flex, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useState} from 'react'\nimport {type ObjectSchemaType, Translate, useDocumentOperation, useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {ResolvedLiveEdit} from './__telemetry__/DraftLiveEditBanner.telemetry'\nimport {Banner} from './Banner'\n\ninterface DraftLiveEditBannerProps {\n  displayed: Partial<SanityDocument> | null\n  documentId: string\n  schemaType: ObjectSchemaType\n}\n\nexport function DraftLiveEditBanner({\n  displayed,\n  documentId,\n  schemaType,\n}: DraftLiveEditBannerProps): React.JSX.Element | null {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const [isPublishing, setPublishing] = useState(false)\n  const [isDiscarding, setDiscarding] = useState(false)\n  const telemetry = useTelemetry()\n\n  const {publish, discardChanges} = useDocumentOperation(documentId, displayed?._type || '')\n\n  const handlePublish = useCallback(() => {\n    publish.execute()\n    setPublishing(true)\n    telemetry.log(ResolvedLiveEdit, {liveEditResolveType: 'publish'})\n  }, [publish, telemetry])\n\n  const handleDiscard = useCallback(() => {\n    discardChanges.execute()\n    setDiscarding(true)\n    telemetry.log(ResolvedLiveEdit, {liveEditResolveType: 'discard'})\n  }, [discardChanges, telemetry])\n\n  useEffect(() => {\n    return () => {\n      setPublishing(false)\n      setDiscarding(false)\n    }\n  })\n\n  return (\n    <Banner\n      content={\n        <Flex align=\"center\" justify=\"space-between\" gap={2}>\n          <Text size={1} weight=\"medium\">\n            <Translate\n              t={t}\n              i18nKey={'banners.live-edit-draft-banner.text'}\n              values={{schemaType: schemaType.title}}\n            />\n          </Text>\n\n          <Button\n            onClick={handlePublish}\n            text={t('action.publish.live-edit.label')}\n            tooltipProps={{content: t('banners.live-edit-draft-banner.publish.tooltip')}}\n            loading={isPublishing}\n          />\n\n          <Button\n            onClick={handleDiscard}\n            text={t('banners.live-edit-draft-banner.discard.tooltip')}\n            tooltipProps={{content: t('banners.live-edit-draft-banner.discard.tooltip')}}\n            loading={isDiscarding}\n          />\n        </Flex>\n      }\n      data-testid=\"live-edit-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {Flex, Text} from '@sanity/ui'\nimport {useCallback, useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isVersionId,\n  Translate,\n  useActiveReleases,\n  useDocumentVersions,\n  useOnlyHasVersions,\n  useSetPerspective,\n  useTranslation,\n  VersionInlineBadge,\n} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function OpenReleaseToEditBanner({\n  documentId,\n  isPinnedDraftOrPublished,\n}: {\n  documentId: string\n  isPinnedDraftOrPublished: boolean\n}): React.JSX.Element | null {\n  const onlyHasVersions = useOnlyHasVersions({documentId})\n\n  /** this banner should only be rendered in specific cases\n   * 1. when the document is not a draft or published\n   * 2. when the document only has version or versions\n   * 3. when the global perspective is not set (published or draft)\n   */\n\n  if (!isVersionId(documentId)) {\n    return null\n  }\n\n  if (!onlyHasVersions || !isPinnedDraftOrPublished) {\n    return null\n  }\n\n  return <OpenReleaseToEditBannerInner documentId={documentId} />\n}\n\nexport function OpenReleaseToEditBannerInner({\n  documentId,\n}: {\n  documentId: string\n}): React.JSX.Element {\n  const {data: activeReleases} = useActiveReleases()\n  const setPerspective = useSetPerspective()\n  const releaseId = getVersionFromId(documentId) ?? ''\n  const currentVersion = useMemo(\n    () => activeReleases.find((version) => version._id.includes(releaseId)),\n    [activeReleases, releaseId],\n  )\n  const {t: tCore} = useTranslation()\n\n  const {data: documentVersions} = useDocumentVersions({documentId})\n\n  const documentVersionsTitleList = useMemo(\n    () =>\n      activeReleases\n        .filter((version) => {\n          return documentVersions.find((release) => {\n            const r = getVersionFromId(release) ?? ''\n            return getReleaseIdFromReleaseDocumentId(version._id) === r\n          })\n        })\n        .map((version) => version.metadata.title || tCore('release.placeholder-untitled-release')),\n    [activeReleases, documentVersions, tCore],\n  )\n  const tone = currentVersion && getReleaseTone(currentVersion)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleGoToEdit = useCallback(async () => {\n    setPerspective(releaseId)\n  }, [releaseId, setPerspective])\n\n  return (\n    <Banner\n      tone={tone}\n      paddingY={0}\n      data-testid=\"open-release-to-edit-banner\"\n      content={\n        <Flex direction={'row'} align=\"center\" justify=\"space-between\" flex={1}>\n          <Text size={1}>\n            <Flex direction={'row'} gap={1}>\n              {documentVersionsTitleList.length > 1 ? (\n                <Translate\n                  t={t}\n                  i18nKey=\"banners.release.navigate-to-edit-description-multiple\"\n                  components={{\n                    VersionBadge: () => (\n                      <VersionInlineBadge> {documentVersionsTitleList[0]}</VersionInlineBadge>\n                    ),\n                  }}\n                  values={{count: documentVersionsTitleList.length - 1}}\n                />\n              ) : (\n                <Translate\n                  t={t}\n                  i18nKey=\"banners.release.navigate-to-edit-description-single\"\n                  components={{\n                    VersionBadge: () => (\n                      <VersionInlineBadge> {documentVersionsTitleList[0]}</VersionInlineBadge>\n                    ),\n                  }}\n                />\n              )}\n            </Flex>\n          </Text>\n\n          <Button\n            text={t('banners.release.action.open-to-edit')}\n            tone={tone}\n            onClick={handleGoToEdit}\n          />\n        </Flex>\n      }\n    />\n  )\n}\n","import {LockIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {\n  formatRelativeLocalePublishDate,\n  getReleaseTone,\n  LATEST,\n  type ReleaseDocument,\n  Translate,\n  useTranslation,\n} from 'sanity'\n\nimport {Banner} from './Banner'\n\nexport function ScheduledReleaseBanner({\n  currentRelease,\n}: {\n  currentRelease: ReleaseDocument\n}): React.JSX.Element {\n  const tone = getReleaseTone(currentRelease ?? LATEST)\n\n  const {t: tCore} = useTranslation()\n\n  return (\n    <Banner\n      tone={tone}\n      icon={LockIcon}\n      content={\n        <Text size={1}>\n          <Translate\n            t={tCore}\n            i18nKey=\"release.banner.scheduled-for-publishing-on\"\n            values={{\n              date: formatRelativeLocalePublishDate(currentRelease),\n            }}\n          />\n        </Text>\n      }\n    />\n  )\n}\n","import {UnpublishIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {\n  getVersionInlineBadge,\n  isGoingToUnpublish,\n  isReleaseDocument,\n  Translate,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function UnpublishedDocumentBanner() {\n  const {value} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n  const willBeUnpublished = isGoingToUnpublish(value)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  if (isReleaseDocument(selectedPerspective) && willBeUnpublished) {\n    const title =\n      selectedPerspective.metadata?.title || tCore('release.placeholder-untitled-release')\n\n    return (\n      <Banner\n        tone=\"critical\"\n        content={\n          <Text size={1}>\n            <Translate\n              t={t}\n              i18nKey=\"banners.unpublished-release-banner.text\"\n              values={{\n                title,\n              }}\n              components={{\n                VersionBadge: getVersionInlineBadge(selectedPerspective),\n              }}\n            />\n          </Text>\n        }\n        icon={UnpublishIcon}\n      />\n    )\n  }\n  return null\n}\n","import {type ObjectSchemaType} from '@sanity/types'\nimport {Heading, Stack, Text} from '@sanity/ui'\nimport {useTranslation} from 'react-i18next'\nimport {css, styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\n\ninterface DocumentHeaderProps {\n  documentId: string\n  schemaType: ObjectSchemaType\n  title?: string\n}\n\n/**\n * Use CSS container queries to conditionally render headings at different sizes.\n * We hide this entire container (including the document type) if container queries\n * not supported in the current browser.\n *\n * Note that usage of container queries in `styled-components` is only supported in `6.x`.\n * As such, studios that include `\"styled-components\": \"<6\"` as a dependency will only see\n * the largest heading size here, even if their browser supports it!\n */\n\nexport const TitleContainer = styled(Stack)`\n  ${({theme}) => {\n    return css`\n      @supports not (container-type: inline-size) {\n        display: none !important;\n      }\n\n      container-type: inline-size;\n\n      [data-heading] {\n        font-size: ${theme.sanity.fonts.heading.sizes[4].fontSize}px;\n        line-height: ${theme.sanity.fonts.heading.sizes[4].lineHeight}px;\n        overflow-wrap: break-word;\n        text-wrap: pretty;\n      }\n\n      @container (max-width: 560px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[3].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[3].lineHeight}px;\n        }\n      }\n\n      @container (max-width: 420px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[2].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[2].lineHeight}px;\n        }\n      }\n    `\n  }}\n`\n\n/**\n * Header containing current document title and type.\n * Document type is hidden if the document `_id` matches the current document `_type`.\n * The entire header is hidden if container queries are not supported.\n */\nexport const FormHeader = ({documentId, schemaType, title}: DocumentHeaderProps) => {\n  const isSingleton = documentId === schemaType.name\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (schemaType.__experimental_formPreviewTitle === false) {\n    return null\n  }\n\n  return (\n    <TitleContainer marginBottom={6} space={4}>\n      {!isSingleton && (\n        <Text muted size={1}>\n          {schemaType.title ?? schemaType.name}\n        </Text>\n      )}\n\n      <Heading as=\"h2\" data-heading muted={!title} data-testid=\"document-panel-document-title\">\n        {title ?? t('document-view.form-view.form-title-fallback')}\n      </Heading>\n    </TitleContainer>\n  )\n}\n","/* eslint-disable no-nested-ternary */\nimport {Box, Container, Flex, focusFirstDescendant, Spinner, Text} from '@sanity/ui'\nimport {type FormEvent, forwardRef, useCallback, useEffect, useMemo, useState} from 'react'\nimport {tap} from 'rxjs/operators'\nimport {\n  createPatchChannel,\n  type DocumentMutationEvent,\n  type DocumentRebaseEvent,\n  FormBuilder,\n  type FormDocumentValue,\n  fromMutationPatches,\n  type PatchMsg,\n  PresenceOverlay,\n  useDocumentPresence,\n  useDocumentStore,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {Delay} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDocumentTitle} from '../../useDocumentTitle'\nimport {FormHeader} from './FormHeader'\nimport {useConditionalToast} from './useConditionalToast'\n\ninterface FormViewProps {\n  hidden: boolean\n  margins: [number, number, number, number]\n}\n\nconst preventDefault = (ev: FormEvent) => ev.preventDefault()\n\nexport const FormView = forwardRef<HTMLDivElement, FormViewProps>(function FormView(props, ref) {\n  const {hidden, margins} = props\n\n  const {\n    collapsedFieldSets,\n    collapsedPaths,\n    displayed: value,\n    editState,\n    documentId,\n    documentType,\n    fieldActions,\n    onChange,\n    validation,\n    ready,\n    formState,\n    onFocus,\n    connectionState,\n    onBlur,\n    onSetCollapsedPath,\n    onPathOpen,\n    onSetCollapsedFieldSet,\n    onSetActiveFieldGroup,\n    openPath,\n  } = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const documentStore = useDocumentStore()\n  const presence = useDocumentPresence(documentId)\n  const {title} = useDocumentTitle()\n  // The `patchChannel` is an INTERNAL publish/subscribe channel that we use to notify form-builder\n  // nodes about both remote and local patches.\n  // - Used by the Portable Text input to modify selections.\n  // - Used by `withDocument` to reset value.\n  const [patchChannel] = useState(() => createPatchChannel())\n\n  const isLocked = editState?.transactionSyncLock?.enabled\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const conditionalToastParams = useMemo(\n    () => ({\n      id: `sync-lock`,\n      status: 'warning' as const,\n      enabled: isLocked,\n      title: t('document-view.form-view.sync-lock-toast.title'),\n      description: t('document-view.form-view.sync-lock-toast.description'),\n      closable: true,\n    }),\n    [isLocked, t],\n  )\n\n  useConditionalToast(conditionalToastParams)\n\n  useEffect(() => {\n    const sub = documentStore.pair\n      .documentEvents(documentId, documentType, selectedReleaseId)\n      .pipe(\n        tap((event) => {\n          if (event.type === 'mutation') {\n            patchChannel.publish(prepareMutationEvent(event))\n          }\n\n          if (event.type === 'rebase') {\n            patchChannel.publish(prepareRebaseEvent(event))\n          }\n        }),\n      )\n      .subscribe()\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [documentId, documentStore, documentType, patchChannel, selectedReleaseId])\n\n  const hasRev = Boolean(value?._rev)\n  const handleInitialValue = useEffectEvent(() => {\n    // this is a workaround for an issue that caused the document pushed to withDocument to get\n    // stuck at the first initial value.\n    // This effect is triggered only when the document goes from not having a revision, to getting one\n    // so it will kick in as soon as the document is received from the backend\n    patchChannel.publish({\n      type: 'mutation',\n      patches: [],\n      snapshot: value,\n    })\n  })\n  useEffect(() => {\n    if (hasRev) {\n      handleInitialValue()\n    }\n    // React to changes in hasRev only\n  }, [hasRev])\n\n  const [formRef, setFormRef] = useState<null | HTMLDivElement>(null)\n\n  // We only want to run it on first mount\n  const [focusedFirstDescendant, setFocusedFirstDescendant] = useState(false)\n  useEffect(() => {\n    // Only focus on the first descendant if there is not already a focus path\n    // This is to avoid stealing focus from intent links\n    if (!focusedFirstDescendant && ready && !formState?.focusPath.length && formRef) {\n      setFocusedFirstDescendant(true)\n      focusFirstDescendant(formRef)\n    }\n  }, [focusedFirstDescendant, formRef, formState?.focusPath.length, ready])\n\n  const setRef = useCallback(\n    (node: HTMLDivElement | null) => {\n      setFormRef(node)\n      if (typeof ref === 'function') {\n        ref(node)\n      } else if (ref) {\n        ref.current = node\n      }\n    },\n    [ref],\n  )\n\n  // const after = useMemo(\n  //   () =>\n  //     Array.isArray(afterEditorComponents) &&\n  //     afterEditorComponents.map(\n  //       (AfterEditorComponent: ComponentType<{documentId: string}>, idx: number) => (\n  //         <AfterEditorComponent key={String(idx)} documentId={documentId} />\n  //       )\n  //     ),\n  //   [documentId]\n  // )\n\n  return (\n    <Container\n      hidden={hidden}\n      paddingX={4}\n      paddingTop={5}\n      paddingBottom={9}\n      sizing=\"border\"\n      width={1}\n    >\n      <PresenceOverlay margins={margins}>\n        <Box as=\"form\" onSubmit={preventDefault} ref={setRef}>\n          {connectionState === 'connecting' && !editState?.draft && !editState?.published ? (\n            <Delay ms={300}>\n              {/* TODO: replace with loading block */}\n              <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n                <Spinner muted />\n                <Box marginTop={3}>\n                  <Text align=\"center\" muted size={1}>\n                    {t('document-view.form-view.loading')}\n                  </Text>\n                </Box>\n              </Flex>\n            </Delay>\n          ) : formState === null || hidden ? (\n            <Box padding={2}>\n              <Text>{t('document-view.form-view.form-hidden')}</Text>\n            </Box>\n          ) : (\n            <>\n              <FormHeader documentId={documentId} schemaType={formState.schemaType} title={title} />\n              <FormBuilder\n                __internal_fieldActions={fieldActions}\n                __internal_patchChannel={patchChannel}\n                changed={formState.changed}\n                collapsedFieldSets={collapsedFieldSets}\n                collapsedPaths={collapsedPaths}\n                focused={formState.focused}\n                focusPath={formState.focusPath}\n                groups={formState.groups}\n                id=\"root\"\n                members={formState.members}\n                onChange={onChange}\n                onFieldGroupSelect={onSetActiveFieldGroup}\n                onPathBlur={onBlur}\n                onPathFocus={onFocus}\n                onPathOpen={onPathOpen}\n                onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n                onSetPathCollapsed={onSetCollapsedPath}\n                openPath={openPath}\n                presence={presence}\n                readOnly={\n                  connectionState === 'reconnecting' || formState.readOnly || !editState?.ready\n                }\n                schemaType={formState.schemaType}\n                validation={validation}\n                value={\n                  // note: the form state doesn't have a typed concept of a \"document\" value\n                  // but these should be compatible\n                  formState.value as FormDocumentValue\n                }\n              />\n            </>\n          )}\n        </Box>\n      </PresenceOverlay>\n    </Container>\n  )\n})\n\nfunction prepareMutationEvent(event: DocumentMutationEvent): PatchMsg {\n  const patches = event.mutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'mutation',\n    snapshot: event.document,\n    patches: fromMutationPatches(event.origin, patches),\n  }\n}\n\nfunction prepareRebaseEvent(event: DocumentRebaseEvent): PatchMsg {\n  const remotePatches = event.remoteMutations.map((mut) => mut.patch).filter(Boolean)\n  const localPatches = event.localMutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'rebase',\n    snapshot: event.document,\n    patches: fromMutationPatches('remote', remotePatches).concat(\n      fromMutationPatches('local', localPatches),\n    ),\n  }\n}\n","import {CheckmarkIcon, ChevronDownIcon} from '@sanity/icons'\nimport {Menu, TabList, useElementSize} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type ComponentType, type ReactNode, useCallback, useState} from 'react'\n\nimport {Button, MenuButton, MenuItem, Tab} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nfunction DelayedDiv({children, show}: {show: boolean; children: ReactNode}) {\n  return (\n    <motion.div\n      key={show ? 'show' : 'wait'}\n      initial={{opacity: show ? 1 : 0}}\n      animate={{opacity: 1}}\n      transition={\n        show\n          ? {duration: 0.2}\n          : // We delay the showing the element to avoid flickering\n            {delay: 1, duration: 0.2}\n      }\n    >\n      {children}\n    </motion.div>\n  )\n}\n\n/**\n * This component will render the tabs for the document pane, following this rules:\n *  if the view tabs are wider than 200px it collapses to a dropdown\n *  if the header is smaller than 480px it collapses to a dropdown\n * For this we need to first measure the pane header width and then the tabs width.\n *\n * Gotcha, if the tabs are wider han 200px it renders a dropdown and if then the tabs change to be smaller than 200px\n * it will not change back to tabs, this is a limitation of the current implementation but an ok tradeoff to avoid mounting\n * ghost elements just to measure the width.\n */\nexport function DocumentHeaderTabs({parentRef}: {parentRef: HTMLDivElement | null}) {\n  const {activeViewId, paneKey, views} = useDocumentPane()\n\n  const [tabList, setTabList] = useState<HTMLDivElement | null>(null)\n  const parentSize = useElementSize(parentRef)\n  const tabListSize = useElementSize(tabList)\n\n  const parentWidth = parentSize?.border?.width ?? 0\n  const tabListWidth = tabListSize?.border?.width ?? 0\n\n  const tabPanelId = `${paneKey}tabpanel`\n  const activeTab = views.find((view) => view.id === activeViewId)\n\n  if (parentWidth < 480 || tabListWidth > 200) {\n    return (\n      <DelayedDiv\n        // We immediately show the dropdown if the elements have been calculated\n        show={Boolean(parentWidth + tabListWidth)}\n      >\n        <MenuButton\n          id={`${paneKey}tab-menu`}\n          popover={{\n            placement: 'bottom-end',\n            portal: true,\n          }}\n          button={<Button iconRight={ChevronDownIcon} mode=\"bleed\" text={activeTab?.title ?? ''} />}\n          menu={\n            <Menu>\n              {views.map((view, index) => (\n                <DocumentHeaderMenuItem\n                  icon={view.icon}\n                  id={`${paneKey}tab-${view.id}`}\n                  isActive={activeViewId === view.id}\n                  key={view.id}\n                  label={view.title}\n                  tabPanelId={tabPanelId}\n                  viewId={index === 0 ? null : (view.id ?? null)}\n                />\n              ))}\n            </Menu>\n          }\n        />\n      </DelayedDiv>\n    )\n  }\n  return (\n    <DelayedDiv show={Boolean(tabListWidth)}>\n      <TabList space={1} ref={setTabList}>\n        {views.map((view, index) => (\n          <DocumentHeaderTab\n            icon={view.icon}\n            id={`${paneKey}tab-${view.id}`}\n            isActive={activeViewId === view.id}\n            key={view.id}\n            label={view.title}\n            tabPanelId={tabPanelId}\n            viewId={index === 0 ? null : (view.id ?? null)}\n          />\n        ))}\n      </TabList>\n    </DelayedDiv>\n  )\n}\n\nfunction DocumentHeaderMenuItem(props: {\n  icon?: ComponentType | ReactNode\n  id: string\n  isActive: boolean\n  label: string\n  tabPanelId: string\n  viewId: string | null\n}) {\n  const {icon, id, isActive, label, tabPanelId, viewId} = props\n  const {ready, editState} = useDocumentPane()\n  const {setView} = usePaneRouter()\n  const handleClick = useCallback(() => setView(viewId), [setView, viewId])\n\n  return (\n    <MenuItem\n      aria-controls={tabPanelId}\n      disabled={!ready && !editState?.draft && !editState?.published}\n      icon={icon}\n      id={id}\n      text={label}\n      onClick={handleClick}\n      selected={isActive}\n      pressed={isActive}\n      iconRight={isActive ? CheckmarkIcon : undefined}\n    />\n  )\n}\n\nfunction DocumentHeaderTab(props: {\n  icon?: ComponentType | ReactNode\n  id: string\n  isActive: boolean\n  label: string\n  tabPanelId: string\n  viewId: string | null\n}) {\n  const {icon, id, isActive, label, tabPanelId, viewId, ...rest} = props\n  const {ready, editState} = useDocumentPane()\n  const {setView} = usePaneRouter()\n  const handleClick = useCallback(() => setView(viewId), [setView, viewId])\n\n  return (\n    <Tab\n      {...rest} // required to enable <TabList> keyboard navigation\n      aria-controls={tabPanelId}\n      disabled={!ready && !editState?.draft && !editState?.published}\n      icon={icon}\n      id={id}\n      label={label}\n      onClick={handleClick}\n      selected={isActive}\n    />\n  )\n}\n","import {unstable_useValuePreview as useValuePreview, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nexport function DocumentHeaderTitle(): React.JSX.Element {\n  const {connectionState, schemaType, title, value: documentValue} = useDocumentPane()\n  const subscribed = Boolean(documentValue)\n\n  const {error, value} = useValuePreview({\n    enabled: subscribed,\n    schemaType,\n    value: documentValue,\n  })\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (connectionState === 'connecting' && !subscribed) {\n    return <></>\n  }\n\n  if (title) {\n    return <>{title}</>\n  }\n\n  if (!documentValue) {\n    return (\n      <>\n        {t('panes.document-header-title.new.text', {\n          schemaType: schemaType?.title || schemaType?.name,\n        })}\n      </>\n    )\n  }\n\n  if (error) {\n    return <>{t('panes.document-header-title.error.text', {error: error.message})}</>\n  }\n\n  return (\n    <>\n      {value?.title || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>\n          {t('panes.document-header-title.untitled.text')}\n        </span>\n      )}\n    </>\n  )\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, useMemo, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {PaneHeader, usePane, usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTabs} from './DocumentHeaderTabs'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\n\n/**\n * When not collapsed this component will render the title and the tabs.\n * This component will render inside the document panel and not with the DocumentPanelHeader\n */\nexport const DocumentPanelSubHeader = memo(function DocumentPanelHeader() {\n  const {editState, connectionState, views} = useDocumentPane()\n  const {features} = useStructureTool()\n  const {index, BackLink} = usePaneRouter()\n  const [parentRef, setParentRef] = useState<HTMLDivElement | null>(null)\n\n  const showTabs = views.length > 1\n\n  const {collapsed, isLast} = usePane()\n  // Prevent focus if this is the last (non-collapsed) pane.\n  const tabIndex = isLast && !collapsed ? -1 : 0\n\n  // show the back button if both the feature is enabled and the current pane\n  // is not the first\n  const showBackButton = features.backButton && index > 0\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const title = useMemo(() => <DocumentHeaderTitle />, [])\n  const tabs = useMemo(\n    () => showTabs && <DocumentHeaderTabs parentRef={parentRef} />,\n    [showTabs, parentRef],\n  )\n\n  const backButton = useMemo(\n    () =>\n      showBackButton && (\n        <Button\n          as={BackLink}\n          data-as=\"a\"\n          icon={ArrowLeftIcon}\n          mode=\"bleed\"\n          tooltipProps={{content: t('pane-header.back-button.text')}}\n        />\n      ),\n    [BackLink, showBackButton, t],\n  )\n\n  return (\n    <PaneHeader\n      ref={setParentRef}\n      loading={connectionState === 'connecting' && !editState?.draft && !editState?.published}\n      title={title}\n      tabs={tabs}\n      tabIndex={tabIndex}\n      backButton={backButton}\n    />\n  )\n})\n","import {BoundaryElementProvider, Box, Flex, PortalProvider, usePortal} from '@sanity/ui'\nimport {useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  getSanityCreateLinkMetadata,\n  getVersionFromId,\n  isReleaseDocument,\n  isReleaseScheduledOrScheduling,\n  isSanityCreateLinked,\n  isSystemBundle,\n  LegacyLayerProvider,\n  type ReleaseDocument,\n  ScrollContainer,\n  usePerspective,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {PaneContent, usePane, usePaneLayout, usePaneRouter} from '../../../components'\nimport {isLiveEditEnabled} from '../../../components/paneItem/helpers'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DocumentInspectorPanel} from '../documentInspector'\nimport {InspectDialog} from '../inspectDialog'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {\n  DeletedDocumentBanners,\n  DeprecatedDocumentTypeBanner,\n  InsufficientPermissionBanner,\n  ReferenceChangedBanner,\n} from './banners'\nimport {AddToReleaseBanner} from './banners/AddToReleaseBanner'\nimport {ArchivedReleaseDocumentBanner} from './banners/ArchivedReleaseDocumentBanner'\nimport {CreateLinkedBanner} from './banners/CreateLinkedBanner'\nimport {DraftLiveEditBanner} from './banners/DraftLiveEditBanner'\nimport {OpenReleaseToEditBanner} from './banners/OpenReleaseToEditBanner'\nimport {ScheduledReleaseBanner} from './banners/ScheduledReleaseBanner'\nimport {UnpublishedDocumentBanner} from './banners/UnpublishedDocumentBanner'\nimport {FormView} from './documentViews'\nimport {DocumentPanelSubHeader} from './header/DocumentPanelSubHeader'\n\ninterface DocumentPanelProps {\n  footerHeight: number | null\n  headerHeight: number | null\n  isInspectOpen: boolean\n  rootElement: HTMLDivElement | null\n  setDocumentPanelPortalElement: (el: HTMLElement | null) => void\n  footer: React.ReactNode\n}\n\nconst DocumentBox = styled(Box)({\n  position: 'relative',\n})\n\nconst Scroller = styled(ScrollContainer)<{$disabled: boolean}>(({$disabled}) => {\n  if ($disabled) {\n    return {height: '100%'}\n  }\n\n  return css`\n    height: 100%;\n    overflow: auto;\n    position: relative;\n    scroll-behavior: smooth;\n    outline: none;\n  `\n})\n\nexport const DocumentPanel = function DocumentPanel(props: DocumentPanelProps) {\n  const {\n    footerHeight,\n    headerHeight,\n    isInspectOpen,\n    rootElement,\n    setDocumentPanelPortalElement,\n    footer,\n  } = props\n  const {\n    activeViewId,\n    displayed,\n    documentId,\n    editState,\n    inspector,\n    value,\n    views,\n    ready,\n    schemaType,\n    permissions,\n    isPermissionsLoading,\n  } = useDocumentPane()\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n  const showCreateBanner = isSanityCreateLinked(createLinkMetadata)\n\n  const {params} = usePaneRouter()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed} = usePane()\n  const parentPortal = usePortal()\n  const {features} = useStructureTool()\n  const [_portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n  const [documentScrollElement, setDocumentScrollElement] = useState<HTMLDivElement | null>(null)\n  const formContainerElement = useRef<HTMLDivElement | null>(null)\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n\n  const activeView = useMemo(\n    () => views.find((view) => view.id === activeViewId) || views[0] || {type: 'form'},\n    [activeViewId, views],\n  )\n\n  // Use a local portal container when split panes is supported\n  const portalElement: HTMLElement | null = features.splitPanes\n    ? _portalElement || parentPortal.element\n    : parentPortal.element\n\n  // Calculate the height of the header\n  const margins: [number, number, number, number] = useMemo(() => {\n    if (layoutCollapsed) {\n      return [headerHeight || 0, 0, footerHeight ? footerHeight + 2 : 2, 0]\n    }\n\n    return [0, 0, 2, 0]\n  }, [layoutCollapsed, footerHeight, headerHeight])\n\n  const formViewHidden = activeView.type !== 'form'\n\n  const activeViewNode = useMemo(() => {\n    if (activeView.type === 'component' && activeView.component) {\n      const ActiveViewComponent = activeView.component\n      return (\n        <ActiveViewComponent\n          document={{\n            draft: editState?.draft || null,\n            displayed: displayed || value,\n            historical: displayed,\n            published: editState?.published || null,\n          }}\n          documentId={documentId}\n          options={activeView.options}\n          schemaType={schemaType}\n        />\n      )\n    }\n    return false\n  }, [activeView, displayed, documentId, editState?.draft, editState?.published, schemaType, value])\n\n  const isLiveEdit = isLiveEditEnabled(schemaType)\n\n  // Scroll to top as `documentId` changes\n  useEffect(() => {\n    if (!documentScrollElement?.scrollTo) return\n    documentScrollElement.scrollTo(0, 0)\n  }, [documentId, documentScrollElement])\n\n  // Pass portal element to `DocumentPane`\n  useEffect(() => {\n    if (portalElement) {\n      setDocumentPanelPortalElement(portalElement)\n    }\n  }, [portalElement, setDocumentPanelPortalElement])\n\n  const inspectDialog = useMemo(() => {\n    return isInspectOpen ? <InspectDialog value={displayed || value} /> : null\n  }, [isInspectOpen, displayed, value])\n\n  const showInspector = Boolean(!collapsed && inspector)\n  const {selectedPerspective, selectedReleaseId} = usePerspective()\n\n  const banners = useMemo(() => {\n    if (params?.historyVersion) {\n      return <ArchivedReleaseDocumentBanner />\n    }\n    const isScheduledRelease =\n      isReleaseDocument(selectedPerspective) && isReleaseScheduledOrScheduling(selectedPerspective)\n    if (isScheduledRelease) {\n      return <ScheduledReleaseBanner currentRelease={selectedPerspective as ReleaseDocument} />\n    }\n    const isPinnedDraftOrPublish = isSystemBundle(selectedPerspective)\n\n    if (\n      displayed?._id &&\n      getVersionFromId(displayed._id) !== selectedReleaseId &&\n      ready &&\n      !isPinnedDraftOrPublish\n    ) {\n      return (\n        <AddToReleaseBanner\n          documentId={value._id}\n          currentRelease={selectedPerspective as ReleaseDocument}\n          value={displayed || undefined}\n        />\n      )\n    }\n\n    if (\n      activeView.type === 'form' &&\n      isLiveEdit &&\n      ready &&\n      editState?.draft?._id &&\n      !selectedReleaseId\n    ) {\n      return (\n        <DraftLiveEditBanner\n          displayed={displayed}\n          documentId={documentId}\n          schemaType={schemaType}\n        />\n      )\n    }\n\n    if (activeView.type !== 'form' || isPermissionsLoading || !ready) return null\n\n    return (\n      <>\n        {showCreateBanner && <CreateLinkedBanner />}\n        {!permissions?.granted && (\n          <InsufficientPermissionBanner requiredPermission={requiredPermission} />\n        )}\n        <ReferenceChangedBanner />\n        <DeprecatedDocumentTypeBanner />\n        <DeletedDocumentBanners />\n        <UnpublishedDocumentBanner />\n        <OpenReleaseToEditBanner\n          documentId={displayed?._id ?? documentId}\n          isPinnedDraftOrPublished={isPinnedDraftOrPublish}\n        />\n      </>\n    )\n  }, [\n    params?.historyVersion,\n    selectedPerspective,\n    displayed,\n    selectedReleaseId,\n    ready,\n    activeView.type,\n    isLiveEdit,\n    editState?.draft?._id,\n    isPermissionsLoading,\n    showCreateBanner,\n    permissions?.granted,\n    requiredPermission,\n    documentId,\n    value._id,\n    schemaType,\n  ])\n  const showFormView = features.resizablePanes || !showInspector\n  return (\n    <PaneContent>\n      <Flex height=\"fill\">\n        {showFormView && (\n          <Flex height=\"fill\" direction=\"column\" width=\"fill\" flex={2}>\n            <LegacyLayerProvider zOffset=\"paneHeader\">\n              {banners}\n              <DocumentPanelSubHeader />\n            </LegacyLayerProvider>\n            <DocumentBox flex={2} overflow=\"hidden\">\n              <PortalProvider\n                element={portalElement}\n                __unstable_elements={{documentScrollElement: documentScrollElement}}\n              >\n                <BoundaryElementProvider element={documentScrollElement}>\n                  <VirtualizerScrollInstanceProvider\n                    scrollElement={documentScrollElement}\n                    containerElement={formContainerElement}\n                  >\n                    <Scroller\n                      $disabled={layoutCollapsed || false}\n                      data-testid=\"document-panel-scroller\"\n                      ref={setDocumentScrollElement}\n                    >\n                      <FormView\n                        hidden={formViewHidden}\n                        margins={margins}\n                        ref={formContainerElement}\n                      />\n                      {activeViewNode}\n                    </Scroller>\n\n                    {inspectDialog}\n\n                    <div data-testid=\"document-panel-portal\" ref={setPortalElement} />\n                  </VirtualizerScrollInstanceProvider>\n                </BoundaryElementProvider>\n              </PortalProvider>\n            </DocumentBox>\n\n            {footer}\n          </Flex>\n        )}\n        {showInspector && (\n          <BoundaryElementProvider element={rootElement}>\n            <DocumentInspectorPanel\n              documentId={documentId}\n              documentType={schemaType.name}\n              flex={1}\n            />\n          </BoundaryElementProvider>\n        )}\n      </Flex>\n    </PaneContent>\n  )\n}\nDocumentPanel.displayName = 'DocumentPanel'\n","/**\n * @internal\n */\nexport const _DEBUG = false\n\nexport const EMPTY_PARAMS = Object.freeze({})\nexport const LOADING_PANE = Symbol('LOADING_PANE')\n\nexport const DOCUMENT_PANEL_PORTAL_ELEMENT = 'documentPanelPortalElement'\n","import {type Placement} from '@sanity/ui'\n\nimport {type DialogProps} from '../../../../../ui-components'\n\nexport const POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['left', 'bottom']\n\nexport const DIALOG_WIDTH_TO_UI_WIDTH: {[key: string]: DialogProps['width']} = {\n  small: 0,\n  medium: 1,\n  large: 2,\n  full: 'auto',\n}\n","import {\n  Box,\n  Button, // eslint-disable-line no-restricted-imports\n  Flex,\n  Grid,\n  Popover, // eslint-disable-line no-restricted-imports\n  Text,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {useCallback, useRef} from 'react'\nimport {type DocumentActionConfirmDialogProps, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function ConfirmDialog(props: {\n  dialog: DocumentActionConfirmDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<ConfirmDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\n/**\n * Dialog rendered by custom document actions of dialog type `confirm`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nfunction ConfirmDialogContent(props: {dialog: DocumentActionConfirmDialogProps}) {\n  const {dialog} = props\n  const {\n    cancelButtonIcon,\n    cancelButtonText,\n    confirmButtonIcon,\n    confirmButtonText,\n    // color,\n    message,\n    onCancel,\n    onConfirm,\n    tone,\n  } = dialog\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isTopLayer} = useLayer()\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onCancel()\n    },\n    [isTopLayer, onCancel],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(isTopLayer && onCancel, () => [ref.current])\n\n  return (\n    <Flex direction=\"column\" ref={ref} style={{minWidth: 320 - 16, maxWidth: 400}}>\n      <Box flex={1} overflow=\"auto\" padding={4}>\n        <Text>{message}</Text>\n      </Box>\n      <Box paddingX={4} paddingY={3} style={{borderTop: '1px solid var(--card-border-color)'}}>\n        <Grid columns={2} gap={2}>\n          <Button\n            data-testid=\"confirm-dialog-cancel-button\"\n            icon={cancelButtonIcon}\n            onClick={onCancel}\n            mode=\"ghost\"\n            text={cancelButtonText || t('confirm-dialog.cancel-button.fallback-text')}\n          />\n          <Button\n            data-testid=\"confirm-dialog-confirm-button\"\n            icon={confirmButtonIcon}\n            onClick={onConfirm}\n            text={confirmButtonText || t('confirm-dialog.confirm-button.fallback-text')}\n            tone={tone}\n          />\n        </Grid>\n      </Box>\n    </Flex>\n  )\n}\n","import {\n  Box,\n  Dialog, // eslint-disable-line no-restricted-imports\n} from '@sanity/ui'\nimport {useId} from 'react'\nimport {type DocumentActionModalDialogProps, LegacyLayerProvider} from 'sanity'\n\nimport {DIALOG_WIDTH_TO_UI_WIDTH} from './constants'\n\n/**\n * Dialog rendered by custom document actions of dialog type `dialog`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nexport function ModalDialog(props: {dialog: DocumentActionModalDialogProps}) {\n  const {dialog} = props\n  const dialogId = useId()\n\n  const footer = dialog.footer && (\n    <Box paddingX={4} paddingY={3}>\n      {dialog.footer}\n    </Box>\n  )\n\n  return (\n    <LegacyLayerProvider zOffset=\"fullscreen\">\n      <Dialog\n        animate\n        __unstable_hideCloseButton={dialog.showCloseButton === false}\n        footer={footer}\n        header={dialog.header}\n        id={dialogId}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClose={dialog.onClose}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClickOutside={dialog.onClose}\n        width={dialog.width === undefined ? 1 : DIALOG_WIDTH_TO_UI_WIDTH[dialog.width]}\n      >\n        <Box padding={4}>{dialog.content}</Box>\n      </Dialog>\n    </LegacyLayerProvider>\n  )\n}\n","import {\n  Popover, // eslint-disable-line no-restricted-imports\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {useCallback, useRef} from 'react'\nimport {type DocumentActionPopoverDialogProps} from 'sanity'\n\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function PopoverDialog(props: {\n  dialog: DocumentActionPopoverDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<PopoverDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\n/**\n * Popover rendered by custom document actions of dialog type `popover`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nfunction PopoverDialogContent(props: {dialog: DocumentActionPopoverDialogProps}) {\n  const {dialog} = props\n  const {content, onClose} = dialog\n  const {isTopLayer} = useLayer()\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onClose()\n    },\n    [isTopLayer, onClose],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(isTopLayer && onClose, () => [ref.current])\n\n  return <div ref={ref}>{content}</div>\n}\n","import {PortalProvider, Text, usePortal} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {type DocumentActionDialogProps} from 'sanity'\n\nimport {Dialog} from '../../../../ui-components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {ConfirmDialog} from './dialogs/ConfirmDialog'\nimport {ModalDialog} from './dialogs/ModalDialog'\nimport {PopoverDialog} from './dialogs/PopoverDialog'\n\nexport interface ActionStateDialogProps {\n  dialog: DocumentActionDialogProps\n  referenceElement?: HTMLElement | null\n}\n\n// A portal provider that uses the document panel portal element if it exists\n// as the portal element so that dialogs are scoped to the document panel\nfunction DocumentActionPortalProvider(props: {children: ReactNode}) {\n  const {children} = props\n  const {element, elements} = usePortal()\n  const portalElement = elements?.[DOCUMENT_PANEL_PORTAL_ELEMENT] || element\n\n  return <PortalProvider element={portalElement}>{children}</PortalProvider>\n}\n\nexport function ActionStateDialog(props: ActionStateDialogProps) {\n  const {dialog, referenceElement = null} = props\n  const modalId = useId()\n\n  if (dialog.type === 'confirm') {\n    return <ConfirmDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'popover') {\n    return <PopoverDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'dialog' || !dialog.type) {\n    return (\n      <DocumentActionPortalProvider>\n        <ModalDialog dialog={dialog} />\n      </DocumentActionPortalProvider>\n    )\n  }\n\n  if (dialog.type === 'custom') {\n    return <DocumentActionPortalProvider>{dialog?.component}</DocumentActionPortalProvider>\n  }\n\n  // @todo: add validation?\n  const unknownModal: any = dialog\n\n  // eslint-disable-next-line no-console\n  console.warn(`Unsupported modal type ${unknownModal.type}`)\n\n  return (\n    <Dialog\n      id={modalId}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClose={unknownModal.onClose}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClickOutside={unknownModal.onClose}\n      width={1}\n    >\n      {unknownModal.content || (\n        // eslint-disable-next-line i18next/no-literal-string\n        <Text size={1}>\n          Unexpected modal type (<code>{unknownModal.type}</code>)\n        </Text>\n      )}\n    </Dialog>\n  )\n}\n","import {Menu} from '@sanity/ui'\nimport {memo, type ReactNode, useCallback, useId, useMemo, useState} from 'react'\nimport {\n  ContextMenuButton,\n  type DocumentActionDescription,\n  LegacyLayerProvider,\n  useTranslation,\n} from 'sanity'\n\nimport {MenuButton, MenuItem, type PopoverProps} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {ActionStateDialog} from './ActionStateDialog'\n\nexport interface ActionMenuButtonProps {\n  actionStates: DocumentActionDescription[]\n  disabled: boolean\n}\n\n/**\n * @internal\n */\nexport const ActionDialogWrapper = memo(function ActionDialogWrapper({\n  actionStates,\n  children,\n  referenceElement,\n}: {\n  actionStates: DocumentActionDescription[]\n  children: ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  referenceElement?: HTMLElement | null\n}) {\n  const [actionIndex, setActionIndex] = useState(-1)\n  const currentAction = useMemo(() => actionStates[actionIndex], [actionIndex, actionStates])\n\n  const handleAction = useCallback((idx: number) => {\n    setActionIndex(idx)\n  }, [])\n\n  const result = useMemo(() => children({handleAction}), [children, handleAction])\n\n  return (\n    <>\n      {currentAction && currentAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={currentAction.dialog} referenceElement={referenceElement} />\n        </LegacyLayerProvider>\n      )}\n      {result}\n    </>\n  )\n})\n\n/**\n * @internal\n */\nexport function ActionMenuButton(props: ActionMenuButtonProps) {\n  const {actionStates, disabled} = props\n  const idPrefix = useId()\n\n  const [referenceElement, setReferenceElement] = useState<HTMLButtonElement | null>(null)\n\n  const popoverProps: PopoverProps = useMemo(\n    () => ({\n      placement: 'top-end',\n      portal: true,\n      preventOverflow: true,\n    }),\n    [],\n  )\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const renderActionDialog = useCallback<\n    ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  >(\n    ({handleAction}) => (\n      <MenuButton\n        id={`${idPrefix}-action-menu`}\n        button={\n          <ContextMenuButton\n            aria-label={t('buttons.action-menu-button.aria-label')}\n            disabled={disabled}\n            data-testid=\"action-menu-button\"\n            tooltipProps={{content: t('buttons.action-menu-button.tooltip')}}\n          />\n        }\n        menu={\n          <Menu padding={1}>\n            {actionStates.map((actionState, idx) => (\n              <ActionMenuListItem\n                actionState={actionState}\n                disabled={disabled}\n                index={idx}\n                // eslint-disable-next-line react/no-array-index-key\n                key={idx}\n                onAction={handleAction}\n              />\n            ))}\n          </Menu>\n        }\n        popover={popoverProps}\n        ref={setReferenceElement}\n      />\n    ),\n    [actionStates, disabled, idPrefix, popoverProps, t],\n  )\n\n  return (\n    <ActionDialogWrapper actionStates={actionStates} referenceElement={referenceElement}>\n      {renderActionDialog}\n    </ActionDialogWrapper>\n  )\n}\n\ninterface ActionMenuListItemProps {\n  actionState: DocumentActionDescription\n  disabled: boolean\n  index: number\n  onAction: (idx: number) => void\n}\n\nexport function ActionMenuListItem(props: ActionMenuListItemProps) {\n  const {actionState, disabled, index, onAction} = props\n  const {onHandle} = actionState\n\n  const handleClick = useCallback(() => {\n    onAction(index)\n    if (onHandle) onHandle()\n  }, [index, onAction, onHandle])\n\n  const hotkeys = useMemo(() => {\n    return actionState.shortcut\n      ? String(actionState.shortcut)\n          .split('+')\n          .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1))\n      : undefined\n  }, [actionState.shortcut])\n\n  return (\n    <MenuItem\n      data-testid={`action-${actionState.label.replace(' ', '')}`}\n      disabled={disabled || Boolean(actionState.disabled)}\n      hotkeys={hotkeys}\n      icon={actionState.icon}\n      onClick={handleClick}\n      text={actionState.label}\n      tone={actionState.tone}\n      {...(actionState.disabled && {tooltipProps: {content: actionState.title}})}\n    />\n  )\n}\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport {TrashIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_TITLE_KEY = {\n  NOTHING_TO_DELETE: 'action.delete.disabled.nothing-to-delete',\n  NOT_READY: 'action.delete.disabled.not-ready',\n}\n\n/** @internal */\nexport const DeleteAction: DocumentActionComponent = ({id, type, draft, onComplete, release}) => {\n  const {setIsDeleting: paneSetIsDeleting} = useDocumentPane()\n  const {delete: deleteOp} = useDocumentOperation(id, type, release)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setIsDeleting(true)\n    setConfirmDialogOpen(false)\n    paneSetIsDeleting(true)\n    deleteOp.execute()\n    onComplete()\n  }, [deleteOp, onComplete, paneSetIsDeleting])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'delete',\n  })\n\n  const currentUser = useCurrentUser()\n\n  return useMemo(() => {\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: TrashIcon,\n        disabled: true,\n        label: t('action.delete.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"delete-document\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: TrashIcon,\n      disabled: isDeleting || Boolean(deleteOp.disabled) || isPermissionsLoading,\n      title: (deleteOp.disabled && t(DISABLED_REASON_TITLE_KEY[deleteOp.disabled])) || '',\n      label: isDeleting ? t('action.delete.running.label') : t('action.delete.label'),\n      shortcut: 'Ctrl+Alt+D',\n      onHandle: handle,\n      dialog: isConfirmDialogOpen && {\n        type: 'custom',\n        component: (\n          <ConfirmDeleteDialog\n            // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n            action=\"delete\"\n            id={draft?._id || id}\n            type={type}\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      },\n    }\n  }, [\n    currentUser,\n    deleteOp.disabled,\n    draft?._id,\n    handle,\n    handleCancel,\n    handleConfirm,\n    id,\n    isConfirmDialogOpen,\n    isDeleting,\n    isPermissionsLoading,\n    permissions?.granted,\n    t,\n    type,\n  ])\n}\n\nDeleteAction.action = 'delete'\nDeleteAction.displayName = 'DeleteAction'\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport {ResetIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  InsufficientPermissionsMessage,\n  isPublishedId,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_KEY = {\n  NO_CHANGES: 'action.discard-changes.disabled.no-change',\n  NOT_PUBLISHED: 'action.discard-changes.disabled.not-published',\n  NOT_READY: 'action.discard-changes.disabled.not-ready',\n} as const\n\n/** @internal */\nexport const DiscardChangesAction: DocumentActionComponent = ({\n  id,\n  type,\n  published,\n  liveEdit,\n  onComplete,\n  release,\n}) => {\n  const {discardChanges} = useDocumentOperation(id, type, release)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'discardDraft',\n  })\n  const currentUser = useCurrentUser()\n  const {displayed} = useDocumentPane()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const isPublished = displayed?._id && isPublishedId(displayed?._id)\n\n  const handleConfirm = useCallback(() => {\n    discardChanges.execute()\n    onComplete()\n  }, [discardChanges, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | false = useMemo(\n    () =>\n      isConfirmDialogOpen && {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.discard-changes.confirm-dialog.confirm-discard-changes'),\n      },\n    [handleConfirm, isConfirmDialogOpen, onComplete, t],\n  )\n\n  return useMemo(() => {\n    if (!published || liveEdit || isPublished) {\n      return null\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: ResetIcon,\n        disabled: true,\n        label: t('action.discard-changes.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"discard-changes\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: ResetIcon,\n      disabled: Boolean(discardChanges.disabled) || isPermissionsLoading,\n      title: t((discardChanges.disabled && DISABLED_REASON_KEY[discardChanges.disabled]) || ''),\n      label: t('action.discard-changes.label'),\n      onHandle: handle,\n      dialog,\n    }\n  }, [\n    currentUser,\n    dialog,\n    discardChanges.disabled,\n    handle,\n    isPermissionsLoading,\n    isPublished,\n    liveEdit,\n    permissions?.granted,\n    published,\n    t,\n  ])\n}\n\nDiscardChangesAction.action = 'discardChanges'\nDiscardChangesAction.displayName = 'DiscardChangesAction'\n","import {CopyIcon} from '@sanity/icons'\nimport {uuid} from '@sanity/uuid'\nimport {useCallback, useMemo, useState} from 'react'\nimport {filter, firstValueFrom} from 'rxjs'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useDocumentStore,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NOTHING_TO_DUPLICATE: 'action.duplicate.disabled.nothing-to-duplicate',\n  NOT_READY: 'action.duplicate.disabled.not-ready',\n}\n\n/** @internal */\nexport const DuplicateAction: DocumentActionComponent = ({id, type, onComplete, release}) => {\n  const documentStore = useDocumentStore()\n  const {duplicate} = useDocumentOperation(id, type, release)\n  const {navigateIntent} = useRouter()\n  const [isDuplicating, setDuplicating] = useState(false)\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'duplicate',\n  })\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const currentUser = useCurrentUser()\n\n  const handle = useCallback(async () => {\n    const dupeId = uuid()\n\n    setDuplicating(true)\n\n    // set up the listener before executing\n    const duplicateSuccess = firstValueFrom(\n      documentStore.pair\n        .operationEvents(id, type)\n        .pipe(filter((e) => e.op === 'duplicate' && e.type === 'success')),\n    )\n    duplicate.execute(dupeId)\n\n    // only navigate to the duplicated document when the operation is successful\n    await duplicateSuccess\n    navigateIntent('edit', {id: dupeId, type})\n\n    onComplete()\n  }, [documentStore.pair, duplicate, id, navigateIntent, onComplete, type])\n\n  return useMemo(() => {\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        icon: CopyIcon,\n        disabled: true,\n        label: t('action.duplicate.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"duplicate-document\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      icon: CopyIcon,\n      disabled: isDuplicating || Boolean(duplicate.disabled) || isPermissionsLoading,\n      label: isDuplicating ? t('action.duplicate.running.label') : t('action.duplicate.label'),\n      title: duplicate.disabled ? t(DISABLED_REASON_KEY[duplicate.disabled]) : '',\n      onHandle: handle,\n    }\n  }, [\n    currentUser,\n    duplicate.disabled,\n    handle,\n    isDuplicating,\n    isPermissionsLoading,\n    permissions?.granted,\n    t,\n  ])\n}\n\nDuplicateAction.action = 'duplicate'\nDuplicateAction.displayName = 'DuplicateAction'\n","import {RevertIcon} from '@sanity/icons'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  useDocumentOperation,\n  useDocumentOperationEvent,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\n\n/** @internal */\nexport const HistoryRestoreAction: DocumentActionComponent = ({\n  id,\n  type,\n  revision,\n  onComplete,\n  release,\n}) => {\n  const {restore} = useDocumentOperation(id, type, release)\n  const event = useDocumentOperationEvent(id, type)\n  const {navigateIntent} = useRouter()\n  const prevEvent = useRef(event)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleConfirm = useCallback(() => {\n    restore.execute(revision!)\n    onComplete()\n  }, [restore, revision, onComplete])\n\n  /**\n   * If the restore operation is successful, navigate to the document edit view\n   */\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    if (event.type === 'success' && event.op === 'restore') {\n      navigateIntent('edit', {id, type})\n    }\n\n    prevEvent.current = event\n  }, [event, id, navigateIntent, type])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.restore.confirm.message'),\n      }\n    }\n\n    return null\n  }, [handleConfirm, isConfirmDialogOpen, onComplete, t])\n\n  const isRevisionInitial = revision === '@initial'\n  const isRevisionLatest = revision === undefined // undefined means latest revision\n\n  return useMemo(() => {\n    if (isRevisionLatest) {\n      return null\n    }\n\n    return {\n      label: t('action.restore.label'),\n      tone: 'caution',\n      onHandle: handle,\n      title: t(\n        isRevisionInitial\n          ? 'action.restore.disabled.cannot-restore-initial'\n          : 'action.restore.tooltip',\n      ),\n      icon: RevertIcon,\n      dialog,\n      disabled: isRevisionInitial,\n    }\n  }, [dialog, handle, isRevisionInitial, isRevisionLatest, t])\n}\n\nHistoryRestoreAction.action = 'restore'\nHistoryRestoreAction.displayName = 'HistoryRestoreAction'\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface DocumentPublishedInfo {\n  /**\n   * The document was created and published straight away\n   */\n  publishedImmediately: boolean\n\n  /**\n   * The document had a previously published version when it was published\n   */\n  previouslyPublished: boolean\n}\nexport const DocumentPublished = defineEvent<DocumentPublishedInfo>({\n  name: 'Document Published',\n  version: 1,\n  description: 'User clicked the \"Publish\" button in the document pane',\n})\n","import {PublishIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {isValidationErrorMarker} from '@sanity/types'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  isPublishedId,\n  type TFunction,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useEditState,\n  useRelativeTime,\n  useSyncState,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {structureLocaleNamespace, type StructureLocaleResourceKeys} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\nimport {DocumentPublished} from './__telemetry__/documentActions.telemetry'\n\nconst DISABLED_REASON_TITLE_KEY: Record<string, StructureLocaleResourceKeys> = {\n  LIVE_EDIT_ENABLED: 'action.publish.live-edit.publish-disabled',\n  ALREADY_PUBLISHED: 'action.publish.already-published.no-time-ago.tooltip',\n  NO_CHANGES: 'action.publish.no-changes.tooltip',\n  NOT_READY: 'action.publish.disabled.not-ready',\n} as const\n\nfunction getDisabledReason(\n  reason: keyof typeof DISABLED_REASON_TITLE_KEY,\n  publishedAt: string | undefined,\n  t: TFunction,\n) {\n  if (reason === 'ALREADY_PUBLISHED' && publishedAt) {\n    return <AlreadyPublished publishedAt={publishedAt} />\n  }\n  return t(DISABLED_REASON_TITLE_KEY[reason])\n}\n\nfunction AlreadyPublished({publishedAt}: {publishedAt: string}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const timeSincePublished = useRelativeTime(publishedAt, {useTemporalPhrase: true})\n  return <span>{t('action.publish.already-published.tooltip', {timeSincePublished})}</span>\n}\n\n/** @internal */\n// eslint-disable-next-line complexity\nexport const PublishAction: DocumentActionComponent = (props) => {\n  const {id, type, liveEdit, draft, published, release} = props\n  const [publishState, setPublishState] = useState<'publishing' | 'published' | null>(null)\n  const {publish} = useDocumentOperation(id, type)\n  const validationStatus = useValidationStatus(id, type)\n  const syncState = useSyncState(id, type)\n  const {changesOpen, documentId, documentType, value} = useDocumentPane()\n  const editState = useEditState(documentId, documentType)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const revision = (editState?.draft || editState?.published || {})._rev\n\n  const hasValidationErrors = validationStatus.validation.some(isValidationErrorMarker)\n  // we use this to \"schedule\" publish after pending tasks (e.g. validation and sync) has completed\n  const [publishScheduled, setPublishScheduled] = useState<boolean>(false)\n  const isSyncing = syncState.isSyncing\n  const isValidating = validationStatus.isValidating\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'publish',\n  })\n\n  const currentUser = useCurrentUser()\n\n  // eslint-disable-next-line no-nested-ternary\n  const title = publish.disabled\n    ? getDisabledReason(publish.disabled, (published || {})._updatedAt, t) || ''\n    : hasValidationErrors\n      ? t('action.publish.validation-issues.tooltip')\n      : ''\n\n  const hasDraft = Boolean(draft)\n\n  const doPublish = useCallback(() => {\n    publish.execute()\n    setPublishState('publishing')\n  }, [publish])\n\n  useEffect(() => {\n    // make sure the validation status is about the current revision and not an earlier one\n    const validationComplete =\n      validationStatus.isValidating === false && validationStatus.revision !== revision\n\n    if (!publishScheduled || isSyncing || !validationComplete) {\n      return\n    }\n\n    if (!hasValidationErrors) {\n      doPublish()\n    }\n    setPublishScheduled(false)\n  }, [\n    isSyncing,\n    doPublish,\n    hasValidationErrors,\n    publishScheduled,\n    validationStatus.revision,\n    revision,\n    isValidating,\n    validationStatus.isValidating,\n  ])\n\n  useEffect(() => {\n    const didPublish = publishState === 'publishing' && !hasDraft\n\n    const nextState = didPublish ? 'published' : null\n    const delay = didPublish ? 200 : 4000\n    const timer = setTimeout(() => {\n      setPublishState(nextState)\n    }, delay)\n    return () => clearTimeout(timer)\n  }, [changesOpen, publishState, hasDraft])\n\n  const telemetry = useTelemetry()\n\n  const handle = useCallback(() => {\n    telemetry.log(DocumentPublished, {\n      publishedImmediately: !draft?._createdAt,\n      previouslyPublished: Boolean(published),\n    })\n    if (\n      syncState.isSyncing ||\n      validationStatus.isValidating ||\n      validationStatus.revision !== revision\n    ) {\n      setPublishScheduled(true)\n    } else {\n      doPublish()\n    }\n  }, [\n    telemetry,\n    draft?._createdAt,\n    published,\n    syncState.isSyncing,\n    validationStatus.isValidating,\n    validationStatus.revision,\n    revision,\n    doPublish,\n  ])\n\n  return useMemo(() => {\n    if (release) {\n      // Version documents are not publishable by this action, they should be published as part of a release\n      return null\n    }\n    if (liveEdit) {\n      // Live edit documents are not publishable by this action, they are published automatically\n      return null\n    }\n\n    /**\n     * When draft is null, if not a published or version document\n     * then it means the draft is yet to be saved - in this case don't disabled\n     * the publish button due to ALREADY_PUBLISHED reason\n     */\n    if (isPublishedId(value._id) && draft !== null) {\n      return {\n        tone: 'default',\n        icon: PublishIcon,\n        label: t('action.publish.label'),\n        title: getDisabledReason('ALREADY_PUBLISHED', published?._updatedAt, t),\n        disabled: true,\n      }\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'default',\n        icon: PublishIcon,\n        label: t('action.publish.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"publish-document\" currentUser={currentUser} />\n        ),\n        disabled: true,\n      }\n    }\n\n    const disabled = Boolean(\n      publishScheduled ||\n        editState?.transactionSyncLock?.enabled ||\n        publishState === 'publishing' ||\n        publishState === 'published' ||\n        hasValidationErrors ||\n        publish.disabled,\n    )\n\n    return {\n      disabled: disabled || isPermissionsLoading,\n      tone: 'default',\n      label:\n        // eslint-disable-next-line no-nested-ternary\n        publishState === 'published'\n          ? t('action.publish.published.label')\n          : publishScheduled || publishState === 'publishing'\n            ? t('action.publish.running.label')\n            : t('action.publish.draft.label'),\n      // @todo: Implement loading state, to show a `<Button loading />` state\n      // loading: publishScheduled || publishState === 'publishing',\n      icon: PublishIcon,\n      // eslint-disable-next-line no-nested-ternary\n      title: publishScheduled\n        ? t('action.publish.waiting')\n        : publishState === 'published' || publishState === 'publishing'\n          ? null\n          : title,\n      shortcut: disabled || publishScheduled ? null : 'Ctrl+Alt+P',\n      onHandle: handle,\n    }\n  }, [\n    release,\n    liveEdit,\n    value._id,\n    draft,\n    isPermissionsLoading,\n    permissions?.granted,\n    publishScheduled,\n    editState?.transactionSyncLock?.enabled,\n    publishState,\n    hasValidationErrors,\n    publish.disabled,\n    t,\n    title,\n    handle,\n    published?._updatedAt,\n    currentUser,\n  ])\n}\n\nPublishAction.action = 'publish'\nPublishAction.displayName = 'PublishAction'\n","import {UnpublishIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionModalDialogProps,\n  InsufficientPermissionsMessage,\n  isDraftId,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_KEY = {\n  NOT_PUBLISHED: 'action.unpublish.disabled.not-published',\n  NOT_READY: 'action.unpublish.disabled.not-ready',\n  LIVE_EDIT_ENABLED: 'action.unpublish.disabled.live-edit-enabled',\n}\n\n/** @internal */\nexport const UnpublishAction: DocumentActionComponent = ({\n  id,\n  type,\n  draft,\n  onComplete,\n  liveEdit,\n  release,\n}) => {\n  const {unpublish} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'unpublish',\n  })\n  const currentUser = useCurrentUser()\n  const {displayed} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const isDraft = displayed?._id && isDraftId(displayed?._id)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setConfirmDialogOpen(false)\n    unpublish.execute()\n    onComplete()\n  }, [onComplete, unpublish])\n\n  const dialog: DocumentActionModalDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'dialog',\n        onClose: onComplete,\n        content: (\n          <ConfirmDeleteDialog\n            id={draft?._id || id}\n            type={type}\n            // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n            action=\"unpublish\"\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      }\n    }\n\n    return null\n  }, [draft, id, handleCancel, handleConfirm, isConfirmDialogOpen, onComplete, type])\n\n  return useMemo(() => {\n    if (release || isDraft) {\n      // Version documents cannot be unpublished by this action, they should be unpublished as part of a release\n      // Draft documents can't either\n      return null\n    }\n    if (liveEdit) {\n      return null\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: UnpublishIcon,\n        label: 'Unpublish',\n        title: (\n          <InsufficientPermissionsMessage context=\"unpublish-document\" currentUser={currentUser} />\n        ),\n        disabled: true,\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: UnpublishIcon,\n      disabled: Boolean(unpublish.disabled) || isPermissionsLoading,\n      label: t('action.unpublish.label'),\n      title: unpublish.disabled ? t(DISABLED_REASON_KEY[unpublish.disabled]) : '',\n      onHandle: () => setConfirmDialogOpen(true),\n      dialog,\n    }\n  }, [\n    release,\n    isDraft,\n    liveEdit,\n    isPermissionsLoading,\n    permissions?.granted,\n    unpublish.disabled,\n    t,\n    dialog,\n    currentUser,\n  ])\n}\n\nUnpublishAction.action = 'unpublish'\nUnpublishAction.displayName = 'UnpublishAction'\n","/* eslint-disable no-warning-comments */\n/* eslint-disable camelcase */\nimport {Flex, LayerProvider, Stack, Text} from '@sanity/ui'\nimport {memo, useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDescription,\n  Hotkeys,\n  usePerspective,\n  useSource,\n} from 'sanity'\n\nimport {Button, Tooltip} from '../../../../ui-components'\nimport {RenderActionCollectionState} from '../../../components'\nimport {HistoryRestoreAction} from '../../../documentActions'\nimport {toLowerCaseNoSpaces} from '../../../util/toLowerCaseNoSpaces'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {ActionMenuButton} from './ActionMenuButton'\nimport {ActionStateDialog} from './ActionStateDialog'\n\ninterface DocumentStatusBarActionsInnerProps {\n  disabled: boolean\n  showMenu: boolean\n  states: DocumentActionDescription[]\n}\n\nconst DocumentStatusBarActionsInner = memo(function DocumentStatusBarActionsInner(\n  props: DocumentStatusBarActionsInnerProps,\n) {\n  const {disabled, showMenu, states} = props\n  const {__internal_tasks} = useSource()\n  const {editState} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const [firstActionState, ...menuActionStates] = states\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n\n  // TODO: This could be refactored to use the tooltip from the button if the firstAction.title was updated to a string.\n  const tooltipContent = useMemo(() => {\n    if (!firstActionState || (!firstActionState.title && !firstActionState.shortcut)) return null\n\n    return (\n      <Flex style={{maxWidth: 300}} align=\"center\" gap={3}>\n        {firstActionState.title && <Text size={1}>{firstActionState.title}</Text>}\n        {firstActionState.shortcut && (\n          <Hotkeys\n            data-testid=\"document-status-bar-hotkeys\"\n            fontSize={1}\n            style={{marginTop: -4, marginBottom: -4}}\n            keys={String(firstActionState.shortcut)\n              .split('+')\n              .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1).toLowerCase())}\n          />\n        )}\n      </Flex>\n    )\n  }, [firstActionState])\n\n  const sideMenuItems = useMemo(() => {\n    return selectedReleaseId ? [firstActionState, ...menuActionStates] : menuActionStates\n  }, [selectedReleaseId, firstActionState, menuActionStates])\n\n  const canShowAction = firstActionState && !selectedReleaseId && !editState?.liveEdit\n\n  /* Version / Bundling handling */\n  return (\n    <Flex align=\"center\" gap={1}>\n      {__internal_tasks && __internal_tasks.footerAction}\n      {canShowAction && (\n        <LayerProvider zOffset={200}>\n          <Tooltip disabled={!tooltipContent} content={tooltipContent} placement=\"top\">\n            <Stack>\n              <Button\n                data-testid={`action-${toLowerCaseNoSpaces(firstActionState.label)}`}\n                disabled={disabled || Boolean(firstActionState.disabled)}\n                icon={firstActionState.icon}\n                // eslint-disable-next-line react/jsx-handler-names\n                onClick={firstActionState.onHandle}\n                ref={setButtonElement}\n                text={firstActionState.label}\n                tone={firstActionState.tone || 'primary'}\n              />\n            </Stack>\n          </Tooltip>\n        </LayerProvider>\n      )}\n      {/* if it's in version we always only want to show the items on the side menu and not on the main action */}\n      {((showMenu && menuActionStates.length > 0) || selectedReleaseId) && (\n        <ActionMenuButton actionStates={sideMenuItems} disabled={disabled} />\n      )}\n      {firstActionState && firstActionState.dialog && (\n        <ActionStateDialog dialog={firstActionState.dialog} referenceElement={buttonElement} />\n      )}\n    </Flex>\n  )\n})\n\nexport const DocumentStatusBarActions = memo(function DocumentStatusBarActions() {\n  const {actions: allActions, connectionState, documentId, editState} = useDocumentPane()\n  // const [isMenuOpen, setMenuOpen] = useState(false)\n  // const handleMenuOpen = useCallback(() => setMenuOpen(true), [])\n  // const handleMenuClose = useCallback(() => setMenuOpen(false), [])\n  // const handleActionComplete = useCallback(() => setMenuOpen(false), [])\n\n  // The restore action has a dedicated place in the UI; it's only visible when the user is viewing\n  // a different document revision. It must be omitted from this collection.\n  const actions = useMemo(\n    () => (allActions ?? []).filter((action) => !isRestoreAction(action)),\n    [allActions],\n  )\n\n  const renderDocumentStatusBarActions = useCallback<\n    (props: {states: DocumentActionDescription[]}) => React.ReactNode\n  >(\n    ({states}) => (\n      <DocumentStatusBarActionsInner\n        disabled={connectionState !== 'connected'}\n        // isMenuOpen={isMenuOpen}\n        // onMenuOpen={handleMenuOpen}\n        // onMenuClose={handleMenuClose}\n        showMenu={actions.length > 1}\n        states={states}\n        // Use document ID as key to make sure that the actions state is reset when the document changes\n        key={documentId}\n      />\n    ),\n    [actions.length, connectionState, documentId],\n  )\n\n  if (actions.length === 0 || !editState) {\n    return null\n  }\n\n  return (\n    <RenderActionCollectionState\n      // component={}\n      // onActionComplete={handleActionComplete}\n      actions={actions}\n      actionProps={editState}\n      group=\"default\"\n    >\n      {renderDocumentStatusBarActions}\n    </RenderActionCollectionState>\n  )\n})\n\nexport const HistoryStatusBarActions = memo(function HistoryStatusBarActions() {\n  const {actions, connectionState, editState, revisionId: revision} = useDocumentPane()\n\n  const disabled = (editState?.draft || editState?.published || {})._rev === revision\n  const actionProps = useMemo(() => ({...(editState || {}), revision}), [editState, revision])\n\n  // If multiple `restore` actions are defined, ensure only the final one is used.\n  const historyActions = useMemo(() => (actions ?? []).filter(isRestoreAction).slice(-1), [actions])\n\n  const renderDocumentStatusBarActions = useCallback<\n    (props: {states: DocumentActionDescription[]}) => React.ReactNode\n  >(\n    ({states}) => (\n      <DocumentStatusBarActionsInner\n        disabled={connectionState !== 'connected' || Boolean(disabled)}\n        showMenu={false}\n        states={states}\n      />\n    ),\n    [connectionState, disabled],\n  )\n\n  return (\n    <RenderActionCollectionState\n      actions={historyActions}\n      actionProps={actionProps as any}\n      group=\"default\"\n    >\n      {renderDocumentStatusBarActions}\n    </RenderActionCollectionState>\n  )\n})\n\nexport function isRestoreAction(\n  action: DocumentActionComponent,\n): action is DocumentActionComponent & {action: 'restore'} {\n  return action.action === HistoryRestoreAction.action\n}\n","import {Text} from '@sanity/ui'\nimport {memo, useCallback, useMemo} from 'react'\nimport {\n  formatRelativeLocalePublishDate,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isDraftId,\n  isPublishedId,\n  isPublishedPerspective,\n  isReleaseScheduledOrScheduling,\n  isVersionId,\n  type ReleaseDocument,\n  Translate,\n  useActiveReleases,\n  useDateTimeFormat,\n  type UseDateTimeFormatOptions,\n  useOnlyHasVersions,\n  usePerspective,\n  useSchema,\n  useSetPerspective,\n  useTranslation,\n  VersionChip,\n} from 'sanity'\n\nimport {isLiveEditEnabled} from '../../../../../components/paneItem/helpers'\nimport {usePaneRouter} from '../../../../../components/paneRouter/usePaneRouter'\nimport {useFilteredReleases} from '../../../../../hooks/useFilteredReleases'\nimport {useDocumentPane} from '../../../useDocumentPane'\n\nconst TooltipContent = ({release}: {release: ReleaseDocument}) => {\n  const {t} = useTranslation()\n\n  if (release.state === 'archived') {\n    return <Text size={1}>{t('release.chip.tooltip.archived')}</Text>\n  }\n  if (release.metadata.releaseType === 'asap') {\n    return <Text size={1}>{t('release.type.asap')}</Text>\n  }\n  if (release.metadata.releaseType === 'scheduled') {\n    const isActive = release.state === 'active'\n\n    return (\n      release.metadata.intendedPublishAt && (\n        <Text size={1}>\n          {isActive ? (\n            <Translate\n              t={t}\n              i18nKey=\"release.chip.tooltip.intended-for-date\"\n              values={{\n                date: formatRelativeLocalePublishDate(release),\n              }}\n            />\n          ) : (\n            <Translate\n              t={t}\n              i18nKey=\"release.chip.tooltip.scheduled-for-date\"\n              values={{\n                date: formatRelativeLocalePublishDate(release),\n              }}\n            />\n          )}\n        </Text>\n      )\n    )\n  }\n\n  if (release.metadata.releaseType === 'undecided') {\n    return <Text size={1}>{t('release.type.undecided')}</Text>\n  }\n  return null\n}\n\nconst DATE_TIME_FORMAT: UseDateTimeFormatOptions = {\n  dateStyle: 'medium',\n  timeStyle: 'short',\n}\n\nexport const DocumentPerspectiveList = memo(function DocumentPerspectiveList() {\n  const {selectedReleaseId, selectedPerspectiveName} = usePerspective()\n  const {t} = useTranslation()\n  const setPerspective = useSetPerspective()\n  const {params, setParams} = usePaneRouter()\n  const dateTimeFormat = useDateTimeFormat(DATE_TIME_FORMAT)\n  const {loading} = useActiveReleases()\n  const schema = useSchema()\n  const {editState, displayed, documentType, documentId} = useDocumentPane()\n  const isCreatingDocument = displayed && !displayed._createdAt\n  const filteredReleases = useFilteredReleases({displayed, documentId})\n  const onlyHasVersions = useOnlyHasVersions({documentId})\n\n  const handlePerspectiveChange = useCallback(\n    (perspective: Parameters<typeof setPerspective>[0]) => () => {\n      if (perspective === 'published' && params?.historyVersion) {\n        setParams({\n          ...params,\n          rev: params?.historyEvent || undefined,\n          since: undefined,\n          historyVersion: undefined,\n        })\n      }\n      setPerspective(perspective)\n    },\n    [setPerspective, setParams, params],\n  )\n\n  const schemaType = schema.get(documentType)\n  const isLiveEdit = schemaType ? isLiveEditEnabled(schemaType) : false\n\n  const isPublishedChipDisabled = useMemo(() => {\n    // If it's a live edit document the only option to edit it is through\n    // the published perspective, users should be able to select it.\n    if (isLiveEdit && !selectedReleaseId) return false\n\n    // If it's not live edit, we want to check for the existence of the published doc.\n    return !editState?.published\n  }, [isLiveEdit, selectedReleaseId, editState?.published])\n\n  const getReleaseChipState = useCallback(\n    (release: ReleaseDocument): {selected: boolean; disabled?: boolean} => {\n      if (!params?.historyVersion)\n        return {\n          selected:\n            getReleaseIdFromReleaseDocumentId(release._id) ===\n            getVersionFromId(displayed?._id || ''),\n        }\n\n      const isReleaseHistoryMatch =\n        getReleaseIdFromReleaseDocumentId(release._id) === params.historyVersion\n\n      return {selected: isReleaseHistoryMatch, disabled: isReleaseHistoryMatch}\n    },\n    [displayed?._id, params?.historyVersion],\n  )\n\n  const isPublishSelected: boolean = useMemo(() => {\n    /**\n     * The publish perspective is selected when:\n     *  - the document is live edit and there is no draft\n     *  - the document is published and the selected perspective is published\n     */\n    if (isLiveEdit && !editState?.draft?._id && !selectedReleaseId) return true\n    if (\n      isPublishedId(displayed?._id || '') &&\n      isPublishedPerspective(selectedPerspectiveName || '')\n    ) {\n      return true\n    }\n    return false\n  }, [\n    displayed?._id,\n    editState?.draft?._id,\n    isLiveEdit,\n    selectedPerspectiveName,\n    selectedReleaseId,\n  ])\n\n  const isDraftSelected: boolean = useMemo(() => {\n    const displayedId = displayed?._id || ''\n    /** the draft is selected when:\n     * not viewing a historical version,\n     * when the document displayed is a draft,\n     * when the perspective is null,\n     * when the document is not published and the displayed version is draft,\n     * when there is no draft (new document),\n     */\n    if (isPublishSelected) return false\n    if (params?.historyVersion) return false\n    if (selectedPerspectiveName) return false\n    if (isVersionId(displayedId)) return false\n    if (isDraftId(displayedId)) return true\n    if (\n      isPublishedId(displayedId) &&\n      editState?.published &&\n      isPublishedPerspective(selectedPerspectiveName || '')\n    )\n      return false\n    return true\n  }, [\n    displayed?._id,\n    editState?.published,\n    isPublishSelected,\n    params?.historyVersion,\n    selectedPerspectiveName,\n  ])\n\n  const isDraftDisabled: boolean = useMemo(() => {\n    // Draft is disabled when the document has no published or draft but has versions\n    if (onlyHasVersions || (isCreatingDocument && selectedReleaseId)) {\n      return true\n    }\n\n    // Draft is disabled when we are creating a new document inside a release\n    // or when the document is live edit and there is no draft\n    if (!editState?.draft && !isLiveEdit) {\n      return false\n    }\n\n    if (isCreatingDocument && selectedReleaseId) return true\n    if (isLiveEdit) return true\n    return false\n  }, [editState?.draft, isCreatingDocument, isLiveEdit, onlyHasVersions, selectedReleaseId])\n\n  return (\n    <>\n      <VersionChip\n        tooltipContent={\n          <Text size={1}>\n            {editState?.published && editState?.published?._updatedAt ? (\n              <Translate\n                t={t}\n                i18nKey=\"release.chip.tooltip.published-date\"\n                values={{date: dateTimeFormat.format(new Date(editState?.published._updatedAt))}}\n              />\n            ) : (\n              <>{t('release.chip.tooltip.not-published')}</>\n            )}\n          </Text>\n        }\n        disabled={isPublishedChipDisabled}\n        onClick={handlePerspectiveChange('published')}\n        selected={isPublishSelected}\n        text={t('release.chip.published')}\n        tone=\"positive\"\n        contextValues={{\n          documentId: editState?.published?._id || editState?.id || '',\n          menuReleaseId: editState?.published?._id || editState?.id || '',\n          releases: filteredReleases.notCurrentReleases,\n          releasesLoading: loading,\n          documentType,\n          fromRelease: 'published',\n          isVersion: false,\n          disabled: !editState?.published,\n        }}\n      />\n      <VersionChip\n        tooltipContent={\n          <Text size={1}>\n            {editState?.draft ? (\n              <>\n                {editState?.draft._updatedAt ? (\n                  <Translate\n                    t={t}\n                    i18nKey=\"release.chip.tooltip.edited-date\"\n                    values={{date: dateTimeFormat.format(new Date(editState?.draft._updatedAt))}}\n                  />\n                ) : (\n                  <Translate\n                    t={t}\n                    i18nKey=\"release.chip.tooltip.created-date\"\n                    values={{date: dateTimeFormat.format(new Date(editState?.draft._createdAt))}}\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                {isLiveEdit\n                  ? t('release.chip.tooltip.draft-disabled.live-edit')\n                  : t('release.chip.tooltip.no-edits')}\n              </>\n            )}\n          </Text>\n        }\n        selected={isDraftSelected}\n        disabled={isDraftDisabled}\n        text={t('release.chip.draft')}\n        tone={editState?.draft ? 'caution' : 'neutral'}\n        onClick={handlePerspectiveChange('drafts')}\n        contextValues={{\n          documentId: editState?.draft?._id || editState?.published?._id || editState?.id || '',\n          menuReleaseId: editState?.draft?._id || editState?.published?._id || editState?.id || '',\n          releases: filteredReleases.notCurrentReleases,\n          releasesLoading: loading,\n          documentType: documentType,\n          fromRelease: 'draft',\n          isVersion: false,\n          disabled: !editState?.draft,\n        }}\n      />\n      {filteredReleases.inCreation && (\n        <VersionChip\n          tooltipContent={<TooltipContent release={filteredReleases.inCreation} />}\n          selected\n          onClick={() => {}}\n          locked={false}\n          tone={getReleaseTone(filteredReleases.inCreation)}\n          text={\n            filteredReleases.inCreation.metadata.title || t('release.placeholder-untitled-release')\n          }\n          contextValues={{\n            disabled: true, // disable the chip context menu, this one is in creation\n            documentId: displayed?._id || '',\n            menuReleaseId: filteredReleases.inCreation._id,\n            releases: filteredReleases.notCurrentReleases,\n            releasesLoading: loading,\n            documentType,\n            fromRelease: getReleaseIdFromReleaseDocumentId(filteredReleases.inCreation._id),\n            releaseState: filteredReleases.inCreation.state,\n            isVersion: true,\n          }}\n        />\n      )}\n\n      {displayed &&\n        filteredReleases.currentReleases?.map((release) => (\n          <VersionChip\n            key={release._id}\n            tooltipContent={<TooltipContent release={release} />}\n            {...getReleaseChipState(release)}\n            onClick={handlePerspectiveChange(getReleaseIdFromReleaseDocumentId(release._id))}\n            text={release.metadata.title || t('release.placeholder-untitled-release')}\n            tone={getReleaseTone(release)}\n            locked={isReleaseScheduledOrScheduling(release)}\n            contextValues={{\n              documentId: displayed?._id || '',\n              menuReleaseId: release._id,\n              releases: filteredReleases.notCurrentReleases,\n              releasesLoading: loading,\n              documentType: documentType,\n              fromRelease: getReleaseIdFromReleaseDocumentId(release._id),\n              releaseState: release.state,\n              isVersion: true,\n            }}\n          />\n        ))}\n    </>\n  )\n})\n","import {ArrowLeftIcon, CloseIcon, SplitVerticalIcon} from '@sanity/icons'\nimport {Box, Card, Flex} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2, rgba} from '@sanity/ui/theme'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  memo,\n  useCallback,\n  useDeferredValue,\n  useMemo,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, useFieldActions, useTranslation} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../../ui-components'\nimport {\n  PaneContextMenuButton,\n  PaneHeader,\n  PaneHeaderActionButton,\n  RenderActionCollectionState,\n  usePane,\n  usePaneRouter,\n} from '../../../../components'\nimport {type _PaneMenuNode} from '../../../../components/pane/types'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../../../menuNodes'\nimport {type PaneMenuItem} from '../../../../types'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {ActionDialogWrapper, ActionMenuListItem} from '../../statusBar/ActionMenuButton'\nimport {isRestoreAction} from '../../statusBar/DocumentStatusBarActions'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {DocumentPerspectiveList} from './perspective/DocumentPerspectiveList'\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface DocumentPanelHeaderProps {\n  menuItems: PaneMenuItem[]\n}\n\nconst HorizontalScroller = styled(Card)((props) => {\n  const theme = getTheme_v2(props.theme)\n\n  return css`\n    scrollbar-width: none;\n    z-index: 1;\n    flex: 1;\n    position: relative;\n    > div {\n      &::-webkit-scrollbar {\n        width: 0;\n        height: 0;\n      }\n    }\n\n    &::after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      width: ${theme.space[3]}px;\n      background: linear-gradient(to right, ${rgba(theme.color.bg, 0)}, var(--card-bg-color));\n    }\n  `\n})\n\nexport const DocumentPanelHeader = memo(\n  forwardRef(function DocumentPanelHeader(\n    _props: DocumentPanelHeaderProps,\n    ref: ForwardedRef<HTMLDivElement>,\n  ) {\n    const {menuItems} = _props\n    const {\n      actions: allActions,\n      editState,\n      onMenuAction,\n      onPaneClose,\n      onPaneSplit,\n      menuItemGroups,\n      schemaType,\n      connectionState,\n      views,\n      unstable_languageFilter,\n    } = useDocumentPane()\n    const {features} = useStructureTool()\n    const {index, BackLink, hasGroupSiblings} = usePaneRouter()\n    const {actions: fieldActions} = useFieldActions()\n    const [referenceElement, setReferenceElement] = useState<HTMLElement | null>(null)\n\n    // The restore action has a dedicated place in the UI; it's only visible when the user is\n    // viewing a different document revision. It must be omitted from this collection.\n    const actions = useMemo(\n      () => (allActions ?? []).filter((action) => !isRestoreAction(action)),\n      [allActions],\n    )\n\n    const menuNodes = useMemo(\n      () =>\n        resolveMenuNodes({actionHandler: onMenuAction, fieldActions, menuItems, menuItemGroups}),\n      [onMenuAction, fieldActions, menuItemGroups, menuItems],\n    )\n\n    const menuButtonNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n    const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n    const showTabs = views.length > 1\n\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    // there are three kinds of buttons possible:\n    //\n    // 1. split pane - creates a new split pane\n    // 2. close split pane — closes the current split pane\n    // 3. close pane group — closes the current pane group\n\n    // show the split pane button if they're enabled and there is more than one\n    // view available to use to create a split view\n    const showSplitPaneButton = features.splitViews && onPaneSplit && views.length > 1\n\n    // show the split pane button close button if the split button is showing\n    // and there is more than one split pane open (aka has-siblings)\n    const showSplitPaneCloseButton = showSplitPaneButton && hasGroupSiblings\n\n    // show the back button if both the feature is enabled and the current pane\n    // is not the first\n    const showBackButton = features.backButton && index > 0\n\n    // show the pane group close button if the `showSplitPaneCloseButton` is\n    // _not_ showing (the split pane button replaces the group close button)\n    // and if the back button is not showing (the back button and the close\n    // button do the same thing and shouldn't be shown at the same time)\n    // and if a BackLink component was provided\n    const showPaneGroupCloseButton = !showSplitPaneCloseButton && !showBackButton && !!BackLink\n\n    const {t} = useTranslation(structureLocaleNamespace)\n\n    const renderPaneActions = useCallback<\n      (props: {states: DocumentActionDescription[]}) => React.ReactNode\n    >(\n      ({states}) => (\n        <DocumentPanelHeaderActionDialogDeferred\n          contextMenuNodes={contextMenuNodes}\n          setReferenceElement={setReferenceElement}\n          referenceElement={referenceElement}\n          states={states}\n        />\n      ),\n      [contextMenuNodes, referenceElement],\n    )\n\n    const title = useMemo(() => <DocumentHeaderTitle />, [])\n    const backButton = useMemo(\n      () =>\n        showBackButton && (\n          <Button\n            as={BackLink}\n            data-as=\"a\"\n            icon={ArrowLeftIcon}\n            mode=\"bleed\"\n            tooltipProps={{content: t('pane-header.back-button.text')}}\n          />\n        ),\n      [BackLink, showBackButton, t],\n    )\n    const renderedActions = useMemo(\n      () => (\n        <Flex align=\"center\" gap={1}>\n          {unstable_languageFilter.length > 0 && (\n            <>\n              {unstable_languageFilter.map((LanguageFilterComponent, idx) => {\n                return (\n                  <LanguageFilterComponent\n                    // eslint-disable-next-line react/no-array-index-key\n                    key={`language-filter-${idx}`}\n                    schemaType={schemaType}\n                  />\n                )\n              })}\n            </>\n          )}\n\n          {menuButtonNodes.map((item) => (\n            <PaneHeaderActionButton key={item.key} node={item} />\n          ))}\n          {editState && (\n            <RenderActionCollectionState\n              actions={actions}\n              actionProps={editState}\n              group=\"paneActions\"\n            >\n              {renderPaneActions}\n            </RenderActionCollectionState>\n          )}\n\n          {showSplitPaneButton && (\n            <Button\n              aria-label={t('buttons.split-pane-button.aria-label')}\n              icon={SplitVerticalIcon}\n              key=\"split-pane-button\"\n              mode=\"bleed\"\n              onClick={onPaneSplit}\n              tooltipProps={{content: t('buttons.split-pane-button.tooltip')}}\n            />\n          )}\n\n          {showSplitPaneCloseButton && (\n            <Button\n              icon={CloseIcon}\n              key=\"close-view-button\"\n              mode=\"bleed\"\n              onClick={onPaneClose}\n              tooltipProps={{content: t('buttons.split-pane-close-button.title')}}\n            />\n          )}\n\n          {showPaneGroupCloseButton && (\n            <Button\n              icon={CloseIcon}\n              key=\"close-view-button\"\n              mode=\"bleed\"\n              tooltipProps={{content: t('buttons.split-pane-close-group-button.title')}}\n              as={BackLink}\n            />\n          )}\n        </Flex>\n      ),\n      [\n        BackLink,\n        actions,\n        editState,\n        menuButtonNodes,\n        onPaneClose,\n        onPaneSplit,\n        renderPaneActions,\n        schemaType,\n        showPaneGroupCloseButton,\n        showSplitPaneButton,\n        showSplitPaneCloseButton,\n        t,\n        unstable_languageFilter,\n      ],\n    )\n\n    return (\n      <TooltipDelayGroupProvider>\n        {collapsed ? (\n          <PaneHeader\n            border\n            ref={ref}\n            loading={connectionState === 'connecting' && !editState?.draft && !editState?.published}\n            title={title}\n            tabIndex={tabIndex}\n            backButton={backButton}\n          />\n        ) : (\n          <Card hidden={collapsed} style={{lineHeight: 0}} borderBottom>\n            <Flex gap={3} paddingY={3}>\n              <HorizontalScroller>\n                <Flex\n                  flex={1}\n                  gap={1}\n                  overflow=\"auto\"\n                  paddingX={3}\n                  data-testid=\"document-perspective-list\"\n                >\n                  <DocumentPerspectiveList />\n                </Flex>\n              </HorizontalScroller>\n\n              <Box flex=\"none\" paddingRight={3}>\n                {renderedActions}\n              </Box>\n            </Flex>\n          </Card>\n        )}\n      </TooltipDelayGroupProvider>\n    )\n  }),\n)\n\nconst DocumentPanelHeaderActionDialogDeferred = memo(\n  function DocumentPanelHeaderActionDialogDeferred(props: {\n    states: DocumentActionDescription[]\n    setReferenceElement: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n    referenceElement: HTMLElement | null\n    contextMenuNodes: _PaneMenuNode[]\n  }) {\n    const {setReferenceElement, referenceElement, contextMenuNodes} = props\n    /**\n     * The purpose of this component is to allow deferring the rendering of document action hook states if the main thread becomes very busy.\n     * The `useDeferredValue` doesn't have an effect unless it's used to delay rendering a component that has `React.memo` to prevent unnecessary re-renders.\n     */\n    const states = useDeferredValue(props.states)\n\n    return (\n      <DocumentPanelHeaderActionDialog\n        setReferenceElement={setReferenceElement}\n        referenceElement={referenceElement}\n        contextMenuNodes={contextMenuNodes}\n        states={states}\n      />\n    )\n  },\n)\n\nconst DocumentPanelHeaderActionDialog = memo(function DocumentPanelHeaderActionDialog(props: {\n  states: DocumentActionDescription[]\n  setReferenceElement: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n  referenceElement: HTMLElement | null\n  contextMenuNodes: _PaneMenuNode[]\n}) {\n  const {states, setReferenceElement, contextMenuNodes, referenceElement} = props\n\n  const renderActionDialog = useCallback<\n    ({handleAction}: {handleAction: (idx: number) => void}) => React.ReactNode\n  >(\n    ({handleAction}) => (\n      <div ref={setReferenceElement}>\n        <PaneContextMenuButton\n          nodes={contextMenuNodes}\n          key=\"context-menu\"\n          actionsNodes={\n            states.length > 0\n              ? states.map((actionState, actionIndex) => (\n                  <ActionMenuListItem\n                    key={actionState.label}\n                    actionState={actionState}\n                    disabled={Boolean(actionState.disabled)}\n                    index={actionIndex}\n                    onAction={handleAction}\n                  />\n                ))\n              : undefined\n          }\n        />\n      </div>\n    ),\n    [contextMenuNodes, setReferenceElement, states],\n  )\n\n  return (\n    <ActionDialogWrapper actionStates={states} referenceElement={referenceElement}>\n      {renderActionDialog}\n    </ActionDialogWrapper>\n  )\n})\n","import {Button, type ButtonProps} from '../../../ui-components'\n\ninterface SpacerButtonProps {\n  size?: ButtonProps['size']\n}\n\n/**\n * This renders a visually hidden <Button> component that is still contributes\n * to document layout.\n *\n * It's used to simplify padding in Sanity UI components that contain buttons which\n * may not always be rendered.\n *\n * TODO: let's find a more elegant solve to this layout shift problem\n *\n * @internal\n */\nexport function SpacerButton({size}: SpacerButtonProps) {\n  return (\n    <Button\n      aria-hidden\n      disabled\n      size={size}\n      style={{\n        pointerEvents: 'none',\n        visibility: 'hidden',\n        width: 0,\n      }}\n      text=\"-\"\n    />\n  )\n}\n","import {Badge, type BadgeTone, Inline} from '@sanity/ui'\nimport {memo, useCallback, useDeferredValue} from 'react'\nimport {type DocumentBadgeDescription} from 'sanity'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {RenderBadgeCollectionState} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentBadgesInnerProps {\n  states: DocumentBadgeDescription[]\n}\n\nconst BADGE_TONES: Record<string, BadgeTone | undefined> = {\n  primary: 'primary',\n  success: 'positive',\n  warning: 'caution',\n  danger: 'critical',\n}\n\nconst DocumentBadgesInner = memo(function DocumentBadgesInner({states}: DocumentBadgesInnerProps) {\n  if (states.length === 0) {\n    return null\n  }\n  return (\n    <Inline space={1}>\n      {states.map((badge, index) => (\n        <Tooltip\n          content={badge.title}\n          disabled={!badge.title}\n          key={`${badge.label}-${index}`}\n          placement=\"top\"\n          portal\n        >\n          <Badge\n            fontSize={1}\n            mode=\"outline\"\n            paddingX={2}\n            paddingY={1}\n            radius={4}\n            tone={badge.color ? BADGE_TONES[badge.color] : undefined}\n            style={{whiteSpace: 'nowrap'}}\n          >\n            {badge.label}\n          </Badge>\n        </Tooltip>\n      ))}\n    </Inline>\n  )\n})\n\nconst DocumentBadgesDeferred = memo(function DocumentBadgesDeferred(\n  props: DocumentBadgesInnerProps,\n) {\n  /**\n   * The purpose of this component is to allow deferring the rendering of document action hook states if the main thread becomes very busy.\n   * The `useDeferredValue` doesn't have an effect unless it's used to delay rendering a component that has `React.memo` to prevent unnecessary re-renders.\n   */\n  const states = useDeferredValue(props.states)\n  return <DocumentBadgesInner states={states} />\n})\n\nexport function DocumentBadges() {\n  const {badges, editState} = useDocumentPane()\n\n  const renderDocumentBadges = useCallback<\n    (props: {states: DocumentBadgeDescription[]}) => React.ReactNode\n  >(({states}) => <DocumentBadgesDeferred states={states} />, [])\n\n  if (!editState || !badges) return null\n\n  return (\n    <RenderBadgeCollectionState badges={badges} badgeProps={editState}>\n      {renderDocumentBadges}\n    </RenderBadgeCollectionState>\n  )\n}\n","import {\n  AddIcon,\n  CloseIcon,\n  EditIcon,\n  type IconComponent,\n  PublishIcon,\n  TrashIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\n\nexport const TIMELINE_ICON_COMPONENTS: {[key: string]: IconComponent | undefined} = {\n  create: AddIcon,\n  delete: TrashIcon,\n  discardDraft: CloseIcon,\n  initial: AddIcon,\n  editDraft: EditIcon,\n  editLive: EditIcon,\n  publish: PublishIcon,\n  unpublish: UnpublishIcon,\n}\n","import {type IconComponent} from '@sanity/icons'\nimport {type ChunkType} from 'sanity'\n\nimport {TIMELINE_ICON_COMPONENTS} from './constants'\n\nexport function getTimelineEventIconComponent(type: ChunkType): IconComponent | undefined {\n  return TIMELINE_ICON_COMPONENTS[type]\n}\n","import {ChevronLeftIcon} from '@sanity/icons'\nimport {type MouseEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {TIMELINE_LIST_WRAPPER_ID} from './timeline'\n\n/**\n * This is a hack to force the scrollbar to not appear when the list is expanding,\n * if we don't do this the scrollbar will appear for a brief moment when the list is expanding and then disappear\n * when the list is fully expanded.\n */\nfunction hideScrollbarOnExpand(isExpanded: boolean) {\n  // Do nothing if the list is already expanded\n  if (isExpanded) return\n\n  const listWrapper = document.getElementById(TIMELINE_LIST_WRAPPER_ID)\n\n  if (listWrapper) {\n    const firstChildren = listWrapper.children[0] as HTMLElement\n    const hasScrollbar = firstChildren.scrollHeight > firstChildren.clientHeight\n    if (!hasScrollbar) {\n      //\n      const currentStyle = getComputedStyle(firstChildren).overflowY\n      // Add overflow hidden to the listWrapper to avoid the scrollbar to appear when expanding\n      firstChildren.style.overflowY = 'hidden'\n      setTimeout(() => {\n        // Reset the overflow style after the list is expanded\n        firstChildren.style.overflowY = currentStyle\n      }, 0)\n    }\n  }\n}\n\nconst FlipIcon = styled(ChevronLeftIcon)`\n  transition: transform 200ms;\n  &[data-expanded='true'] {\n    transform: rotate(-90deg);\n  }\n`\n\nexport function ExpandableTimelineItemButton({\n  isExpanded,\n  onExpand,\n}: {\n  isExpanded: boolean\n  onExpand: () => void\n}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleExpandClick = useCallback(\n    (e: MouseEvent<HTMLButtonElement>) => {\n      e.stopPropagation()\n      hideScrollbarOnExpand(isExpanded)\n      onExpand()\n    },\n    [onExpand, isExpanded],\n  )\n\n  return (\n    <Button\n      mode=\"bleed\"\n      icon={<FlipIcon data-expanded={isExpanded} />}\n      tooltipProps={{\n        content: isExpanded\n          ? t('timeline-item.menu.action-collapse')\n          : t('timeline-item.menu.action-expand'),\n      }}\n      onClick={handleExpandClick}\n    />\n  )\n}\n","import {Box, Flex, Stack} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const StackWrapper = styled(Stack)`\n  max-width: 200px;\n`\n\nexport const ListWrapper = styled(Flex)<{$maxHeight: string}>`\n  max-height: ${(props) => props.$maxHeight};\n  min-width: 244px;\n`\n\nexport const Root = styled(Box)<{$visible?: boolean}>(({$visible}) => {\n  return css`\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.2s;\n\n    ${$visible &&\n    css`\n      opacity: 1;\n      pointer-events: auto;\n    `}\n  `\n})\n","import {type ChunkType, type StudioLocaleResourceKeys} from 'sanity'\n\n/**\n * Maps from a chunk type to an i18n key for the operation\n *\n * @internal\n */\nexport const TIMELINE_ITEM_I18N_KEY_MAPPING: Record<ChunkType, StudioLocaleResourceKeys> = {\n  initial: 'timeline.operation.created-initial',\n  create: 'timeline.operation.created',\n  publish: 'timeline.operation.published',\n  editLive: 'timeline.operation.edited-live',\n  editDraft: 'timeline.operation.edited-draft',\n  unpublish: 'timeline.operation.unpublished',\n  discardDraft: 'timeline.operation.draft-discarded',\n  delete: 'timeline.operation.deleted',\n}\n","import {type AvatarSize, AvatarStack} from '@sanity/ui'\nimport {UserAvatar} from 'sanity'\n\ninterface UserAvatarStackProps {\n  maxLength?: number\n  userIds: string[]\n  size?: AvatarSize\n  withTooltip?: boolean\n}\n\nexport function UserAvatarStack({\n  maxLength,\n  userIds,\n  size,\n  withTooltip = true,\n}: UserAvatarStackProps) {\n  return (\n    <AvatarStack maxLength={maxLength} size={size}>\n      {userIds.map((userId) => (\n        <UserAvatar key={userId} user={userId} withTooltip={withTooltip} />\n      ))}\n    </AvatarStack>\n  )\n}\n","import {Box, Card, Flex, Skeleton, Stack, Text} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2, type ThemeColorAvatarColorKey} from '@sanity/ui/theme'\nimport {type MouseEvent, useCallback, useMemo} from 'react'\nimport {\n  AvatarSkeleton,\n  type ChunkType,\n  type RelativeTimeOptions,\n  useDateTimeFormat,\n  UserAvatar,\n  useRelativeTime,\n  useTranslation,\n  useUser,\n} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {getTimelineEventIconComponent} from './helpers'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\nimport {UserAvatarStack} from './userAvatarStack'\nimport {type ChunksWithCollapsedDrafts} from './utils'\n\nexport const IconBox = styled(Flex)<{$color: ThemeColorAvatarColorKey}>((props) => {\n  const theme = getTheme_v2(props.theme)\n  const color = props.$color\n\n  return css`\n    --card-icon-color: ${theme.color.avatar[color].fg};\n    background-color: ${theme.color.avatar[color].bg};\n    box-shadow: 0 0 0 1px var(--card-bg-color);\n\n    position: absolute;\n    width: ${theme.avatar.sizes[0].size}px;\n    height: ${theme.avatar.sizes[0].size}px;\n    right: -3px;\n    bottom: -3px;\n    border-radius: 50%;\n  `\n})\n\nconst TIMELINE_ITEM_EVENT_TONE: Record<ChunkType | 'withinSelection', ThemeColorAvatarColorKey> = {\n  initial: 'blue',\n  create: 'blue',\n  publish: 'green',\n  editLive: 'green',\n  editDraft: 'yellow',\n  unpublish: 'orange',\n  discardDraft: 'orange',\n  delete: 'red',\n  withinSelection: 'magenta',\n}\n\nexport interface TimelineItemProps {\n  chunk: ChunksWithCollapsedDrafts\n  isSelected: boolean\n  onSelect: (chunk: ChunksWithCollapsedDrafts) => void\n  collaborators?: Set<string>\n  optionsMenu?: React.ReactNode\n}\n\nconst RELATIVE_TIME_OPTIONS: RelativeTimeOptions = {\n  minimal: true,\n  useTemporalPhrase: true,\n}\n\nconst NameSkeleton = styled(Skeleton)((props) => {\n  const theme = getTheme_v2(props.theme)\n  return css`\n    width: 6ch;\n    height: ${theme.font.text.sizes[0].lineHeight}px;\n  `\n})\n\nconst UserLine = ({userId}: {userId: string}) => {\n  const [user, loading] = useUser(userId)\n\n  return (\n    <Flex align=\"center\" gap={2} key={userId} padding={1}>\n      <Box>{loading || !user ? <AvatarSkeleton animated /> : <UserAvatar user={user} />}</Box>\n      <Box>\n        {loading || !user?.displayName ? (\n          <Text size={1}>\n            <NameSkeleton animated />\n          </Text>\n        ) : (\n          <Text muted size={1}>\n            {user.displayName}\n          </Text>\n        )}\n      </Box>\n    </Flex>\n  )\n}\nconst TooltipContent = ({collaborators}: {collaborators: string[]}) => {\n  const {t} = useTranslation('studio')\n  return (\n    <Stack paddingBottom={1}>\n      <Box padding={1} paddingBottom={2}>\n        <Text size={1} weight=\"medium\">\n          {t('timeline.changes.title')}\n        </Text>\n      </Box>\n      {collaborators.map((userId) => (\n        <UserLine key={userId} userId={userId} />\n      ))}\n    </Stack>\n  )\n}\nexport function TimelineItem({\n  chunk,\n  isSelected,\n  onSelect,\n  collaborators,\n  optionsMenu,\n}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n  const {type, endTimestamp: timestamp} = chunk\n  const IconComponent = getTimelineEventIconComponent(type)\n  const authorUserIds = Array.from(chunk.authors)\n  const collaboratorsUsersIds = collaborators ? Array.from(collaborators) : []\n  const isSelectable = type !== 'delete'\n  const dateFormat = useDateTimeFormat({dateStyle: 'medium', timeStyle: 'short'})\n  const date = new Date(timestamp)\n\n  const updatedTimeAgo = useRelativeTime(date || '', RELATIVE_TIME_OPTIONS)\n\n  const formattedTimestamp = useMemo(() => {\n    const parsedDate = new Date(timestamp)\n    const formattedDate = dateFormat.format(parsedDate)\n\n    return formattedDate\n  }, [timestamp, dateFormat])\n\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(chunk)\n      }\n    },\n    [onSelect, chunk, isSelectable],\n  )\n\n  return (\n    <Flex align=\"center\" gap={1}>\n      <Card\n        as=\"button\"\n        onClick={handleClick}\n        padding={2}\n        pressed={isSelected}\n        radius={2}\n        data-ui=\"timelineItem\"\n        data-testid=\"timeline-item-button\"\n        data-chunk-id={chunk.id}\n      >\n        <Flex align=\"center\" gap={3}>\n          <div style={{position: 'relative'}}>\n            <UserAvatarStack maxLength={3} userIds={authorUserIds} size={2} />\n            <IconBox align=\"center\" justify=\"center\" $color={TIMELINE_ITEM_EVENT_TONE[type]}>\n              <Text size={0}>{IconComponent && <IconComponent />}</Text>\n            </IconBox>\n          </div>\n          <Stack space={2}>\n            <Text size={1} weight=\"medium\">\n              {t(TIMELINE_ITEM_I18N_KEY_MAPPING[type]) || <code>{type}</code>}\n            </Text>\n\n            <Text as=\"time\" size={1} muted dateTime={timestamp} title={formattedTimestamp}>\n              {updatedTimeAgo}\n            </Text>\n          </Stack>\n\n          {collaboratorsUsersIds.length > 0 && (\n            <Flex flex={1} justify=\"flex-end\" align=\"center\">\n              <Tooltip\n                placement=\"top\"\n                content={<TooltipContent collaborators={collaboratorsUsersIds} />}\n                portal\n              >\n                <Box paddingLeft={2} paddingY={2}>\n                  <UserAvatarStack\n                    maxLength={3}\n                    userIds={collaboratorsUsersIds}\n                    size={0}\n                    withTooltip={false}\n                  />\n                </Box>\n              </Tooltip>\n            </Flex>\n          )}\n        </Flex>\n      </Card>\n      {optionsMenu}\n    </Flex>\n  )\n}\n","import {type Chunk, type ChunkType} from 'sanity'\n\nexport type NonPublishChunk = Omit<Chunk, 'type'> & {\n  type: Exclude<ChunkType, 'publish'>\n  parentId?: string\n}\n\nexport type PublishChunk = Omit<Chunk, 'type'> & {\n  type: 'publish'\n  children: string[]\n  collaborators: Set<string>\n}\n\nexport const isNonPublishChunk = (chunk: Chunk): chunk is NonPublishChunk =>\n  chunk.type !== 'publish'\n\nexport const isPublishChunk = (chunk: Chunk): chunk is PublishChunk => chunk.type === 'publish'\n\n/**\n * searches for the previous publish action in the list of chunks\n * e.g. chunks = [publish, edit, publish, edit, edit] it needs to return the second publish action\n * e.g. chunks = [publish, edit, delete, edit, edit] it returns undefined\n */\n\nfunction getPreviousPublishAction(chunks: Chunk[]) {\n  let previousPublish: PublishChunk | null = null\n  // We need to iterate from the end to the start of the list\n  for (let index = chunks.length - 1; index >= 0; index--) {\n    const chunk = chunks[index]\n    if (isPublishChunk(chunk)) {\n      previousPublish = chunk\n      break\n    }\n    if (chunk.type === 'editDraft') {\n      continue\n    } else break\n  }\n\n  return previousPublish\n}\nexport type ChunksWithCollapsedDrafts = NonPublishChunk | PublishChunk\n\n/**\n * Takes an array of chunks and adds them metadata necessary for the timeline view.\n * for draft chunks, it will add the parentId of the published chunk if this draft action is now published\n * for published, it will add the children array and the collaborators array\n */\nexport function addChunksMetadata(chunks: Chunk[]): ChunksWithCollapsedDrafts[] {\n  const result: ChunksWithCollapsedDrafts[] = []\n\n  for (const chunk of chunks) {\n    if (isPublishChunk(chunk)) {\n      result.push({\n        ...chunk,\n        type: 'publish',\n        children: [],\n        collaborators: new Set(), // Initialize the collaborators array\n      })\n      continue\n    }\n    if (isNonPublishChunk(chunk)) {\n      const previousPublish = getPreviousPublishAction(result)\n      if (chunk.type === 'editDraft' && previousPublish?.type === 'publish') {\n        Array.from(chunk.authors).forEach((id) => {\n          previousPublish.collaborators.add(id)\n        })\n        previousPublish.children.push(chunk.id)\n        result.push({\n          ...chunk,\n          parentId: previousPublish.id,\n        })\n        continue\n      }\n    }\n    if (isNonPublishChunk(chunk)) {\n      result.push(chunk)\n    }\n  }\n\n  return result\n}\n","import {Box, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type Chunk,\n  CommandList,\n  type CommandListRenderItemCallback,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ExpandableTimelineItemButton} from './expandableTimelineItemButton'\nimport {ListWrapper, Root, StackWrapper} from './timeline.styled'\nimport {TimelineItem} from './timelineItem'\nimport {\n  addChunksMetadata,\n  type ChunksWithCollapsedDrafts,\n  isNonPublishChunk,\n  isPublishChunk,\n} from './utils'\n\ninterface TimelineProps {\n  chunks: Chunk[]\n  hasMoreChunks: boolean | null\n  lastChunk?: Chunk | null\n  onLoadMore: () => void\n  onSelect: (chunk: Chunk) => void\n  /**\n   * The list needs a predefined max height for the scroller to work.\n   */\n  listMaxHeight?: string\n}\n\nexport const TIMELINE_LIST_WRAPPER_ID = 'timeline-list-wrapper'\n\nexport const Timeline = ({\n  chunks,\n  hasMoreChunks,\n  lastChunk: selectedChunk,\n  onLoadMore,\n  onSelect,\n  listMaxHeight = 'calc(100vh - 280px)',\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n  const selectedChunkId = selectedChunk?.id\n  const chunksWithMetadata = useMemo(() => addChunksMetadata(chunks), [chunks])\n\n  const [expandedParents, setExpandedParents] = useState<Set<string>>(() => {\n    if (selectedChunkId) {\n      // If the selected chunk is a draft, we need to expand its parent\n      const selected = chunksWithMetadata.find((chunk) => chunk.id === selectedChunkId)\n      if (selected && isNonPublishChunk(selected) && selected.parentId) {\n        return new Set([selected.parentId])\n      }\n    }\n    return new Set()\n  })\n\n  useEffect(() => {\n    // This effect ensures that when we reload the timeline with a selected draft, we expand its parent.\n    if (selectedChunkId) {\n      const selected = chunksWithMetadata.find((chunk) => chunk.id === selectedChunkId)\n      if (selected && isNonPublishChunk(selected) && selected.parentId) {\n        const parentId = selected.parentId\n        setExpandedParents((prev) => {\n          if (prev.has(parentId)) return prev\n          const next = new Set(prev)\n          next.add(parentId)\n          return next\n        })\n      }\n    }\n  }, [chunksWithMetadata, selectedChunkId])\n\n  const filteredChunks = useMemo(() => {\n    return chunksWithMetadata.filter((chunk) => {\n      if (isPublishChunk(chunk) || !chunk.parentId) return true\n      // If the chunk has a parent id keep it hidden until the parent is expanded.\n      return expandedParents.has(chunk.parentId)\n    })\n  }, [chunksWithMetadata, expandedParents])\n\n  useEffect(() => {\n    // This effect ensures that we load more chunks if the list is not long enough.\n    // This could happen if a parent chunk has multiple drafts, so you could end with a list of 50 transactions but only\n    // 1 parent chunk, the publish, which squashed all the changes.\n    // In that case, users will see the loading block at the bottom, but nothing will really be happening. Because they haven't reach the end of the list.\n    if (filteredChunks.length < 16 && hasMoreChunks) {\n      onLoadMore()\n    }\n  }, [filteredChunks, hasMoreChunks, onLoadMore])\n\n  const handleExpandParent = useCallback(\n    (parentId: string) => () =>\n      setExpandedParents((prev) => {\n        const next = new Set(prev)\n\n        if (prev.has(parentId)) next.delete(parentId)\n        else next.add(parentId)\n\n        return next\n      }),\n    [],\n  )\n\n  const selectedIndex = useMemo(\n    () =>\n      selectedChunkId ? filteredChunks.findIndex((chunk) => chunk.id === selectedChunkId) : -1,\n    [selectedChunkId, filteredChunks],\n  )\n  const handleSelectChunk = useCallback(\n    (chunk: ChunksWithCollapsedDrafts) => {\n      const timelineChunk = chunks.find((c) => c.id === chunk.id)\n      if (timelineChunk) onSelect(timelineChunk)\n      else {\n        console.error('TimelineItem: chunk not found')\n        onSelect(chunk)\n      }\n    },\n    [chunks, onSelect],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<(typeof filteredChunks)[number]>>(\n    (chunk, {activeIndex}) => {\n      const isFirst = activeIndex === 0\n\n      return (\n        <Box\n          paddingBottom={1}\n          paddingTop={isFirst ? 1 : 0}\n          paddingRight={1}\n          paddingLeft={isNonPublishChunk(chunk) && chunk.parentId ? 4 : 1}\n        >\n          <TimelineItem\n            chunk={chunk}\n            isSelected={selectedChunkId === chunk.id}\n            onSelect={handleSelectChunk}\n            collaborators={isPublishChunk(chunk) ? chunk.collaborators : undefined}\n            optionsMenu={\n              isPublishChunk(chunk) && chunk.children.length > 0 ? (\n                <ExpandableTimelineItemButton\n                  isExpanded={expandedParents.has(chunk.id)}\n                  onExpand={handleExpandParent(chunk.id)}\n                />\n              ) : null\n            }\n          />\n          {activeIndex === filteredChunks.length - 1 && hasMoreChunks && <LoadingBlock />}\n        </Box>\n      )\n    },\n    [\n      expandedParents,\n      filteredChunks.length,\n      handleExpandParent,\n      handleSelectChunk,\n      hasMoreChunks,\n      selectedChunkId,\n    ],\n  )\n\n  useEffect(() => setMounted(true), [])\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {filteredChunks.length === 0 && (\n        <StackWrapper padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </StackWrapper>\n      )}\n\n      {filteredChunks.length > 0 && (\n        <ListWrapper direction=\"column\" $maxHeight={listMaxHeight} id={TIMELINE_LIST_WRAPPER_ID}>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={57}\n            items={filteredChunks}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      )}\n    </Root>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Flex, Stack} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nexport function TimelineError({versionError}: {versionError?: boolean}) {\n  const {t} = useTranslation('studio')\n\n  return (\n    <Flex align=\"flex-start\" gap={3} padding={4}>\n      <TextWithTone tone=\"critical\">\n        <ErrorOutlineIcon />\n      </TextWithTone>\n      <Stack space={4}>\n        <TextWithTone size={1} tone=\"critical\" weight=\"medium\">\n          {versionError\n            ? t('timeline.error.load-document-changes-version-title')\n            : t('timeline.error.load-document-changes-title')}\n        </TextWithTone>\n        <TextWithTone size={1} tone=\"critical\">\n          {versionError\n            ? t('timeline.error.load-document-changes-version-description')\n            : t('timeline.error.load-document-changes-description')}\n        </TextWithTone>\n      </Stack>\n    </Flex>\n  )\n}\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Flex,\n  type Placement,\n  PortalProvider,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useToast,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {type Chunk, useTimelineSelector, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../ui-components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {Timeline} from './timeline'\nimport {TimelineError} from './TimelineError'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\n\ninterface TimelineMenuProps {\n  chunk: Chunk | null\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport const TIMELINE_MENU_PORTAL = 'timeline-menu'\n\nexport function TimelineMenu({chunk, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange, timelineError, ready, timelineStore} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popoverRef, setPopoverRef] = useState<HTMLElement | null>(null)\n\n  const toast = useToast()\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (open && (event.key === 'Escape' || event.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(open && handleClose, () => [button, popoverRef])\n\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForRev(revChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const selectSince = useCallback(\n    (sinceChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForSince(sinceChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading) {\n      timelineStore?.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  const content = useMemo(() => {\n    if (timelineError) return <TimelineError />\n\n    if (mode === 'rev') {\n      return (\n        <Timeline\n          chunks={chunks}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={realRevChunk}\n          onLoadMore={handleLoadMore}\n          onSelect={selectRev}\n        />\n      )\n    }\n\n    const filteredChunks = realRevChunk\n      ? chunks.filter((c) => c.index < realRevChunk.index)\n      : chunks\n    return (\n      <Timeline\n        chunks={filteredChunks}\n        hasMoreChunks={hasMoreChunks}\n        lastChunk={sinceTime}\n        onLoadMore={handleLoadMore}\n        onSelect={selectSince}\n      />\n    )\n  }, [\n    chunks,\n    handleLoadMore,\n    hasMoreChunks,\n    mode,\n    realRevChunk,\n    selectRev,\n    selectSince,\n    sinceTime,\n    timelineError,\n  ])\n\n  const formatParams = {\n    timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n  }\n\n  const revLabel = chunk\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[chunk.type], {\n        context: 'timestamp',\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.latest-revision')\n\n  const sinceLabel = chunk\n    ? t('timeline.since', {\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.since-version-missing')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <PortalProvider __unstable_elements={{[TIMELINE_MENU_PORTAL]: popoverRef}}>\n      <Root\n        data-testid=\"timeline-menu\"\n        constrainSize\n        content={open && content}\n        data-ui=\"versionMenu\"\n        open={open}\n        placement={placement}\n        matchReferenceWidth\n        portal\n        ref={setPopoverRef}\n      >\n        <Flex width={'fill'}>\n          <Button\n            data-testid={open ? 'timeline-menu-close-button' : 'timeline-menu-open-button'}\n            disabled={!ready}\n            mode=\"ghost\"\n            onClick={open ? handleClose : handleOpen}\n            ref={setButton}\n            selected={open}\n            width=\"fill\"\n            tooltipProps={null}\n            justify={'space-between'}\n            style={{\n              maxWidth: '100%',\n            }}\n            iconRight={ChevronDownIcon}\n            text={ready ? buttonLabel : t('timeline.loading-history')}\n          />\n        </Flex>\n      </Root>\n    </PortalProvider>\n  )\n}\n","import {motion} from 'framer-motion'\nimport {type ComponentProps} from 'react'\nimport {keyframes, styled} from 'styled-components'\n\nconst StyledMotionPath = styled(motion.path)`\n  transform-origin: center;\n`\n\ntype MotionCircleProps = Omit<ComponentProps<typeof motion.circle>, 'd'>\ntype MotionPathProps = Omit<ComponentProps<typeof motion.path>, 'd' | 'ref'>\n\nconst Circle = (props: MotionCircleProps) => (\n  <motion.circle fill=\"none\" r=\"8\" cx=\"12.5\" cy=\"12.5\" strokeWidth=\"1.2\" {...props} />\n)\nconst Arrows = (props: MotionPathProps) => (\n  <StyledMotionPath\n    fill=\"none\"\n    d=\"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\"\n    {...props}\n  />\n)\nconst Checkmark = (props: MotionPathProps) => (\n  <motion.path d=\"M9.5 12.1316L11.7414 14.5L16 10\" {...props} />\n)\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\nconst RotateGroup = styled.g`\n  transform-origin: center;\n\n  &[data-rotate] {\n    animation: ${rotateAnimation} 1s ease-in-out infinite;\n  }\n`\n\nconst root = {\n  syncing: {\n    scale: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    scale: [1, 0.8, 1.2, 0.9, 1.1, 0.95, 1.05, 0.99, 1],\n    transition: {\n      duration: 0.5,\n      delay: 0.2,\n    },\n  },\n  changes: {transition: {duration: 0}},\n}\n\nconst circle = {\n  syncing: {\n    strokeDasharray: '0, 0, 23, 3, 23, 3',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    strokeDasharray: '0, 0, 23, 0, 23, 0',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    strokeDasharray: '0, 60, 23, 0, 23, 0',\n    strokeDashoffset: 0,\n    opacity: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n}\n\nconst arrows = {\n  syncing: {\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    opacity: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    opacity: 0,\n  },\n}\n\nconst checkmark = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 1,\n    transition: {\n      delay: 0.4,\n      duration: 0.3,\n    },\n  },\n  changes: {\n    pathLength: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n}\n\ninterface AnimatedStatusIconProps {\n  status?: 'changes' | 'saved' | 'syncing'\n}\n\nexport function AnimatedStatusIcon(props: AnimatedStatusIconProps) {\n  const {status} = props\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.2\"\n      data-sanity-icon=\"animated-status-icon\"\n    >\n      <motion.g variants={root} initial={status} animate={status}>\n        <RotateGroup data-rotate={status === 'changes' ? undefined : ''}>\n          <Arrows variants={arrows} initial={status} animate={status} />\n          <Circle variants={circle} initial={status} animate={status} />\n        </RotateGroup>\n        <Checkmark variants={checkmark} initial={status} animate={status} />\n      </motion.g>\n    </svg>\n  )\n}\n","import {type ButtonTone, Flex, Text} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {AnimatedStatusIcon} from './AnimatedStatusIcon'\n\ntype StatusType = 'saved' | 'syncing'\ninterface ReviewChangesButtonProps {\n  status?: StatusType\n}\n\nconst STATUS_DICTIONARY: Record<StatusType, {i18nKey: string; tone: ButtonTone}> = {\n  saved: {\n    i18nKey: 'status-bar.document-status-pulse.status.saved.text',\n    tone: 'positive',\n  },\n  syncing: {\n    i18nKey: 'status-bar.document-status-pulse.status.syncing.text',\n    tone: 'default',\n  },\n}\n\nexport const DocumentStatusPulse = (props: ReviewChangesButtonProps) => {\n  const {status} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (status !== 'saved' && status !== 'syncing') {\n    return null\n  }\n\n  const currentStatus = STATUS_DICTIONARY[status]\n\n  return (\n    <Flex align=\"center\" gap={2} data-testid=\"pane-footer-document-status-pulse\">\n      <TextWithTone size={1} tone={currentStatus.tone}>\n        <AnimatedStatusIcon status={status} />\n      </TextWithTone>\n\n      <Text muted size={1}>\n        {t(currentStatus.i18nKey)}\n      </Text>\n    </Flex>\n  )\n}\n","import {\n  Box,\n  // eslint-disable-next-line no-restricted-imports\n  Button,\n  Flex,\n  Skeleton,\n  Text,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {useEffect, useLayoutEffect, useMemo, useState} from 'react'\nimport {\n  AvatarSkeleton,\n  isPublishedPerspective,\n  TIMELINE_ITEM_I18N_KEY_MAPPING,\n  useEvents,\n  usePerspective,\n  UserAvatar,\n  useRelativeTime,\n  useSource,\n  useSyncState,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\n\nimport {HISTORY_INSPECTOR_NAME} from '../constants'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING as TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY} from '../timeline'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentStatusPulse} from './DocumentStatusPulse'\n\nconst RELATIVE_TIME_OPTIONS = {\n  minimal: true,\n  useTemporalPhrase: true,\n} as const\n\nconst MotionButton = motion.create(Button)\nconst MotionBox = motion.create(Box)\n\nconst ButtonSkeleton = () => {\n  return (\n    <Flex align=\"center\" gap={3} paddingLeft={1} paddingRight={2} paddingY={2}>\n      <div style={{margin: -5}}>\n        <AvatarSkeleton $size={0} animated />\n      </div>\n      <Skeleton animated style={{width: '80px', height: '15px'}} radius={2} />\n    </Flex>\n  )\n}\n\nconst DocumentStatusButton = ({\n  author,\n  translationKey,\n  timestamp = '',\n}: {\n  author: string\n  translationKey: string\n  timestamp?: string\n}) => {\n  const {onHistoryOpen, inspector, onHistoryClose} = useDocumentPane()\n  const {t} = useTranslation()\n  const relativeTime = useRelativeTime(timestamp, RELATIVE_TIME_OPTIONS)\n\n  return (\n    <MotionButton\n      data-testid=\"pane-footer-document-status\"\n      animate={{opacity: 1}}\n      initial={{opacity: 0}}\n      exit={{opacity: 0}}\n      mode=\"bleed\"\n      onClick={inspector?.name === HISTORY_INSPECTOR_NAME ? onHistoryClose : onHistoryOpen}\n      padding={2}\n      muted\n    >\n      <Flex align=\"center\" flex=\"none\" gap={3}>\n        {author && (\n          <div style={{margin: -5}}>\n            <UserAvatar user={author} size={0} />\n          </div>\n        )}\n        <Text muted size={1}>\n          {t(translationKey)} {relativeTime}\n        </Text>\n      </Flex>\n    </MotionButton>\n  )\n}\n\nconst FallbackStatus = () => {\n  const {editState} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n\n  const status = useMemo(() => {\n    if (isPublishedPerspective(selectedPerspective) && editState?.published?._updatedAt) {\n      return {\n        translationKey: TIMELINE_ITEM_I18N_KEY_MAPPING.createDocumentVersion,\n        timestamp: editState.published._updatedAt,\n      }\n    }\n    if (editState?.version?._updatedAt) {\n      return {\n        translationKey:\n          editState?.version?._updatedAt === editState?.version?._createdAt\n            ? TIMELINE_ITEM_I18N_KEY_MAPPING.createDocumentVersion\n            : TIMELINE_ITEM_I18N_KEY_MAPPING.editDocumentVersion,\n        timestamp: editState.version._updatedAt,\n      }\n    }\n    if (editState?.draft?._updatedAt) {\n      return {\n        translationKey:\n          editState?.draft?._updatedAt === editState?.draft?._createdAt\n            ? TIMELINE_ITEM_I18N_KEY_MAPPING.createDocumentVersion\n            : TIMELINE_ITEM_I18N_KEY_MAPPING.editDocumentVersion,\n        timestamp: editState.draft._updatedAt,\n      }\n    }\n    return null\n  }, [\n    selectedPerspective,\n    editState?.published?._updatedAt,\n    editState?.version?._updatedAt,\n    editState?.version?._createdAt,\n    editState?.draft?._updatedAt,\n    editState?.draft?._createdAt,\n  ])\n  if (!status) {\n    return null\n  }\n  return (\n    <DocumentStatusButton\n      author=\"\"\n      translationKey={status.translationKey}\n      timestamp={status.timestamp}\n    />\n  )\n}\n\nconst EventsStatus = () => {\n  const {events, loading} = useEvents()\n  const event = events?.[0]\n\n  if (!event && loading) {\n    return <ButtonSkeleton />\n  }\n  if (!event) {\n    return <FallbackStatus />\n  }\n\n  return (\n    <DocumentStatusButton\n      author={event.author}\n      translationKey={TIMELINE_ITEM_I18N_KEY_MAPPING[event.type]}\n      timestamp={event.timestamp}\n    />\n  )\n}\n\nconst TimelineStatus = () => {\n  const {timelineStore} = useDocumentPane()\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const event = chunks?.[0]\n\n  if (!event && loading) {\n    return <ButtonSkeleton />\n  }\n  if (!event) {\n    return <FallbackStatus />\n  }\n\n  const author = Array.from(event.authors)[0]\n  return (\n    <DocumentStatusButton\n      author={author}\n      translationKey={TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY[event.type]}\n      timestamp={event.endTimestamp}\n    />\n  )\n}\n\nconst SYNCING_TIMEOUT = 1000\nconst SAVED_TIMEOUT = 3000\n\nexport function DocumentStatusLine() {\n  const {documentId, documentType, editState, value} = useDocumentPane()\n  const [status, setStatus] = useState<'saved' | 'syncing' | null>(null)\n  const source = useSource()\n  const eventsEnabled = source.beta?.eventsAPI?.documents\n\n  const syncState = useSyncState(documentId, documentType, editState?.release)\n\n  const lastUpdated = value?._updatedAt\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    // Schedule an update to set the status to 'saved' when status changed to 'syncing.\n    // We use `syncState.isSyncing` here to avoid the status being set to 'saved' when the document is syncing.\n    if (status === 'syncing' && !syncState.isSyncing) {\n      const timerId = setTimeout(() => setStatus('saved'), SYNCING_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n    // Schedule an update to clear the status when status changed to 'saved'\n    if (status === 'saved') {\n      const timerId = setTimeout(() => setStatus(null), SAVED_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n  }, [status, lastUpdated, syncState.isSyncing])\n\n  // Clear the status when documentId changes to make sure we don't show the wrong status when opening a new document\n  useLayoutEffect(() => {\n    setStatus(null)\n  }, [documentId])\n\n  // Set status to 'syncing' when lastUpdated changes and we go from not syncing to syncing\n  useLayoutEffect(() => {\n    if (syncState.isSyncing) {\n      setStatus('syncing')\n    }\n  }, [syncState.isSyncing, lastUpdated])\n\n  return (\n    <AnimatePresence>\n      {status ? (\n        <MotionBox\n          paddingLeft={2}\n          animate={{opacity: 1}}\n          initial={{opacity: 0}}\n          exit={{opacity: 0}}\n        >\n          <DocumentStatusPulse status={status || undefined} />\n        </MotionBox>\n      ) : (\n        <>{eventsEnabled ? <EventsStatus /> : <TimelineStatus />}</>\n      )}\n    </AnimatePresence>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {Translate, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport const StatusText = styled(Text)`\n  color: var(--card-muted-fg-color);\n\n  em {\n    color: var(--card-fg-color);\n    font-weight: 500;\n    font-style: normal;\n  }\n`\n\nexport function RevisionStatusLine(): React.JSX.Element {\n  const {displayed} = useDocumentPane()\n  const {t} = useTranslation()\n  const date = displayed?._updatedAt || displayed?._createdAt\n\n  const message = {\n    name: 'revision',\n    text: date ? (\n      <Translate\n        t={t}\n        i18nKey=\"document-status.revision-from\"\n        values={{\n          date: format(new Date(date), `MMM d, yyyy '@' pp`),\n        }}\n      />\n    ) : null,\n    tone: 'caution',\n  }\n\n  return (\n    <>\n      <Flex flex={1} gap={3} padding={2}>\n        <Box flex=\"none\">\n          <Text size={1}>\n            <RestoreIcon />\n          </Text>\n        </Box>\n        <Box flex={1}>\n          <StatusText size={1} textOverflow=\"ellipsis\">\n            {message.text}\n          </StatusText>\n        </Box>\n      </Flex>\n    </>\n  )\n}\n","import {useLayoutEffect} from 'react'\nimport {resizeObserver} from 'sanity'\n\nexport function useResizeObserver({\n  element,\n  onResize,\n}: {\n  element?: HTMLDivElement | null\n  onResize: (event: ResizeObserverEntry) => void\n}): void {\n  useLayoutEffect(() => {\n    if (element) {\n      resizeObserver.observe(element, onResize)\n    }\n\n    return () => {\n      if (element) {\n        resizeObserver.unobserve(element)\n      }\n    }\n  }, [element, onResize])\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type Ref, useCallback, useMemo, useState} from 'react'\nimport {\n  type CreateLinkMetadata,\n  isPublishedPerspective,\n  isReleaseDocument,\n  isSanityCreateLinked,\n  usePerspective,\n  useSanityCreateConfig,\n} from 'sanity'\n\nimport {SpacerButton} from '../../../components/spacerButton'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {useDocumentTitle} from '../useDocumentTitle'\nimport {DocumentBadges} from './DocumentBadges'\nimport {DocumentStatusBarActions, HistoryStatusBarActions} from './DocumentStatusBarActions'\nimport {DocumentStatusLine} from './DocumentStatusLine'\nimport {RevisionStatusLine} from './RevisionStatusLine'\nimport {useResizeObserver} from './useResizeObserver'\n\nexport interface DocumentStatusBarProps {\n  actionsBoxRef?: Ref<HTMLDivElement>\n  createLinkMetadata?: CreateLinkMetadata\n}\n\nconst CONTAINER_BREAKPOINT = 480 // px\n\nconst AnimatedCard = motion.create(Card)\n\nexport function DocumentStatusBar(props: DocumentStatusBarProps) {\n  const {actionsBoxRef, createLinkMetadata} = props\n  const {editState, revisionId, onChange: onDocumentChange} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n  const {title} = useDocumentTitle()\n\n  const CreateLinkedActions = useSanityCreateConfig().components?.documentLinkedActions\n\n  const showingRevision = Boolean(revisionId)\n  const [collapsed, setCollapsed] = useState<boolean | null>(null)\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n\n  const handleResize = useCallback((event: ResizeObserverEntry) => {\n    setCollapsed(event.contentRect.width < CONTAINER_BREAKPOINT)\n  }, [])\n\n  useResizeObserver({element: rootElement, onResize: handleResize})\n\n  const shouldRender = useMemo(() => {\n    const isReady = Boolean(editState?.ready && typeof collapsed === 'boolean')\n    if (selectedPerspective) {\n      if (isPublishedPerspective(selectedPerspective)) {\n        return isReady && Boolean(editState?.published)\n      }\n      if (isReleaseDocument(selectedPerspective)) {\n        return isReady && Boolean(editState?.version)\n      }\n    }\n    return isReady\n  }, [collapsed, editState?.published, editState?.ready, editState?.version, selectedPerspective])\n\n  let actions: React.JSX.Element | null = null\n  if (createLinkMetadata && isSanityCreateLinked(createLinkMetadata) && CreateLinkedActions) {\n    actions = (\n      <CreateLinkedActions\n        metadata={createLinkMetadata}\n        panelPortalElementId={DOCUMENT_PANEL_PORTAL_ELEMENT}\n        onDocumentChange={onDocumentChange}\n        documentTitle={title}\n      />\n    )\n  } else if (showingRevision) {\n    actions = <HistoryStatusBarActions />\n  } else {\n    actions = <DocumentStatusBarActions />\n  }\n\n  return (\n    <AnimatedCard\n      key={showingRevision ? 'revision' : 'published'}\n      initial={{opacity: 0.2}}\n      animate={{opacity: 1, transition: {duration: 0.3}}}\n      tone={showingRevision ? 'caution' : undefined}\n      radius={3}\n      ref={setRootElement}\n      sizing=\"border\"\n      padding={2}\n    >\n      {shouldRender && (\n        <Flex\n          align=\"stretch\"\n          gap={1}\n          justify=\"space-between\"\n          paddingLeft={showingRevision ? 0 : 1}\n          paddingRight={showingRevision ? 0 : 1}\n        >\n          <Flex align=\"center\" flex={1} gap={collapsed ? 2 : 3} wrap=\"wrap\" paddingRight={3}>\n            <Flex align=\"center\">\n              {showingRevision ? <RevisionStatusLine /> : <DocumentStatusLine />}\n              <SpacerButton />\n            </Flex>\n            <DocumentBadges />\n          </Flex>\n\n          <Flex\n            align=\"flex-start\"\n            justify=\"flex-end\"\n            ref={actionsBoxRef}\n            style={{flexShrink: 0, marginLeft: 'auto'}}\n          >\n            <SpacerButton />\n            {actions}\n          </Flex>\n        </Flex>\n      )}\n    </AnimatedCard>\n  )\n}\n","import {isHotkey} from 'is-hotkey-esm'\nimport {\n  type ElementType,\n  type HTMLProps,\n  memo,\n  type Ref,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, type DocumentActionProps, LegacyLayerProvider} from 'sanity'\n\nimport {RenderActionCollectionState} from '../../../components'\nimport {ActionStateDialog} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport interface KeyboardShortcutResponderProps {\n  actionsBoxElement: HTMLElement | null\n  activeIndex: number\n  as?: ElementType\n  currentMinWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  onActionStart: (index: number) => void\n  rootRef: Ref<HTMLDivElement>\n  states: DocumentActionDescription[]\n}\n\nconst KeyboardShortcutResponder = memo(function KeyboardShortcutResponder(\n  props: KeyboardShortcutResponderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height'>,\n) {\n  const {\n    actionsBoxElement,\n    activeIndex,\n    as: As = 'div',\n    children,\n    id,\n    onActionStart,\n    onKeyDown,\n    rootRef,\n    states,\n    ...rest\n  } = props\n\n  const activeAction = states[activeIndex]\n\n  const handleKeyDown = useCallback(\n    (event: any) => {\n      const matchingStates = states.filter(\n        (state) => state.shortcut && isHotkey(state.shortcut, event),\n      )\n\n      const matchingState = matchingStates[0]\n\n      if (matchingStates.length > 1) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `Keyboard shortcut conflict: More than one document action matches the shortcut \"${matchingState.shortcut}\"`,\n        )\n      }\n\n      if (matchingState && !matchingState.disabled && matchingState.onHandle) {\n        event.preventDefault()\n        matchingState.onHandle()\n        onActionStart(states.indexOf(matchingState))\n        return\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event)\n      }\n    },\n    [onActionStart, onKeyDown, states],\n  )\n\n  return (\n    <As id={id} onKeyDown={handleKeyDown} tabIndex={-1} {...rest} ref={rootRef}>\n      {children}\n      {activeAction && activeAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={activeAction.dialog} referenceElement={actionsBoxElement} />\n        </LegacyLayerProvider>\n      )}\n    </As>\n  )\n})\n\nexport interface DocumentActionShortcutsProps {\n  actionsBoxElement: HTMLElement | null\n  as?: ElementType\n  currentMinWidth?: number\n  debug?: boolean\n  flex: number\n  id: string\n  minWidth: number\n  rootRef: Ref<HTMLDivElement>\n}\n\nexport const DocumentActionShortcuts = memo(\n  (props: DocumentActionShortcutsProps & Omit<HTMLProps<HTMLDivElement>, 'as'>) => {\n    const {actionsBoxElement, as = 'div', children, ...rest} = props\n    const {actions, editState} = useDocumentPane()\n    const [activeIndex, setActiveIndex] = useState(-1)\n\n    const onActionStart = useCallback((idx: number) => {\n      setActiveIndex(idx)\n    }, [])\n\n    const actionProps: DocumentActionProps | null = useMemo(\n      () =>\n        editState && {\n          ...editState,\n\n          // @todo: what to call here?\n          onComplete: () => undefined,\n\n          // @todo: get revision string\n          revision: undefined,\n        },\n      [editState],\n    )\n\n    const renderDocumentActionShortcuts = useCallback<\n      (props: {states: DocumentActionDescription[]}) => React.ReactNode\n    >(\n      ({states}) => (\n        <KeyboardShortcutResponder\n          {...rest}\n          activeIndex={activeIndex}\n          actionsBoxElement={actionsBoxElement}\n          as={as}\n          onActionStart={onActionStart}\n          states={states}\n        >\n          {children}\n        </KeyboardShortcutResponder>\n      ),\n      [actionsBoxElement, activeIndex, as, children, onActionStart, rest],\n    )\n\n    if (!actionProps || !actions) return null\n\n    return (\n      <RenderActionCollectionState actionProps={actionProps} actions={actions}>\n        {renderDocumentActionShortcuts}\n      </RenderActionCollectionState>\n    )\n  },\n)\n\nDocumentActionShortcuts.displayName = 'Memo(DocumentActionShortcuts)'\n","import {EarthAmericasIcon, JsonIcon, LinkIcon, TransferIcon} from '@sanity/icons'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, type TFunction} from 'sanity'\n\nimport {type DocumentIdStack} from '../../hooks/useDocumentIdStack'\nimport {type PaneMenuItem, type StructureToolFeatures} from '../../types'\nimport {INSPECT_ACTION_PREFIX} from './constants'\n\ninterface GetMenuItemsParams {\n  currentInspector?: DocumentInspector\n  features: StructureToolFeatures\n  hasValue: boolean\n  inspectors: DocumentInspector[]\n  previewUrl?: string | null\n  documentIdStack?: DocumentIdStack\n  inspectorMenuItems: DocumentInspectorMenuItem[]\n  t: TFunction\n}\n\nfunction getInspectorItems({\n  currentInspector,\n  hasValue,\n  inspectors,\n  inspectorMenuItems,\n}: GetMenuItemsParams): PaneMenuItem[] {\n  return inspectors\n    .map((inspector, index) => {\n      const menuItem = inspectorMenuItems[index]\n\n      if (!menuItem || menuItem.hidden) return null\n\n      return {\n        action: `${INSPECT_ACTION_PREFIX}${inspector.name}`,\n        group: menuItem.showAsAction ? undefined : 'inspectors',\n        icon: menuItem.icon,\n        isDisabled: !hasValue,\n        selected: currentInspector?.name === inspector.name,\n        shortcut: menuItem.hotkeys?.join('+'),\n        showAsAction: menuItem.showAsAction,\n        title: menuItem.title,\n        tone: menuItem.tone,\n      }\n    })\n    .filter(Boolean) as PaneMenuItem[]\n}\n\nfunction getInspectItem({hasValue, t}: GetMenuItemsParams): PaneMenuItem {\n  return {\n    action: 'inspect',\n    group: 'inspectors',\n    title: t('document-inspector.menu-item.title'),\n    icon: JsonIcon,\n    isDisabled: !hasValue,\n    shortcut: 'Ctrl+Alt+I',\n  }\n}\n\nfunction getCompareVersionsItem({documentIdStack, t}: GetMenuItemsParams): PaneMenuItem | null {\n  const isDisabled = typeof documentIdStack?.previousId === 'undefined'\n\n  // TODO: It would be preferable to display the option in an inert state, but the `isDisabled`\n  // property does not appear to have any impact. Instead, we simply exclude the option when\n  // there is no version to compare.\n  if (isDisabled) {\n    return null\n  }\n\n  return {\n    action: 'compareVersions',\n    group: 'inspectors',\n    title: t('compare-versions.menu-item.title'),\n    icon: TransferIcon,\n    isDisabled,\n  }\n}\n\nexport function getProductionPreviewItem({previewUrl, t}: GetMenuItemsParams): PaneMenuItem | null {\n  if (!previewUrl) return null\n\n  return {\n    action: 'production-preview',\n    group: 'links',\n    title: t('production-preview.menu-item.title'),\n    icon: EarthAmericasIcon,\n    shortcut: 'Ctrl+Alt+O',\n  }\n}\n\nexport function getMenuItems(params: GetMenuItemsParams): PaneMenuItem[] {\n  const inspectorItems = getInspectorItems(params)\n  const items = [\n    // Get production preview item\n    getProductionPreviewItem(params),\n    getCompareVersionsItem(params),\n  ].filter(Boolean) as PaneMenuItem[]\n\n  return [\n    // Always present document menu item to copy current url to clipboard\n    {\n      action: 'copy-document-url',\n      showAsAction: true,\n      title: params.t('action.copy-document-url.label'),\n      icon: LinkIcon,\n    },\n    ...inspectorItems,\n\n    // TODO: convert to inspector or document view?\n    getInspectItem(params),\n\n    ...items,\n  ]\n}\n","import {Card, Code, Stack, Text} from '@sanity/ui'\nimport {isDev, Translate, useTranslation} from 'sanity'\n\nimport {ErrorPane} from '../../error'\n\ninterface DocumentLayoutErrorProps {\n  currentMinWidth?: number\n  documentType?: string\n  minWidth?: number\n  paneKey: string\n  value?: Record<string, unknown>\n}\n\nexport function DocumentLayoutError(props: DocumentLayoutErrorProps) {\n  const {documentType, value, currentMinWidth, paneKey, minWidth} = props\n  const {t} = useTranslation()\n\n  return (\n    <ErrorPane\n      currentMinWidth={currentMinWidth}\n      flex={2.5}\n      minWidth={minWidth}\n      paneKey={paneKey}\n      title={\n        <Translate\n          t={t}\n          i18nKey=\"panes.document-pane.document-unknown-type.title\"\n          values={{documentType}}\n        />\n      }\n      tone=\"caution\"\n    >\n      <Stack space={4}>\n        {documentType && (\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-unknown-type.text\"\n              values={{documentType}}\n            />\n          </Text>\n        )}\n\n        {!documentType && (\n          <Text as=\"p\">{t('panes.document-pane.document-unknown-type.without-schema.text')}</Text>\n        )}\n\n        {isDev && value && (\n          /* eslint-disable i18next/no-literal-string */\n          <>\n            <Text as=\"p\">Here is the JSON representation of the document:</Text>\n\n            <Card padding={3} overflow=\"auto\" radius={2} shadow={1} tone=\"inherit\">\n              <Code language=\"json\" size={[1, 1, 2]}>\n                {JSON.stringify(value, null, 2)}\n              </Code>\n            </Card>\n          </>\n          /* eslint-enable i18next/no-literal-string */\n        )}\n      </Stack>\n    </ErrorPane>\n  )\n}\n","import {DialogProvider, type DialogProviderProps, PortalProvider} from '@sanity/ui'\nimport {type Dispatch, type ReactNode, type SetStateAction, useMemo} from 'react'\nimport {getSanityCreateLinkMetadata, useSanityCreateConfig, useZIndex} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../../ui-components/tooltipDelayGroupProvider/TooltipDelayGroupProvider'\nimport {PaneFooter, usePane} from '../../../components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {DocumentStatusBar} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nexport function DocumentLayoutFooter({\n  documentPanelPortalElement,\n  setFooterElement,\n  setActionsBoxElement,\n}: {\n  documentPanelPortalElement: HTMLElement | null\n  setFooterElement: Dispatch<SetStateAction<HTMLDivElement | null>>\n  setActionsBoxElement: Dispatch<SetStateAction<HTMLDivElement | null>>\n}) {\n  const zOffsets = useZIndex()\n\n  const {value, isInitialValueLoading, ready, documentId, schemaType} = useDocumentPane()\n  const portalElements = useMemo(\n    () => ({[DOCUMENT_PANEL_PORTAL_ELEMENT]: documentPanelPortalElement}),\n    [documentPanelPortalElement],\n  )\n\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n  const {startInCreateBanner: StartInCreateBanner} = useSanityCreateConfig().components ?? {}\n  return (\n    // These providers are added because we want the dialogs in `DocumentStatusBar` to be scoped to the document pane\n    // The portal element comes from `DocumentPanel`.\n    <PortalProvider __unstable_elements={portalElements}>\n      <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n        <PaneFooter ref={setFooterElement} padding={1}>\n          {StartInCreateBanner && (\n            <ShowWhenPaneOpen>\n              <StartInCreateBanner\n                document={value}\n                documentId={documentId}\n                documentType={schemaType}\n                documentReady={ready}\n                isInitialValueLoading={!!isInitialValueLoading}\n                panelPortalElementId={DOCUMENT_PANEL_PORTAL_ELEMENT}\n              />\n            </ShowWhenPaneOpen>\n          )}\n          <TooltipDelayGroupProvider>\n            <DocumentStatusBar\n              actionsBoxRef={setActionsBoxElement}\n              createLinkMetadata={createLinkMetadata}\n            />\n          </TooltipDelayGroupProvider>\n        </PaneFooter>\n      </DialogProvider>\n    </PortalProvider>\n  )\n}\n\n/**\n * Prevents whatever is inside of it from rendering when the pane is collapsed.\n * Needed locally as DocumentLayout does lives outside PaneContext, but is provided _somewhere_ within it.\n */\nfunction ShowWhenPaneOpen(props: {children: ReactNode}) {\n  const {collapsed} = usePane()\n  return collapsed ? null : props.children\n}\n","import {DialogProvider, type DialogProviderProps, Flex, useElementRect} from '@sanity/ui'\nimport {isHotkey} from 'is-hotkey-esm'\nimport {useCallback, useMemo, useState} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {\n  ChangeConnectorRoot,\n  type DocumentFieldActionNode,\n  type DocumentInspectorMenuItem,\n  FieldActionsProvider,\n  FieldActionsResolver,\n  GetFormValueProvider,\n  type Path,\n  useGlobalCopyPasteElementHandler,\n  useZIndex,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Pane, usePaneLayout, usePaneRouter} from '../../../components'\nimport {useDocumentIdStack} from '../../../hooks/useDocumentIdStack'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {\n  DOCUMENT_INSPECTOR_MIN_WIDTH,\n  DOCUMENT_PANEL_INITIAL_MIN_WIDTH,\n  DOCUMENT_PANEL_MIN_WIDTH,\n} from '../constants'\nimport {DocumentInspectorMenuItemsResolver} from '../DocumentInspectorMenuItemsResolver'\nimport {DocumentOperationResults} from '../DocumentOperationResults'\nimport {DocumentPanel} from '../documentPanel'\nimport {DocumentPanelHeader} from '../documentPanel/header'\nimport {DocumentActionShortcuts} from '../keyboardShortcuts'\nimport {getMenuItems} from '../menuItems'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentLayoutError} from './DocumentLayoutError'\nimport {DocumentLayoutFooter} from './DocumentLayoutFooter'\n\nconst EMPTY_ARRAY: [] = []\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nconst StyledChangeConnectorRoot = styled(ChangeConnectorRoot)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  min-width: 0;\n`\n\nexport function DocumentLayout() {\n  const {\n    changesOpen,\n    displayed,\n    documentId,\n    documentType,\n    editState,\n    fieldActions,\n    focusPath,\n    inspectOpen,\n    inspector,\n    inspectors,\n    onFocus,\n    onHistoryOpen,\n    onMenuAction,\n    onPathOpen,\n    paneKey,\n    schemaType,\n    value,\n    isInitialValueLoading,\n    ready,\n    previewUrl,\n  } = useDocumentPane()\n  const {params: paneParams} = usePaneRouter()\n  const {features} = useStructureTool()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  const zOffsets = useZIndex()\n\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const [footerElement, setFooterElement] = useState<HTMLDivElement | null>(null)\n  const [headerElement, setHeaderElement] = useState<HTMLDivElement | null>(null)\n\n  const [actionsBoxElement, setActionsBoxElement] = useState<HTMLDivElement | null>(null)\n  const [documentPanelPortalElement, setDocumentPanelPortalElement] = useState<HTMLElement | null>(\n    null,\n  )\n\n  useGlobalCopyPasteElementHandler({\n    element: rootElement,\n    focusPath,\n    value,\n  })\n\n  const [inspectorMenuItems, setInspectorMenuItems] = useState<DocumentInspectorMenuItem[]>([])\n  const [rootFieldActionNodes, setRootFieldActionNodes] = useState<DocumentFieldActionNode[]>([])\n\n  const footerRect = useElementRect(footerElement)\n  const headerRect = useElementRect(headerElement)\n  const footerHeight = footerRect?.height\n  const headerHeight = headerRect?.height\n  const currentMinWidth =\n    DOCUMENT_PANEL_INITIAL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n  const minWidth = DOCUMENT_PANEL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspector?.name),\n    [inspectors, inspector?.name],\n  )\n\n  const documentIdStack = useDocumentIdStack({displayed, documentId, editState})\n\n  const hasValue = Boolean(value)\n\n  const menuItems = useMemo(\n    () =>\n      getMenuItems({\n        currentInspector,\n        features,\n        hasValue,\n        inspectorMenuItems,\n        inspectors,\n        previewUrl,\n        documentIdStack,\n        t,\n      }),\n    [\n      currentInspector,\n      documentIdStack,\n      features,\n      hasValue,\n      inspectorMenuItems,\n      inspectors,\n      previewUrl,\n      t,\n    ],\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      for (const item of menuItems) {\n        if (item.shortcut) {\n          if (isHotkey(item.shortcut, event)) {\n            event.preventDefault()\n            event.stopPropagation()\n            onMenuAction(item)\n            return\n          }\n        }\n      }\n    },\n    [onMenuAction, menuItems],\n  )\n\n  const onConnectorSetFocus = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onPathOpen, onFocus],\n  )\n\n  if (!schemaType) {\n    return (\n      <DocumentLayoutError\n        currentMinWidth={currentMinWidth}\n        documentType={documentType}\n        minWidth={minWidth}\n        paneKey={paneKey}\n        value={value}\n      />\n    )\n  }\n\n  return (\n    <GetFormValueProvider value={value}>\n      {inspectors.length > 0 && (\n        <DocumentInspectorMenuItemsResolver\n          documentId={documentId}\n          documentType={documentType}\n          inspectors={inspectors}\n          onMenuItems={setInspectorMenuItems}\n        />\n      )}\n\n      {fieldActions.length > 0 && schemaType && (\n        <FieldActionsResolver\n          actions={fieldActions}\n          documentId={documentId}\n          documentType={documentType}\n          onActions={setRootFieldActionNodes}\n          path={EMPTY_ARRAY}\n          schemaType={schemaType}\n        />\n      )}\n\n      <FieldActionsProvider actions={rootFieldActionNodes} path={EMPTY_ARRAY}>\n        <DocumentActionShortcuts\n          actionsBoxElement={actionsBoxElement}\n          as={Pane}\n          currentMinWidth={currentMinWidth}\n          data-testid=\"document-pane\"\n          flex={2.5}\n          id={paneKey}\n          minWidth={minWidth}\n          onKeyUp={handleKeyUp}\n          rootRef={setRootElement}\n        >\n          <DocumentPanelHeader ref={setHeaderElement} menuItems={menuItems} />\n          <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.paneDialog}>\n            <Flex direction=\"column\" flex={1} height={layoutCollapsed ? undefined : 'fill'}>\n              <StyledChangeConnectorRoot\n                data-testid=\"change-connector-root\"\n                isReviewChangesOpen={changesOpen && paneParams?.changesInspectorTab === 'review'}\n                onOpenReviewChanges={onHistoryOpen}\n                onSetFocus={onConnectorSetFocus}\n              >\n                <DocumentPanel\n                  footerHeight={footerHeight || null}\n                  headerHeight={headerHeight || null}\n                  isInspectOpen={inspectOpen}\n                  rootElement={rootElement}\n                  setDocumentPanelPortalElement={setDocumentPanelPortalElement}\n                  footer={\n                    <DocumentLayoutFooter\n                      documentPanelPortalElement={documentPanelPortalElement}\n                      setFooterElement={setFooterElement}\n                      setActionsBoxElement={setActionsBoxElement}\n                    />\n                  }\n                />\n              </StyledChangeConnectorRoot>\n            </Flex>\n          </DialogProvider>\n          <DocumentOperationResults />\n        </DocumentActionShortcuts>\n      </FieldActionsProvider>\n    </GetFormValueProvider>\n  )\n}\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, useMiddlewareComponents} from 'sanity'\n\nimport {DocumentLayout} from './DocumentLayout'\nimport {pickDocumentLayoutComponent} from './pickDocumentLayoutComponent'\n\n/**\n * A hook that returns the document layout composed\n * by the Components API (`document.components.layout`).\n */\nexport function useDocumentLayoutComponent(): ComponentType<\n  Omit<DocumentLayoutProps, 'renderDefault'>\n> {\n  return useMiddlewareComponents({\n    pick: pickDocumentLayoutComponent,\n    defaultComponent: DocumentLayout,\n  })\n}\n","import {defineEvent} from '@sanity/telemetry'\n\n/**\n * @internal\n */\nexport const DocumentURLCopied = defineEvent({\n  name: 'DocumentURLCopied',\n  version: 1,\n  description: 'User copied document URL to clipboard',\n})\n","import {type Template} from 'sanity'\n\ninterface InitialValueOptions {\n  documentType: string\n  panePayload?: unknown\n  templateName?: string\n  templateParams?: Record<string, unknown>\n  urlTemplate?: string\n}\n\n/**\n * @internal\n */\nexport function getInitialValueTemplateOpts(\n  templates: Template[],\n  opts: InitialValueOptions,\n): {templateName: string; templateParams: Record<string, unknown>} {\n  const payload = opts.panePayload || {}\n  const structureNodeTemplate = opts.templateName\n\n  if (opts.urlTemplate && structureNodeTemplate && structureNodeTemplate !== opts.urlTemplate) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Conflicting templates: URL says \"${opts.urlTemplate}\", structure node says \"${structureNodeTemplate}\". Using \"${structureNodeTemplate}\".`,\n    )\n  }\n\n  const template = structureNodeTemplate || opts.urlTemplate\n  const typeTemplates = templates.filter((t) => t.schemaType === opts.documentType)\n\n  const templateParams = {\n    ...opts.templateParams,\n    ...(typeof payload === 'object' ? payload || {} : {}),\n  }\n\n  let templateName = template\n\n  // If we have not specified a specific template, and we only have a single\n  // template available for a schema type, use it\n  if (!template && typeTemplates.length === 1) {\n    templateName = typeTemplates[0].id\n  }\n\n  return {templateName: templateName!, templateParams}\n}\n","import {useMemo} from 'react'\nimport {useInitialValue, useTemplates, useUnique} from 'sanity'\n\nimport {type PaneRouterContextValue, usePaneRouter} from '../../components'\nimport {type DocumentPaneNode} from '../../types'\nimport {getInitialValueTemplateOpts} from './getInitialValueTemplateOpts'\n\nexport const useDocumentPaneInitialValue = ({\n  paneOptions,\n  documentType,\n  documentId,\n  params,\n}: {\n  paneOptions: DocumentPaneNode['options']\n  documentType: string\n  documentId: string\n  params: NonNullable<PaneRouterContextValue['params']>\n}) => {\n  const templates = useTemplates()\n  const paneRouter = usePaneRouter()\n  const panePayload = useUnique(paneRouter.payload)\n\n  const {templateName, templateParams} = useMemo(\n    () =>\n      getInitialValueTemplateOpts(templates, {\n        documentType,\n        templateName: paneOptions.template,\n        templateParams: paneOptions.templateParameters,\n        panePayload,\n        urlTemplate: params.template,\n      }),\n    [documentType, paneOptions, params.template, panePayload, templates],\n  )\n\n  const initialValueRaw = useInitialValue({\n    documentId,\n    documentType,\n    templateName,\n    templateParams,\n    version: params.version,\n  })\n\n  const initialValue = useUnique(initialValueRaw)\n  return initialValue\n}\n","import {omit} from 'lodash'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {type DocumentInspector, useSource} from 'sanity'\n\nimport {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME, INSPECT_ACTION_PREFIX} from './constants'\n\nexport function useDocumentPaneInspector({\n  documentId,\n  documentType,\n  params,\n  setParams,\n}: {\n  params: NonNullable<PaneRouterContextValue['params']>\n  documentId: string\n  documentType: string\n  setParams: (params: Record<string, string | undefined>) => void\n}) {\n  const {features} = useStructureTool()\n  const source = useSource()\n  const inspectorsResolver = source.document.inspectors\n\n  const inspectors: DocumentInspector[] = useMemo(\n    () => inspectorsResolver({documentId, documentType}),\n    [documentId, documentType, inspectorsResolver],\n  )\n\n  const [inspectorName, setInspectorName] = useState<string | null>(() => params.inspect || null)\n\n  // Handle inspector name changes from URL\n  const inspectParamRef = useRef<string | undefined>(params.inspect)\n  useEffect(() => {\n    if (inspectParamRef.current !== params.inspect) {\n      inspectParamRef.current = params.inspect\n      setInspectorName(params.inspect || null)\n    }\n  }, [params.inspect])\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspectorName),\n    [inspectors, inspectorName],\n  )\n  const historyInspector = useMemo(\n    () => inspectors.find((i) => i.name === HISTORY_INSPECTOR_NAME),\n    [inspectors],\n  )\n\n  const changesOpen = currentInspector?.name === HISTORY_INSPECTOR_NAME\n\n  const closeInspector = useCallback(\n    (closeInspectorName?: string) => {\n      const inspector = closeInspectorName && inspectors.find((i) => i.name === closeInspectorName)\n\n      if (closeInspectorName && !inspector) {\n        console.warn(`No inspector named \"${closeInspectorName}\"`)\n        return\n      }\n\n      if (!currentInspector) {\n        return\n      }\n\n      if (inspector) {\n        const result = inspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setParams({...result.params, inspect: undefined})\n\n        return\n      }\n\n      if (currentInspector) {\n        const result = currentInspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setParams({...result.params, inspect: undefined})\n      }\n    },\n    [currentInspector, inspectors, params, setParams],\n  )\n\n  const openInspector = useCallback(\n    (nextInspectorName: string, paneParams?: Record<string, string>) => {\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (!nextInspector) {\n        console.warn(`No inspector named \"${nextInspectorName}\"`)\n        return\n      }\n\n      // if the inspector is already open, only update params\n      if (currentInspector?.name === nextInspector.name) {\n        setParams({...params, ...paneParams, inspect: nextInspector.name})\n        return\n      }\n\n      let currentParams = params\n\n      if (currentInspector) {\n        const closeResult = nextInspector.onClose?.({params: currentParams}) ?? {\n          params: currentParams,\n        }\n\n        currentParams = closeResult.params\n      }\n\n      const result = nextInspector.onOpen?.({params: currentParams}) ?? {params: currentParams}\n\n      setInspectorName(nextInspector.name)\n      inspectParamRef.current = nextInspector.name\n\n      setParams({...result.params, ...paneParams, inspect: nextInspector.name})\n    },\n    [currentInspector, inspectors, params, setParams],\n  )\n  const handleHistoryClose = useCallback(() => {\n    if (historyInspector) {\n      closeInspector(historyInspector.name)\n    }\n  }, [closeInspector, historyInspector])\n\n  const handleHistoryOpen = useCallback(() => {\n    if (!features.reviewChanges) {\n      return\n    }\n\n    if (historyInspector) {\n      openInspector(historyInspector.name, {changesInspectorTab: 'review'})\n    }\n  }, [features.reviewChanges, openInspector, historyInspector])\n\n  const inspectOpen = params.inspect === 'on'\n\n  const toggleLegacyInspect = useCallback(\n    (toggle = !inspectOpen) => {\n      if (toggle) {\n        setParams({...params, inspect: 'on'})\n      } else {\n        setParams(omit(params, 'inspect'))\n      }\n    },\n    [inspectOpen, params, setParams],\n  )\n\n  const handleLegacyInspectClose = useCallback(\n    () => toggleLegacyInspect(false),\n    [toggleLegacyInspect],\n  )\n\n  const handleInspectorAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'inspect') {\n        toggleLegacyInspect(true)\n        return true\n      }\n\n      if (typeof item.action !== 'string') return false\n      const nextInspectorName = item.action.slice(INSPECT_ACTION_PREFIX.length)\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (nextInspector) {\n        if (nextInspector.name === inspectorName) {\n          closeInspector(nextInspector.name)\n        } else {\n          openInspector(nextInspector.name)\n        }\n        return true\n      }\n      return false\n    },\n    [closeInspector, inspectorName, inspectors, openInspector, toggleLegacyInspect],\n  )\n\n  return {\n    changesOpen,\n    currentInspector,\n    inspectors,\n    closeInspector,\n    openInspector,\n    handleHistoryClose,\n    handleHistoryOpen,\n    handleInspectorAction,\n    // TODO: Deprecate this legacy inspect toggle it's used to render the <InspectDialog /> component\n    handleLegacyInspectClose,\n    inspectOpen,\n  }\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useEffect, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {BehaviorSubject, from, of} from 'rxjs'\nimport {catchError, debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators'\nimport {isRecord, useSource} from 'sanity'\n\nconst isSanityDocument = (value: unknown): value is SanityDocument =>\n  isRecord(value) && typeof value._id === 'string' && typeof value._type === 'string'\n\nexport function usePreviewUrl(value: Partial<SanityDocument> | undefined): string | undefined {\n  const {resolveProductionUrl} = useSource().document\n  const subject = useMemo(\n    () => new BehaviorSubject<Partial<SanityDocument> | undefined>(undefined),\n    [],\n  )\n\n  useEffect(() => {\n    subject.next(value)\n  }, [subject, value])\n\n  const resolvedUrlObservable = useMemo(() => {\n    return subject.asObservable().pipe(\n      // this so that the preview URL isn't fetched on every keystroke\n      distinctUntilChanged(),\n      debounceTime(500),\n      switchMap((document) =>\n        isSanityDocument(document) ? from(resolveProductionUrl({document})) : of(undefined),\n      ),\n      distinctUntilChanged(),\n      catchError((err) => {\n        const message =\n          isRecord(err) && typeof err.message === 'string' ? err.message : 'Unknown error'\n        throw new Error(`An error was thrown while trying to get your preview url: ${message}`)\n      }),\n    )\n  }, [resolveProductionUrl, subject])\n\n  return useObservable(resolvedUrlObservable)\n}\n","/* eslint-disable camelcase */\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {type ObjectSchemaType, type SanityDocument, type SanityDocumentLike} from '@sanity/types'\nimport {useToast} from '@sanity/ui'\nimport {fromString as pathFromString, resolveKeyedPath} from '@sanity/util/paths'\nimport {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type DocumentActionsContext,\n  type DocumentActionsVersionType,\n  type DocumentFieldAction,\n  type EditStateFor,\n  EMPTY_ARRAY,\n  getPublishedId,\n  isVersionId,\n  type PartialContext,\n  useCopyPaste,\n  useDocumentForm,\n  usePerspective,\n  useSchema,\n  useSource,\n  useTranslation,\n  useUnique,\n} from 'sanity'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {usePaneRouter} from '../../components'\nimport {useDiffViewRouter} from '../../diffView/hooks/useDiffViewRouter'\nimport {useDocumentIdStack} from '../../hooks/useDocumentIdStack'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type PaneMenuItem} from '../../types'\nimport {DocumentURLCopied} from './__telemetry__'\nimport {DEFAULT_MENU_ITEM_GROUPS, EMPTY_PARAMS, INSPECT_ACTION_PREFIX} from './constants'\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\nimport {\n  type DocumentPaneProviderProps as DocumentPaneProviderWrapperProps,\n  type HistoryStoreProps,\n} from './types'\nimport {useDocumentPaneInitialValue} from './useDocumentPaneInitialValue'\nimport {useDocumentPaneInspector} from './useDocumentPaneInspector'\nimport {usePreviewUrl} from './usePreviewUrl'\n\ninterface DocumentPaneProviderProps extends DocumentPaneProviderWrapperProps {\n  historyStore: HistoryStoreProps\n}\n\n/**\n * @internal\n */\n// eslint-disable-next-line complexity, max-statements\nexport const DocumentPaneProvider = memo((props: DocumentPaneProviderProps) => {\n  const {children, index, pane, paneKey, onFocusPath, forcedVersion, historyStore} = props\n  const {\n    store: timelineStore,\n    error: timelineError,\n    ready: timelineReady,\n    revisionDocument,\n    onOlderRevision,\n    sinceDocument,\n    isPristine,\n    revisionId,\n    lastNonDeletedRevId,\n  } = historyStore\n\n  const schema = useSchema()\n  const {setDocumentMeta} = useCopyPaste()\n  const {\n    document: {\n      actions: documentActions,\n      badges: documentBadges,\n      unstable_fieldActions: fieldActionsResolver,\n      unstable_languageFilter: languageFilterResolver,\n    },\n  } = useSource()\n  const telemetry = useTelemetry()\n  const paneRouter = usePaneRouter()\n  const setPaneParams = paneRouter.setParams\n  const {push: pushToast} = useToast()\n  const {\n    options,\n    menuItemGroups = DEFAULT_MENU_ITEM_GROUPS,\n    title = null,\n    views: viewsProp = [],\n  } = pane\n  const paneOptions = useUnique(options)\n  const documentIdRaw = paneOptions.id\n  const documentId = getPublishedId(documentIdRaw)\n  const documentType = options.type\n  const params = useUnique(paneRouter.params) || EMPTY_PARAMS\n\n  const perspective = usePerspective()\n\n  const {selectedReleaseId, selectedPerspectiveName} = useMemo(() => {\n    // TODO: COREL - Remove this after updating sanity-assist to use <PerspectiveProvider>\n    if (forcedVersion) {\n      return forcedVersion\n    }\n    return {\n      selectedPerspectiveName: perspective.selectedPerspectiveName,\n      selectedReleaseId: perspective.selectedReleaseId,\n    }\n  }, [forcedVersion, perspective.selectedPerspectiveName, perspective.selectedReleaseId])\n\n  const diffViewRouter = useDiffViewRouter()\n\n  const initialValue = useDocumentPaneInitialValue({\n    paneOptions,\n    documentId,\n    documentType,\n    params,\n  })\n\n  const isInitialValueLoading = initialValue.loading\n  const {\n    changesOpen,\n    currentInspector,\n    inspectors,\n    closeInspector,\n    openInspector,\n    handleHistoryClose,\n    handleHistoryOpen,\n    handleInspectorAction,\n    inspectOpen,\n    handleLegacyInspectClose,\n  } = useDocumentPaneInspector({documentId, documentType, params, setParams: setPaneParams})\n\n  const [isDeleting, setIsDeleting] = useState(false)\n\n  /**\n   * Determine if the current document is deleted.\n   *\n   * When the timeline is available – we check for the absence of an editable document pair\n   * (both draft + published versions) as well as a non 'pristine' timeline (i.e. a timeline that consists\n   * of at least one chunk).\n   *\n   * In the _very rare_ case where the timeline cannot be loaded – we skip this check and always assume\n   * the document is NOT deleted. Since we can't accurately determine document deleted status without history,\n   * skipping this check means that in these cases, users will at least be able to create new documents\n   * without them being incorrectly marked as deleted.\n   */\n  const getIsDeleted = useCallback(\n    (editState: EditStateFor) => {\n      if (!timelineReady) return false\n      return (\n        Boolean(!editState?.draft && !editState?.published && !editState?.version) && !isPristine\n      )\n    },\n    [timelineReady, isPristine],\n  )\n\n  const getComparisonValue = useCallback(\n    (editState: EditStateFor) => {\n      return changesOpen ? sinceDocument : editState?.published || null\n    },\n    [changesOpen, sinceDocument],\n  )\n\n  const schemaType = schema.get(documentType) as ObjectSchemaType | undefined\n\n  const getIsReadOnly = useCallback(\n    (editState: EditStateFor): boolean => {\n      const isDeleted = getIsDeleted(editState)\n      const seeingHistoryDocument = revisionId !== null\n      return seeingHistoryDocument || isDeleting || isDeleted\n    },\n    [getIsDeleted, isDeleting, revisionId],\n  )\n\n  const getDisplayed = useCallback(\n    (value: SanityDocumentLike) => {\n      if (onOlderRevision) {\n        return revisionDocument || {_id: value._id, _type: value._type}\n      }\n      return value\n    },\n    [onOlderRevision, revisionDocument],\n  )\n\n  const {\n    editState,\n    connectionState,\n    focusPath,\n    onChange,\n    validation,\n    ready: formReady,\n    value,\n    formState,\n    permissions,\n    onPathOpen,\n    isPermissionsLoading,\n    formStateRef,\n    onProgrammaticFocus,\n\n    collapsedFieldSets,\n    collapsedPaths,\n    onBlur,\n    onFocus,\n    onSetActiveFieldGroup,\n    onSetCollapsedPath,\n    onSetCollapsedFieldSet,\n    openPath,\n  } = useDocumentForm({\n    documentType,\n    documentId,\n    initialValue: initialValue,\n    comparisonValue: getComparisonValue,\n    releaseId: selectedReleaseId,\n    selectedPerspectiveName,\n    initialFocusPath: params.path ? pathFromString(params.path) : EMPTY_ARRAY,\n    readOnly: getIsReadOnly,\n    onFocusPath,\n    getFormDocumentValue: getDisplayed,\n  })\n\n  const getDocumentVersionType = useCallback(() => {\n    let version: DocumentActionsVersionType\n    switch (true) {\n      case Boolean(params.rev):\n        version = 'revision'\n        break\n      case selectedReleaseId && isVersionId(value._id):\n        version = 'version'\n        break\n      case selectedPerspectiveName === 'published':\n        version = 'published'\n        break\n      default:\n        version = 'draft'\n    }\n\n    return version\n  }, [selectedPerspectiveName, selectedReleaseId, params, value._id])\n\n  const actionsPerspective = useMemo(() => getDocumentVersionType(), [getDocumentVersionType])\n\n  const documentActionsProps: PartialContext<DocumentActionsContext> = useMemo(\n    () => ({\n      schemaType: documentType,\n      documentId,\n      versionType: actionsPerspective,\n      ...(selectedReleaseId && {versionName: selectedReleaseId}),\n    }),\n    [documentType, documentId, actionsPerspective, selectedReleaseId],\n  )\n\n  // Resolve document actions\n  const actions = useMemo(\n    () => documentActions(documentActionsProps),\n    [documentActions, documentActionsProps],\n  )\n\n  // Resolve document badges\n  const badges = useMemo(\n    () => documentBadges({schemaType: documentType, documentId}),\n    [documentBadges, documentId, documentType],\n  )\n\n  // Resolve document language filter\n  const languageFilter = useMemo(\n    () => languageFilterResolver({schemaType: documentType, documentId}),\n    [documentId, documentType, languageFilterResolver],\n  )\n\n  const views = useUnique(viewsProp)\n\n  const activeViewId = params.view || (views[0] && views[0].id) || null\n\n  // TODO: this may cause a lot of churn. May be a good idea to prevent these\n  // requests unless the menu is open somehow\n  const previewUrl = usePreviewUrl(value)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const fieldActions: DocumentFieldAction[] = useMemo(\n    () => (schemaType ? fieldActionsResolver({documentId, documentType, schemaType}) : []),\n    [documentId, documentType, fieldActionsResolver, schemaType],\n  )\n\n  /**\n   * Note that in addition to connection and edit state, we also wait for a valid document timeline\n   * range to be loaded. This means if we're loading an older revision, the full transaction range must\n   * be loaded in full prior to the document being displayed.\n   *\n   * Previously, visiting studio URLs with timeline params would display the 'current' document and then\n   * 'snap' in the older revision, which was disorienting and could happen mid-edit.\n   *\n   * In the event that the timeline cannot be loaded due to TimelineController errors or blocked requests,\n   * we skip this readiness check to ensure that users aren't locked out of editing. Trying to select\n   * a timeline revision in this instance will display an error localized to the popover itself.\n   */\n  const ready = formReady && (!params.rev || timelineReady || !!timelineError)\n\n  const displayed: Partial<SanityDocument> | undefined = useMemo(\n    () => getDisplayed(value),\n    [getDisplayed, value],\n  )\n\n  const {previousId} = useDocumentIdStack({displayed, documentId, editState})\n\n  const setTimelineRange = useCallback(\n    (newSince: string, newRev: string | null) => {\n      setPaneParams({\n        ...params,\n        since: newSince,\n        rev: newRev || undefined,\n      })\n    },\n    [params, setPaneParams],\n  )\n\n  const handlePaneClose = useCallback(() => paneRouter.closeCurrent(), [paneRouter])\n\n  const handlePaneSplit = useCallback(() => paneRouter.duplicateCurrent(), [paneRouter])\n\n  const handleMenuAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'production-preview' && previewUrl) {\n        window.open(previewUrl)\n        return true\n      }\n\n      if (item.action === 'copy-document-url' && navigator) {\n        telemetry.log(DocumentURLCopied)\n        // Chose to copy the user's current URL instead of\n        // the document's edit intent link because\n        // of bugs when resolving a document that has\n        // multiple access paths within Structure\n        navigator.clipboard.writeText(window.location.toString())\n        pushToast({\n          id: 'copy-document-url',\n          status: 'info',\n          title: t('panes.document-operation-results.operation-success_copy-url'),\n        })\n        return true\n      }\n\n      if (item.action === 'reviewChanges') {\n        handleHistoryOpen()\n        return true\n      }\n\n      if (\n        item.action === 'inspect' ||\n        (typeof item.action === 'string' && item.action.startsWith(INSPECT_ACTION_PREFIX))\n      ) {\n        handleInspectorAction(item)\n      }\n\n      if (item.action === 'compareVersions' && typeof previousId !== 'undefined') {\n        diffViewRouter.navigateDiffView({\n          mode: 'version',\n          previousDocument: {\n            type: documentType,\n            id: previousId,\n          },\n          nextDocument: {\n            type: documentType,\n            id: value._id,\n          },\n        })\n        return true\n      }\n\n      return false\n    },\n    [\n      previewUrl,\n      previousId,\n      telemetry,\n      pushToast,\n      t,\n      handleHistoryOpen,\n      handleInspectorAction,\n      diffViewRouter,\n      documentType,\n      value._id,\n    ],\n  )\n\n  useEffect(() => {\n    setDocumentMeta({\n      documentId,\n      documentType,\n      schemaType: schemaType!,\n      onChange,\n    })\n  }, [documentId, documentType, schemaType, onChange, setDocumentMeta])\n\n  const compareValue = useMemo(() => getComparisonValue(editState), [editState, getComparisonValue])\n  const isDeleted = useMemo(() => getIsDeleted(editState), [editState, getIsDeleted])\n  const documentPane: DocumentPaneContextValue = useMemo(\n    () =>\n      ({\n        actions,\n        activeViewId,\n        badges,\n        changesOpen,\n        closeInspector,\n        collapsedFieldSets,\n        collapsedPaths,\n        compareValue,\n        connectionState,\n        displayed,\n        documentId,\n        documentIdRaw,\n        documentType,\n        editState,\n        fieldActions,\n        focusPath,\n        inspector: currentInspector || null,\n        inspectors,\n        onBlur,\n        onChange,\n        onFocus,\n        onPathOpen,\n        onHistoryClose: handleHistoryClose,\n        onHistoryOpen: handleHistoryOpen,\n        onInspectClose: handleLegacyInspectClose,\n        onMenuAction: handleMenuAction,\n        onPaneClose: handlePaneClose,\n        onPaneSplit: handlePaneSplit,\n        onSetActiveFieldGroup,\n        onSetCollapsedPath,\n        onSetCollapsedFieldSet,\n        openInspector,\n        openPath,\n        index,\n        inspectOpen,\n        validation,\n        menuItemGroups: menuItemGroups || [],\n        paneKey,\n        previewUrl,\n        ready,\n        schemaType: schemaType!,\n        isPermissionsLoading,\n        isInitialValueLoading,\n        permissions,\n        setTimelineRange,\n        setIsDeleting,\n        isDeleting,\n        isDeleted,\n        timelineError,\n        timelineStore,\n        title,\n        value,\n        selectedReleaseId,\n        views,\n        formState,\n        unstable_languageFilter: languageFilter,\n        revisionId,\n        lastNonDeletedRevId,\n      }) satisfies DocumentPaneContextValue,\n    [\n      actions,\n      activeViewId,\n      badges,\n      changesOpen,\n      closeInspector,\n      collapsedFieldSets,\n      collapsedPaths,\n      compareValue,\n      connectionState,\n      displayed,\n      documentId,\n      documentIdRaw,\n      documentType,\n      editState,\n      fieldActions,\n      focusPath,\n      currentInspector,\n      inspectors,\n      onBlur,\n      onChange,\n      onFocus,\n      onPathOpen,\n      handleHistoryClose,\n      handleHistoryOpen,\n      handleLegacyInspectClose,\n      handleMenuAction,\n      handlePaneClose,\n      handlePaneSplit,\n      onSetActiveFieldGroup,\n      onSetCollapsedPath,\n      onSetCollapsedFieldSet,\n      openInspector,\n      openPath,\n      index,\n      inspectOpen,\n      validation,\n      menuItemGroups,\n      paneKey,\n      previewUrl,\n      ready,\n      schemaType,\n      isPermissionsLoading,\n      isInitialValueLoading,\n      permissions,\n      setTimelineRange,\n      isDeleting,\n      isDeleted,\n      timelineError,\n      timelineStore,\n      title,\n      value,\n      selectedReleaseId,\n      views,\n      formState,\n      languageFilter,\n      revisionId,\n      lastNonDeletedRevId,\n    ],\n  )\n\n  // Reset `focusPath` when `documentId` or `params.path` changes\n  useEffect(() => {\n    if (ready && params.path) {\n      const {path, ...restParams} = params\n      const pathFromUrl = resolveKeyedPath(formStateRef.current?.value, pathFromString(path))\n      onProgrammaticFocus(pathFromUrl)\n\n      // remove the `path`-param from url after we have consumed it as the initial focus path\n      paneRouter.setParams(restParams)\n    }\n\n    return undefined\n  }, [formStateRef, onProgrammaticFocus, paneRouter, params, ready])\n\n  return (\n    <DocumentPaneContext.Provider value={documentPane}>{children}</DocumentPaneContext.Provider>\n  )\n})\n\nDocumentPaneProvider.displayName = 'Memo(DocumentPaneProvider)'\n","import {type ObjectSchemaType} from '@sanity/types'\nimport {useMemo} from 'react'\nimport {\n  EMPTY_ARRAY,\n  EventsProvider,\n  getDraftId,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  getVersionId,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  PerspectiveProvider,\n  useArchivedReleases,\n  useEditState,\n  useEventsStore,\n  usePerspective,\n  useSchema,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\nimport {usePaneOptions} from './DocumentPane'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\nexport const DocumentEventsPane = (props: DocumentPaneProviderProps) => {\n  const {params = EMPTY_PARAMS} = usePaneRouter()\n  const options = usePaneOptions(props.pane.options, params)\n  const schema = useSchema()\n  const documentType = options.type\n  const schemaType = schema.get(options.type) as ObjectSchemaType | undefined\n  const liveEdit = Boolean(schemaType?.liveEdit)\n\n  const {selectedPerspectiveName, selectedReleaseId, selectedPerspective} = usePerspective()\n  const {data: archivedReleases} = useArchivedReleases()\n  const editState = useEditState(\n    getPublishedId(options.id),\n    documentType,\n    'default',\n    selectedReleaseId,\n  )\n\n  const showingPublishedOnDraft = liveEdit && selectedPerspective === 'drafts' && !editState?.draft\n  const {rev, since} = params\n  const historyVersion = params.historyVersion\n\n  const documentId = useMemo(() => {\n    if (showingPublishedOnDraft) {\n      return getPublishedId(options.id)\n    }\n    if (\n      historyVersion &&\n      archivedReleases.some(\n        (release) => getReleaseIdFromReleaseDocumentId(release._id) === historyVersion,\n      )\n    ) {\n      // Check if we have a release that matches with this historyVersion\n      return getVersionId(options.id, historyVersion)\n    }\n    if (typeof selectedPerspectiveName === 'undefined') {\n      return getDraftId(options.id)\n    }\n    if (selectedPerspectiveName === 'published') {\n      return getPublishedId(options.id)\n    }\n    if (selectedReleaseId) {\n      return getVersionId(options.id, selectedPerspectiveName)\n    }\n    return options.id\n  }, [\n    archivedReleases,\n    historyVersion,\n    selectedPerspectiveName,\n    options.id,\n    showingPublishedOnDraft,\n    selectedReleaseId,\n  ])\n\n  const eventsStore = useEventsStore({documentId, documentType: options.type, rev, since})\n\n  const historyStoreProps = useMemo(\n    () => ({\n      error: eventsStore.error,\n      revisionId: eventsStore.revision?.revisionId || null,\n      onOlderRevision: Boolean(eventsStore.revision?.document && eventsStore.revision?.revisionId),\n      revisionDocument: eventsStore.revision?.document || null,\n      sinceDocument: eventsStore.sinceRevision?.document || null,\n      ready: !eventsStore.loading,\n      isPristine: Boolean(eventsStore.events.length === 0),\n      lastNonDeletedRevId:\n        eventsStore.events.find(\n          (e) => !isDeleteDocumentGroupEvent(e) && !isDeleteDocumentVersionEvent(e),\n        )?.id || null,\n    }),\n    [eventsStore],\n  )\n\n  const value = useMemo(() => eventsStore, [eventsStore])\n\n  return (\n    <EventsProvider value={value}>\n      {historyVersion ? (\n        <PerspectiveProvider\n          selectedPerspectiveName={historyVersion}\n          excludedPerspectives={EMPTY_ARRAY}\n        >\n          <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n        </PerspectiveProvider>\n      ) : (\n        <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n      )}\n    </EventsProvider>\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useMemo, useState} from 'react'\nimport {getPublishedId, useTimelineSelector, useTimelineStore} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\nimport {usePaneOptions} from './DocumentPane'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\nexport const DocumentPaneWithLegacyTimelineStore = (props: DocumentPaneProviderProps) => {\n  const {pane} = props\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n\n  const params = paneRouter.params || EMPTY_PARAMS\n\n  const [timelineError, setTimelineError] = useState<Error | null>(null)\n\n  const store = useTimelineStore({\n    documentId: getPublishedId(options.id),\n    documentType: options.type,\n    onError: setTimelineError,\n    rev: params.rev,\n    since: params.since,\n  })\n\n  const onOlderRevision = useTimelineSelector(store, (state) => state.onOlderRevision)\n  const revTime = useTimelineSelector(store, (state) => state.revTime)\n  const sinceAttributes = useTimelineSelector(store, (state) => state.sinceAttributes)\n  const timelineDisplayed = useTimelineSelector(store, (state) => state.timelineDisplayed)\n  const timelineReady = useTimelineSelector(store, (state) => state.timelineReady)\n  const isPristine = useTimelineSelector(store, (state) => state.isPristine)\n  const lastNonDeletedRevId = useTimelineSelector(store, (state) => state.lastNonDeletedRevId)\n\n  const historyStoreProps = useMemo(\n    () => ({\n      store,\n      error: timelineError,\n      revisionId: revTime?.id || null,\n      onOlderRevision: onOlderRevision,\n      revisionDocument: timelineDisplayed as SanityDocument | null,\n      sinceDocument: sinceAttributes as SanityDocument | null,\n      ready: timelineReady,\n      isPristine: Boolean(isPristine),\n      lastNonDeletedRevId,\n    }),\n    [\n      store,\n      timelineError,\n      revTime?.id,\n      onOlderRevision,\n      timelineDisplayed,\n      sinceAttributes,\n      timelineReady,\n      isPristine,\n      lastNonDeletedRevId,\n    ],\n  )\n  return <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n}\n","import {memo} from 'react'\nimport {useSource} from 'sanity'\n\nimport {DocumentEventsPane} from './DocumentEventsPane'\nimport {DocumentPaneWithLegacyTimelineStore} from './DocumentPaneLegacyTimeline'\nimport {type DocumentPaneProviderProps} from './types'\n\n/**\n * @internal\n */\nexport const DocumentPaneProviderWrapper = memo((props: DocumentPaneProviderProps) => {\n  const source = useSource()\n  if (source.beta?.eventsAPI?.documents) {\n    return <DocumentEventsPane {...props} />\n  }\n  return <DocumentPaneWithLegacyTimelineStore {...props} />\n})\nDocumentPaneProviderWrapper.displayName = 'Memo(DocumentPaneProviderWrapper)'\n","import {useEffect, useRef} from 'react'\nimport {usePerspective} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\n\n/**\n * This hooks takes care of resetting the history related params when the perspective changes.\n * It needs to be placed in a stable component, like the `DocumentPane`, which won't be unmounted when the perspective changes.\n */\nexport function useResetHistoryParams() {\n  const {params = EMPTY_PARAMS, setParams} = usePaneRouter()\n\n  const {selectedPerspectiveName} = usePerspective()\n  const isMounted = useRef(false)\n\n  const updateHistoryParams = useEffectEvent((_perspective?: string) => {\n    // Check if any of the history related params are set, and reset them, don't unnecessarily update the params\n    const PARAMS_TO_UPDATE = ['since', 'historyVersion', 'rev', 'preserveRev']\n    const shouldUpdateParams = PARAMS_TO_UPDATE.some((param) => params[param])\n    if (!shouldUpdateParams) return\n\n    setParams({\n      ...params,\n      // Reset the history related params when the perspective changes, as they don't make sense\n      // in the context of the new perspective - preserveRev is used when setting draft revision.\n      rev: params.preserveRev === 'true' ? params.rev : undefined,\n      preserveRev: undefined,\n      since: undefined,\n      historyVersion: undefined,\n    })\n  })\n  useEffect(() => {\n    // Skip the first run to avoid resetting the params on initial load\n    if (isMounted.current) {\n      updateHistoryParams(selectedPerspectiveName)\n    }\n  }, [selectedPerspectiveName])\n\n  useEffect(() => {\n    isMounted.current = true\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n}\n","import {type Path} from '@sanity/types'\nimport {Stack, Text} from '@sanity/ui'\nimport {fromString as pathFromString} from '@sanity/util/paths'\nimport {memo, useMemo} from 'react'\nimport {\n  CopyPasteProvider,\n  ReferenceInputOptionsProvider,\n  SourceProvider,\n  Translate,\n  useDocumentType,\n  usePerspective,\n  useSource,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {DiffViewDocumentLayout} from '../../diffView/plugin/DiffViewDocumentLayout'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type DocumentPaneNode} from '../../types'\nimport {ErrorPane} from '../error'\nimport {LoadingPane} from '../loading'\nimport {CommentsWrapper} from './comments'\nimport {useDocumentLayoutComponent} from './document-layout'\nimport {DocumentPaneProviderWrapper} from './DocumentPaneProviderWrapper'\nimport {type DocumentPaneProviderProps} from './types'\nimport {useResetHistoryParams} from './useResetHistoryParams'\n\ntype DocumentPaneOptions = DocumentPaneNode['options']\n\n/**\n * @internal\n */\nexport const DocumentPane = memo(function DocumentPane(props: DocumentPaneProviderProps) {\n  const {name: parentSourceName} = useSource()\n\n  return (\n    <SourceProvider name={props.pane.source || parentSourceName}>\n      <CopyPasteProvider>\n        <DocumentPaneInner {...props} />\n      </CopyPasteProvider>\n    </SourceProvider>\n  )\n})\n\nfunction DocumentPaneInner(props: DocumentPaneProviderProps) {\n  const {pane, paneKey} = props\n  const {resolveNewDocumentOptions} = useSource().document\n  const {selectedPerspectiveName} = usePerspective()\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n  const {documentType, isLoaded: isDocumentLoaded} = useDocumentType(options.id, options.type)\n  useResetHistoryParams()\n  const DocumentLayout = useDocumentLayoutComponent()\n\n  // The templates that should be creatable from inside this document pane.\n  // For example, from the \"Create new\" menu in reference inputs.\n  const templateItems = useMemo(() => {\n    return resolveNewDocumentOptions({\n      type: 'document',\n      documentId: options.id,\n      schemaType: options.type,\n    })\n  }, [options.id, options.type, resolveNewDocumentOptions])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n  const isLoaded = isDocumentLoaded && !isTemplatePermissionsLoading\n\n  const providerProps = useMemo(() => {\n    return isLoaded && documentType && options.type !== documentType\n      ? mergeDocumentType(props, options, documentType)\n      : props\n  }, [props, documentType, isLoaded, options])\n\n  const {ReferenceChildLink, handleEditReference, groupIndex, routerPanesState} = paneRouter\n  const childParams = routerPanesState[groupIndex + 1]?.[0].params || {}\n  const routerPanesStateLength = routerPanesState.length\n  const {parentRefPath} = childParams\n\n  const activePath: {path: Path; state: 'selected' | 'pressed' | 'none'} = useMemo(() => {\n    return parentRefPath\n      ? {\n          path: pathFromString(parentRefPath),\n          state:\n            // eslint-disable-next-line no-nested-ternary\n            groupIndex >= routerPanesStateLength - 1\n              ? 'none'\n              : groupIndex >= routerPanesStateLength - 2\n                ? 'selected'\n                : 'pressed',\n        }\n      : {path: [], state: 'none'}\n  }, [parentRefPath, groupIndex, routerPanesStateLength])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (options.type === '*' && !isLoaded) {\n    return (\n      <LoadingPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.loading')}\n      />\n    )\n  }\n\n  if (!documentType) {\n    return (\n      <ErrorPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.title')}\n      >\n        <Stack space={4}>\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-not-found.text\"\n              values={{id: options.id}}\n              components={{Code: ({children}) => <code>{children}</code>}}\n            />\n          </Text>\n        </Stack>\n      </ErrorPane>\n    )\n  }\n\n  return (\n    <DocumentPaneProviderWrapper\n      // this needs to be here to avoid formState from being re-used across (incompatible) document types\n      // see https://github.com/sanity-io/sanity/discussions/3794 for a description of the problem\n      key={`${documentType}-${options.id}-${selectedPerspectiveName || ''}`}\n      {...providerProps}\n    >\n      {/* NOTE: this is a temporary location for this provider until we */}\n      {/* stabilize the reference input options formally in the form builder */}\n      {/* eslint-disable-next-line react/jsx-pascal-case */}\n      <ReferenceInputOptionsProvider\n        EditReferenceLinkComponent={ReferenceChildLink}\n        onEditReference={handleEditReference}\n        initialValueTemplateItems={templatePermissions}\n        activePath={activePath}\n      >\n        <DiffViewDocumentLayout documentId={options.id} documentType={options.type}>\n          <CommentsWrapper documentId={options.id} documentType={options.type}>\n            <DocumentLayout documentId={options.id} documentType={options.type} />\n          </CommentsWrapper>\n        </DiffViewDocumentLayout>\n      </ReferenceInputOptionsProvider>\n    </DocumentPaneProviderWrapper>\n  )\n}\n\n/**\n * @internal\n */\nexport function usePaneOptions(\n  options: DocumentPaneOptions,\n  params: Record<string, string | undefined> = {},\n): DocumentPaneOptions {\n  const templates = useTemplates()\n\n  return useMemo(() => {\n    // The document type is provided, so return\n    if (options.type && options.type !== '*') {\n      return options\n    }\n\n    // Attempt to derive document type from the template configuration\n    const templateName = options.template || params.template\n    const template = templateName ? templates.find((t) => t.id === templateName) : undefined\n    const documentType = template?.schemaType\n\n    // No document type was found in a template\n    if (!documentType) {\n      return options\n    }\n\n    // The template provided the document type, so modify the pane’s `options` property\n    return {...options, type: documentType}\n  }, [options, params.template, templates])\n}\n\nfunction mergeDocumentType(\n  props: DocumentPaneProviderProps,\n  options: DocumentPaneOptions,\n  documentType: string,\n): DocumentPaneProviderProps {\n  return {\n    ...props,\n    pane: {\n      ...props.pane,\n      options: {...options, type: documentType},\n    },\n  }\n}\n","import {type SortOrder} from './types'\n\nexport const PARTIAL_PAGE_LIMIT = 100\nexport const FULL_LIST_LIMIT = 2000\nexport const DEFAULT_ORDERING: SortOrder = {by: [{field: '_updatedAt', direction: 'desc'}]}\nexport const EMPTY_RECORD: Record<string, unknown> = {}\n\nexport const ENABLE_LRU_MEMO = true\n","import {type SanityDocument} from '@sanity/types'\nimport {Box, Container, Flex, Heading, Stack, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  ErrorActions,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  LoadingBlock,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay, PaneContent, PaneItem, usePane, usePaneLayout} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {FULL_LIST_LIMIT} from './constants'\nimport {type DocumentListPaneItem, type LoadingVariant} from './types'\n\nconst RootBox = styled(Box)<{$opacity?: number}>`\n  position: relative;\n  opacity: ${(props) => props.$opacity || 1};\n  transition: opacity 0.4s;\n`\n\nconst CommandListBox = styled(Box)`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n`\n\ninterface DocumentListPaneContentProps {\n  childItemId?: string\n  error: {message: string} | null\n  filterIsSimpleTypeConstraint: boolean\n  hasMaxItems?: boolean\n  hasSearchQuery: boolean\n  isActive?: boolean\n  isLazyLoading: boolean\n  isLoading: boolean\n  items: DocumentListPaneItem[]\n  layout?: GeneralPreviewLayoutKey\n  loadingVariant?: LoadingVariant\n  onEndReached: () => void\n  onRetry?: () => void\n  paneTitle: string\n  searchInputElement: HTMLInputElement | null\n  showIcons: boolean\n}\n\nconst SKELETON_ITEMS = [...Array(30).keys()]\n\nfunction LoadingView(props: {layout?: GeneralPreviewLayoutKey}) {\n  const {layout} = props\n\n  return (\n    <Stack paddingX={3} paddingY={2} paddingTop={0} space={1}>\n      {SKELETON_ITEMS.map((num) => (\n        <SanityDefaultPreview isPlaceholder layout={layout} key={num} />\n      ))}\n    </Stack>\n  )\n}\n\nexport function DocumentListPaneContent(props: DocumentListPaneContentProps) {\n  const {\n    childItemId,\n    error,\n    filterIsSimpleTypeConstraint,\n    hasMaxItems,\n    hasSearchQuery,\n    isActive,\n    isLazyLoading,\n    isLoading,\n    items,\n    layout,\n    loadingVariant,\n    onEndReached,\n    onRetry,\n    paneTitle,\n    searchInputElement,\n    showIcons,\n  } = props\n\n  const schema = useSchema()\n\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed, index} = usePane()\n  const [shouldRender, setShouldRender] = useState(!collapsed)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleEndReached = useCallback(() => {\n    if (shouldRender) {\n      onEndReached()\n    }\n  }, [onEndReached, shouldRender])\n\n  useEffect(() => {\n    if (collapsed) return undefined\n\n    const timer = setTimeout(() => {\n      setShouldRender(true)\n    }, 0)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [collapsed, items])\n\n  const renderItem = useCallback<CommandListRenderItemCallback<SanityDocument>>(\n    (item, {activeIndex}) => {\n      const publishedId = getPublishedId(item._id)\n      const isSelected = childItemId === publishedId\n      const pressed = !isActive && isSelected\n      const selected = isActive && isSelected\n      const isLastItem = activeIndex === items.length - 1\n      const showSpinner = isLastItem && isLazyLoading\n      const showMaxItemsMessage = isLastItem && hasMaxItems\n\n      return (\n        <>\n          <PaneItem\n            icon={showIcons === false ? false : undefined}\n            id={publishedId}\n            layout={layout}\n            marginBottom={1}\n            pressed={pressed}\n            schemaType={schema.get(item._type)}\n            selected={selected}\n            value={item}\n          />\n\n          {showSpinner && <LoadingBlock />}\n\n          {showMaxItemsMessage && (\n            <Box marginY={1} paddingX={3} paddingY={4}>\n              <Text align=\"center\" muted size={1}>\n                {t('panes.document-list-pane.max-items.text', {limit: FULL_LIST_LIMIT})}\n              </Text>\n            </Box>\n          )}\n        </>\n      )\n    },\n    [childItemId, isActive, items.length, layout, schema, showIcons, hasMaxItems, isLazyLoading, t],\n  )\n\n  const noDocumentsContent = useMemo(() => {\n    if (hasSearchQuery) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Box paddingX={4} paddingY={5}>\n              <Text align=\"center\" muted>\n                {t('panes.document-list-pane.no-documents.text')}\n              </Text>\n            </Box>\n          </Container>\n        </Flex>\n      )\n    }\n\n    return (\n      <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n        <Container width={1}>\n          <Box paddingX={4} paddingY={5}>\n            <Text align=\"center\" muted>\n              {filterIsSimpleTypeConstraint\n                ? t('panes.document-list-pane.no-documents-of-type.text')\n                : t('panes.document-list-pane.no-matching-documents.text')}\n            </Text>\n          </Box>\n        </Container>\n      </Flex>\n    )\n  }, [filterIsSimpleTypeConstraint, hasSearchQuery, t])\n\n  const mainContent = useMemo(() => {\n    if (!shouldRender) {\n      return null\n    }\n\n    if (error) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Stack paddingX={4} paddingY={5} space={4}>\n              <Heading as=\"h3\">{t('panes.document-list-pane.error.title')}</Heading>\n              <Text as=\"p\">\n                <Translate\n                  t={t}\n                  i18nKey=\"panes.document-list-pane.error.text\"\n                  values={{error: error.message}}\n                  components={{Code: ({children}) => <code>{children}</code>}}\n                />\n              </Text>\n              <ErrorActions error={error} eventId={null} onRetry={onRetry} />\n            </Stack>\n          </Container>\n        </Flex>\n      )\n    }\n\n    if (!isLoading && items.length === 0) {\n      return noDocumentsContent\n    }\n\n    if (loadingVariant === 'initial' && isLoading) {\n      return (\n        <Delay ms={300}>\n          <LoadingView layout={layout} />\n        </Delay>\n      )\n    }\n\n    if (loadingVariant === 'spinner' && isLoading) {\n      return null\n    }\n\n    // prevents bug when panes won't render if first rendered while collapsed\n    const key = `${index}-${collapsed}`\n\n    return (\n      <RootBox overflow=\"hidden\" height=\"fill\" $opacity={loadingVariant === 'subtle' ? 0.8 : 1}>\n        <CommandListBox>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={paneTitle}\n            canReceiveFocus\n            inputElement={searchInputElement}\n            itemHeight={51}\n            items={items}\n            key={key}\n            onEndReached={handleEndReached}\n            onlyShowSelectionWhenActive\n            overscan={10}\n            paddingBottom={1}\n            paddingX={3}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </CommandListBox>\n      </RootBox>\n    )\n  }, [\n    collapsed,\n    error,\n    handleEndReached,\n    index,\n    isLoading,\n    items,\n    layout,\n    loadingVariant,\n    noDocumentsContent,\n    onRetry,\n    paneTitle,\n    renderItem,\n    searchInputElement,\n    shouldRender,\n    t,\n  ])\n\n  return (\n    <PaneContent\n      data-testid=\"document-list-pane\"\n      overflow={layoutCollapsed || loadingVariant === 'initial' ? 'hidden' : 'auto'}\n    >\n      {mainContent}\n    </PaneContent>\n  )\n}\n","import {\n  isIndexSegment,\n  isKeySegment,\n  isReferenceSchemaType,\n  type ObjectField,\n  type ObjectFieldType,\n  type ObjectSchemaType,\n  type SanityDocumentLike,\n  type SchemaType,\n} from '@sanity/types'\nimport * as PathUtils from '@sanity/util/paths'\nimport {type ExprNode, parse} from 'groq-js'\nimport {collate, getPublishedId} from 'sanity'\n\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\nexport function getDocumentKey(value: DocumentListPaneItem, index: number): string {\n  return value._id ? getPublishedId(value._id) : `item-${index}`\n}\n\nexport function removePublishedWithDrafts(documents: SanityDocumentLike[]): DocumentListPaneItem[] {\n  return collate(documents).map((entry) => {\n    const doc = entry.draft || entry.published || entry.versions[0]\n    const hasDraft = Boolean(entry.draft)\n\n    return {\n      ...doc,\n      hasPublished: !!entry.published,\n      hasDraft,\n    }\n  }) as any\n}\n\nexport function applyOrderingFunctions(order: SortOrder, schemaType: ObjectSchemaType): SortOrder {\n  const orderBy = order.by.map((by) => {\n    // Skip those that already have a mapper\n    if (by.mapWith) {\n      return by\n    }\n\n    const fieldType = tryResolveSchemaTypeForPath(schemaType, by.field)\n    if (!fieldType) {\n      return by\n    }\n\n    // Note: order matters here, since the jsonType of a date field is `string`,\n    // but we want to apply `datetime()`, not `lower()`\n    if (fieldExtendsType(fieldType, 'datetime')) {\n      return {...by, mapWith: 'dateTime'}\n    }\n\n    if (fieldType.jsonType === 'string') {\n      return {...by, mapWith: 'lower'}\n    }\n\n    return by\n  })\n\n  return orderBy.every((item, index) => item === order.by[index]) ? order : {...order, by: orderBy}\n}\n\nfunction tryResolveSchemaTypeForPath(baseType: SchemaType, path: string): SchemaType | undefined {\n  const pathSegments = PathUtils.fromString(path)\n\n  let current: SchemaType | undefined = baseType\n  for (const segment of pathSegments) {\n    if (!current) {\n      return undefined\n    }\n\n    if (typeof segment === 'string') {\n      current = getFieldTypeByName(current, segment)\n      continue\n    }\n\n    const isArrayAccessor = isKeySegment(segment) || isIndexSegment(segment)\n    if (!isArrayAccessor || current.jsonType !== 'array') {\n      return undefined\n    }\n\n    const [memberType, otherType] = current.of || []\n    if (otherType || !memberType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    if (!isReferenceSchemaType(memberType)) {\n      current = memberType\n      continue\n    }\n\n    const [refType, otherRefType] = memberType.to || []\n    if (otherRefType || !refType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    current = refType\n  }\n\n  return current\n}\n\nfunction getFieldTypeByName(type: SchemaType, fieldName: string): SchemaType | undefined {\n  if (!('fields' in type)) {\n    return undefined\n  }\n\n  const fieldType = type.fields.find((field) => field.name === fieldName)\n  return fieldType ? fieldType.type : undefined\n}\n\nexport function fieldExtendsType(field: ObjectField | ObjectFieldType, ofType: string): boolean {\n  let current: SchemaType | undefined = field.type\n  while (current) {\n    if (current.name === ofType) {\n      return true\n    }\n\n    if (!current.type && current.jsonType === ofType) {\n      return true\n    }\n\n    current = current.type\n  }\n\n  return false\n}\n\n/**\n * Recursively extract static `_type`s from GROQ filter expressions. If the\n * types can't be statically determined then it will return `null`.\n */\n// eslint-disable-next-line complexity\nfunction findTypes(node: ExprNode): Set<string> | null {\n  switch (node.type) {\n    case 'OpCall': {\n      const {left, right} = node\n\n      switch (node.op) {\n        // e.g. `a == b`\n        case '==': {\n          // e.g. `_type == 'value'`\n          if (left.type === 'AccessAttribute' && left.name === '_type' && !left.base) {\n            if (right.type !== 'Value' || typeof right.value !== 'string') return null\n            return new Set([right.value])\n          }\n\n          // e.g. `'value' == _type`\n          if (right.type === 'AccessAttribute' && right.name === '_type' && !right.base) {\n            if (left.type !== 'Value' || typeof left.value !== 'string') return null\n            return new Set([left.value])\n          }\n\n          // otherwise, we can't determine the types statically\n          return null\n        }\n\n        // e.g. `a in b`\n        case 'in': {\n          // if `_type` is not on the left hand side of `in` then it can't be determined\n          if (left.type !== 'AccessAttribute' || left.name !== '_type' || left.base) return null\n          // if the right hand side is not an array then the types can't be determined\n          if (right.type !== 'Array') return null\n\n          const types = new Set<string>()\n          // iterate through all the types\n          for (const element of right.elements) {\n            // if we find a splat, then early return, we can't determine the types\n            if (element.isSplat) return null\n            // if the array element is not just a simple value, then early return\n            if (element.value.type !== 'Value') return null\n            // if the array element value is not a string, then early return\n            if (typeof element.value.value !== 'string') return null\n            // otherwise add the element value to the set of types\n            types.add(element.value.value)\n          }\n\n          // if there were any elements in the types set, return it\n          if (types.size) return types\n          // otherwise, the set of types cannot be determined\n          return null\n        }\n\n        default: {\n          return null\n        }\n      }\n    }\n\n    // groups can just be unwrapped, the AST preserves the order\n    case 'Group': {\n      return findTypes(node.base)\n    }\n\n    // e.g. `_type == 'a' || _type == 'b'`\n    // with Or nodes, if we can't determine the types for either the left or\n    // right hand side then we can't determine the types for any\n    // e.g. `_type == 'a' || isActive`\n    // — can't determine types because `isActive` could be true on another types\n    case 'Or': {\n      const left = findTypes(node.left)\n      if (!left) return null\n\n      const right = findTypes(node.right)\n      if (!right) return null\n\n      return new Set([...left, ...right])\n    }\n\n    // e.g. `_type == 'a' && isActive`\n    // with And nodes, we can determine the types as long as we can determine\n    // the types for one side. We can't determine the types if both are `null`.\n    case 'And': {\n      const left = findTypes(node.left)\n      const right = findTypes(node.right)\n\n      if (!left && !right) return null\n      return new Set([...(left || []), ...(right || [])])\n    }\n\n    default: {\n      return null\n    }\n  }\n}\n\nexport function findStaticTypesInFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string[] | null {\n  try {\n    const types = findTypes(parse(filter, {params}))\n    if (!types) return null\n\n    return Array.from(types).sort()\n  } catch {\n    // if we couldn't parse the filter, just return `null`\n    return null\n  }\n}\n","import {type ClientPerspective, type SanityClient} from '@sanity/client'\nimport {\n  asyncScheduler,\n  defer,\n  map,\n  merge,\n  mergeMap,\n  type Observable,\n  of,\n  partition,\n  share,\n  take,\n  throttleTime,\n  throwError,\n  timer,\n} from 'rxjs'\nimport {exhaustMapWithTrailing} from 'rxjs-exhaustmap-with-trailing'\nimport {\n  createSearch,\n  createSWR,\n  getSearchableTypes,\n  type SanityDocumentLike,\n  type Schema,\n  type SearchOptions,\n  type SearchStrategy,\n} from 'sanity'\n\nimport {getExtendedProjection} from '../../structureBuilder/util/getExtendedProjection'\nimport {type SortOrder} from './types'\n\ninterface ListenQueryOptions {\n  client: SanityClient\n  filter: string\n  limit: number\n  params: Record<string, unknown>\n  schema: Schema\n  searchQuery: string\n  sort: SortOrder\n  perspective?: ClientPerspective\n  staticTypeNames?: string[] | null\n  maxFieldDepth?: number\n  searchStrategy?: SearchStrategy\n}\n\nexport interface SearchQueryResult {\n  fromCache: boolean\n  documents: SanityDocumentLike[]\n}\n\nconst swr = createSWR<SanityDocumentLike[]>({maxSize: 100})\n\nexport function listenSearchQuery(options: ListenQueryOptions): Observable<SearchQueryResult> {\n  const {\n    client,\n    schema,\n    sort,\n    perspective,\n    limit,\n    params,\n    filter,\n    searchQuery,\n    staticTypeNames,\n    maxFieldDepth,\n    searchStrategy,\n  } = options\n  const sortBy = sort.by\n  const extendedProjection = sort?.extendedProjection\n\n  // Listen for changes with the given filter and params, and whenever a change occurs, we want to\n  // re-fetch the documents that match the search query (see below).\n  // We use a separate listener since the search query is too large to use in a listen query.\n  const events$ = defer(() => {\n    return client.listen(`*[${filter}]`, params, {\n      events: ['welcome', 'mutation', 'reconnect'],\n      includeAllVersions: true,\n      includeResult: false,\n      visibility: 'query',\n      tag: 'listen-search-query',\n    })\n  }).pipe(\n    mergeMap((ev, i) => {\n      const isFirst = i === 0\n      if (isFirst && ev.type !== 'welcome') {\n        // If the first event is not welcome, it is most likely a reconnect and\n        // if it's not a reconnect something is very wrong and we should throw.\n        return throwError(\n          () =>\n            new Error(\n              ev.type === 'reconnect'\n                ? 'Could not establish EventSource connection'\n                : `Received unexpected type of first event \"${ev.type}\"`,\n            ),\n        )\n      }\n      return of(ev)\n    }),\n    share(),\n  )\n\n  const [welcome$, mutationAndReconnect$] = partition(events$, (ev) => ev.type === 'welcome')\n\n  const swrKey = JSON.stringify({\n    filter,\n    limit,\n    params,\n    searchQuery,\n    perspective,\n    sort,\n    staticTypeNames,\n  })\n\n  return merge(\n    welcome$.pipe(take(1)),\n    mutationAndReconnect$.pipe(throttleTime(1000, asyncScheduler, {leading: true, trailing: true})),\n  ).pipe(\n    exhaustMapWithTrailing((event) => {\n      // Get the types names to use for searching.\n      // If we have a static list of types, we can skip fetching the types and use the static list.\n      const typeNames$ = staticTypeNames\n        ? of(staticTypeNames)\n        : client.observable.fetch(`array::unique(*[${filter}][]._type)`, params)\n\n      // Use the type names to create a search query and fetch the documents that match the query.\n      return typeNames$.pipe(\n        mergeMap((typeNames: string[]) => {\n          const types = getSearchableTypes(schema, staticTypeNames || []).filter((type) => {\n            if (typeNames.includes(type.name)) {\n              // make a call to getExtendedProjection in strict mode to verify that all fields are\n              // known. This method will throw an exception if there are any unknown fields specified\n              // in the sort by list\n              getExtendedProjection(type, sort.by, true)\n              return true\n            }\n            return false\n          })\n\n          const search = createSearch(types, client, {\n            filter,\n            params,\n            strategy: searchStrategy,\n            maxDepth: maxFieldDepth,\n          })\n\n          const doFetch = () => {\n            const searchTerms = {\n              query: searchQuery || '',\n              types,\n            }\n\n            const searchOptions: SearchOptions = {\n              __unstable_extendedProjection: extendedProjection,\n              comments: [`findability-source: ${searchQuery ? 'list-query' : 'list'}`],\n              limit,\n              skipSortByScore: true,\n              sort: sortBy,\n              perspective,\n            }\n\n            return search(searchTerms, searchOptions).pipe(\n              map((result) =>\n                // eslint-disable-next-line max-nested-callbacks\n                result.hits.map(({hit}) => hit),\n              ),\n            )\n          }\n\n          if (event.type === 'mutation' && event.visibility !== 'query') {\n            // Even though the listener request specifies visibility=query, the events are not guaranteed to be delivered with visibility=query\n            // If the event we are responding to arrives with visibility != query, we add a little delay to allow for the updated document to be available for queries\n            // See https://www.sanity.io/docs/listening#visibility-c4786e55c3ff\n            return timer(1200).pipe(mergeMap(doFetch))\n          }\n          return doFetch()\n        }),\n      )\n    }),\n    swr(swrKey),\n    map(({fromCache, value}) => ({fromCache, documents: value})),\n  )\n}\n","import {type ClientPerspective} from '@sanity/client'\nimport {observableCallback} from 'observable-callback'\nimport {useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {concat, fromEvent, merge, of} from 'rxjs'\nimport {\n  catchError,\n  filter,\n  map,\n  mergeMap,\n  scan,\n  share,\n  shareReplay,\n  take,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators'\nimport {\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  useClient,\n  useSchema,\n  useSearchMaxFieldDepth,\n  useWorkspace,\n} from 'sanity'\n\nimport {DEFAULT_ORDERING, FULL_LIST_LIMIT, PARTIAL_PAGE_LIMIT} from './constants'\nimport {findStaticTypesInFilter, removePublishedWithDrafts} from './helpers'\nimport {listenSearchQuery} from './listenSearchQuery'\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\ninterface UseDocumentListOpts {\n  apiVersion?: string\n  filter: string\n  perspective?: ClientPerspective\n  params: Record<string, unknown>\n  searchQuery: string | null\n  sortOrder?: SortOrder\n}\n\ninterface DocumentListState {\n  error: {message: string} | null\n  isLoadingFullList: boolean\n  isLoading: boolean\n  fromCache?: boolean\n  items: DocumentListPaneItem[]\n}\n\nconst INITIAL_QUERY_STATE: DocumentListState = {\n  error: null,\n  isLoading: true,\n  isLoadingFullList: false,\n  fromCache: false,\n  items: [],\n}\n\ninterface UseDocumentListHookValue extends DocumentListState {\n  onRetry: () => void\n  onLoadFullList: () => void\n}\n\n/**\n * @internal\n */\nexport function useDocumentList(opts: UseDocumentListOpts): UseDocumentListHookValue {\n  const {\n    filter: searchFilter,\n    params: paramsProp,\n    sortOrder,\n    searchQuery,\n    perspective,\n    apiVersion,\n  } = opts\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const {strategy: searchStrategy} = useWorkspace().search\n  const schema = useSchema()\n  const maxFieldDepth = useSearchMaxFieldDepth()\n\n  // Get the type name from the filter, if it is a simple type filter.\n  const typeNameFromFilter = useMemo(\n    () => findStaticTypesInFilter(searchFilter, paramsProp),\n    [searchFilter, paramsProp],\n  )\n\n  const [[onRetry$, onRetry]] = useState(() => observableCallback())\n  const [[onFetchFullList$, onLoadFullList]] = useState(() => observableCallback())\n\n  const queryResults$ = useMemo(() => {\n    const listenSearchQueryArgs = {\n      client,\n      filter: searchFilter,\n      limit: PARTIAL_PAGE_LIMIT,\n      params: paramsProp,\n      schema,\n      perspective,\n      searchQuery: searchQuery || '',\n      sort: sortOrder || DEFAULT_ORDERING,\n      staticTypeNames: typeNameFromFilter,\n      maxFieldDepth,\n      searchStrategy,\n    }\n\n    const partialList$ = listenSearchQuery(listenSearchQueryArgs).pipe(\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n\n    // we want to fetch the full list if the last result of the partial list is at the limit\n    const fullList$ = onFetchFullList$.pipe(\n      withLatestFrom(partialList$),\n      filter(([, result]) => result?.documents.length === PARTIAL_PAGE_LIMIT),\n      // we want to set up the full list listener only once\n      take(1),\n      mergeMap(() =>\n        concat(\n          of({type: 'loadFullList' as const}),\n          listenSearchQuery({...listenSearchQueryArgs, limit: FULL_LIST_LIMIT}).pipe(\n            map((result) => ({type: 'result' as const, result})),\n          ),\n        ),\n      ),\n      share(),\n    )\n\n    // The combined search results from both partial page and full list\n    return merge(\n      partialList$.pipe(\n        map((result) => ({\n          type: 'result' as const,\n          result,\n        })),\n        // when the full list listener kicks off, we want to stop the partial list listener\n        takeUntil(fullList$),\n      ),\n      fullList$,\n    ).pipe(\n      catchError((err: unknown, caught$) => {\n        return concat(\n          of({type: 'error' as const, error: safeError(err)}),\n          merge(fromEvent(window, 'online'), onRetry$).pipe(\n            take(1),\n            mergeMap(() => caught$),\n          ),\n        )\n      }),\n      scan((prev, event) => {\n        if (event.type === 'error') {\n          return {\n            ...prev,\n            error: event.error,\n          }\n        }\n        if (event.type === 'result') {\n          return {\n            ...prev,\n            error: null,\n            fromCache: event.result.fromCache,\n            isLoading: false,\n            items: removePublishedWithDrafts(event.result.documents),\n            isLoadingFullList: false,\n          }\n        }\n        if (event.type === 'loadFullList') {\n          return {\n            ...prev,\n            error: null,\n            isLoadingFullList: true,\n          }\n        }\n        throw new Error('Unexpected')\n      }, INITIAL_QUERY_STATE),\n    )\n  }, [\n    client,\n    searchFilter,\n    paramsProp,\n    schema,\n    perspective,\n    searchQuery,\n    sortOrder,\n    typeNameFromFilter,\n    maxFieldDepth,\n    searchStrategy,\n    onFetchFullList$,\n    onRetry$,\n  ])\n\n  const {error, items, isLoading, fromCache, isLoadingFullList} = useObservable(\n    queryResults$,\n    INITIAL_QUERY_STATE,\n  )\n\n  return {\n    error,\n    onRetry,\n    isLoading,\n    items,\n    fromCache,\n    onLoadFullList,\n    isLoadingFullList,\n  }\n}\n\n// todo: candidate for re-use\nconst nonErrorThrownWarning = `[WARNING: This was thrown as a non-error. Only Error instances should be thrown]`\nfunction safeError(thrown: unknown): Error {\n  if (thrown instanceof Error) {\n    return thrown\n  }\n  if (typeof thrown === 'object' && thrown !== null) {\n    if ('message' in thrown && typeof thrown.message === 'string') {\n      return new Error(`${thrown.message} ${nonErrorThrownWarning}`)\n    }\n    return new Error(`${String(thrown)} ${nonErrorThrownWarning}`)\n  }\n  return new Error(`${String(thrown)} ${nonErrorThrownWarning}`)\n}\n","import {SearchIcon, SpinnerIcon} from '@sanity/icons'\nimport {Box, TextInput} from '@sanity/ui'\nimport {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useObservableEvent} from 'react-rx'\nimport {debounce, map, type Observable, of, tap, timer} from 'rxjs'\nimport {\n  type GeneralPreviewLayoutKey,\n  useActiveReleases,\n  useI18nText,\n  usePerspective,\n  useSchema,\n  useTranslation,\n  useUnique,\n} from 'sanity'\nimport {keyframes, styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {EMPTY_RECORD, FULL_LIST_LIMIT} from './constants'\nimport {DocumentListPaneContent} from './DocumentListPaneContent'\nimport {applyOrderingFunctions, findStaticTypesInFilter} from './helpers'\nimport {useShallowUnique} from './PaneContainer'\nimport {type LoadingVariant, type SortOrder} from './types'\nimport {useDocumentList} from './useDocumentList'\n\n/**\n * @internal\n */\nexport type DocumentListPaneProps = BaseStructureToolPaneProps<'documentList'> & {\n  sortOrder?: SortOrder\n  layout?: Exclude<GeneralPreviewLayoutKey, 'sheetList'>\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 0.1;\n  }\n  100% {\n    opacity: 0.4;\n  }\n`\n\nconst AnimatedSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 500ms linear infinite;\n`\n\nconst SubtleSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 1500ms linear infinite;\n  opacity: 0.4;\n`\n\nconst DelayedSubtleSpinnerIcon = styled(SpinnerIcon)`\n  animation:\n    ${rotate} 1500ms linear infinite,\n    ${fadeIn} 1000ms linear;\n  opacity: 0.4;\n`\n\n/**\n * @internal\n */\n\nexport const DocumentListPane = memo(function DocumentListPane(props: DocumentListPaneProps) {\n  const {childItemId, isActive, pane, paneKey, sortOrder: sortOrderRaw, layout} = props\n  const schema = useSchema()\n  const releases = useActiveReleases()\n  const {perspectiveStack} = usePerspective()\n  const {displayOptions, options} = pane\n  const {apiVersion, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const showIcons = displayOptions?.showIcons !== false\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {title} = useI18nText(pane)\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [searchInputValue, setSearchInputValue] = useState<string>('')\n  const [searchInputElement, setSearchInputElement] = useState<HTMLInputElement | null>(null)\n\n  const sortWithOrderingFn =\n    typeName && sortOrderRaw\n      ? applyOrderingFunctions(sortOrderRaw, schema.get(typeName) as any)\n      : sortOrderRaw\n\n  const sortOrder = useUnique(sortWithOrderingFn)\n\n  const {\n    error,\n    isLoadingFullList,\n    isLoading: documentListIsLoading,\n    items,\n    fromCache,\n    onLoadFullList,\n    onRetry,\n  } = useDocumentList({\n    apiVersion,\n    filter,\n    perspective: perspectiveStack,\n    params,\n    searchQuery: searchQuery?.trim(),\n    sortOrder,\n  })\n\n  const isLoading = documentListIsLoading || releases.loading\n\n  const handleQueryChange = useObservableEvent(\n    (event$: Observable<React.ChangeEvent<HTMLInputElement>>) => {\n      return event$.pipe(\n        map((event) => event.target.value),\n        tap(setSearchInputValue),\n        debounce((value) => (value === '' ? of('') : timer(300))),\n        tap(setSearchQuery),\n      )\n    },\n  )\n\n  const handleClearSearch = useCallback(() => {\n    setSearchQuery('')\n    setSearchInputValue('')\n  }, [])\n\n  const handleSearchKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Escape') {\n        handleClearSearch()\n      }\n    },\n    [handleClearSearch],\n  )\n\n  const [enableSearchSpinner, setEnableSearchSpinner] = useState<string | void>()\n\n  useEffect(() => {\n    if (!enableSearchSpinner && !isLoading) {\n      setEnableSearchSpinner(paneKey)\n    }\n  }, [enableSearchSpinner, isLoading, paneKey])\n\n  useEffect(() => {\n    // Clear search field and disable search spinner\n    // when switching between panes (i.e. when paneKey changes).\n    handleClearSearch()\n    setEnableSearchSpinner()\n  }, [paneKey, handleClearSearch])\n\n  const loadingVariant: LoadingVariant = useMemo(() => {\n    if (isLoading && enableSearchSpinner === paneKey) {\n      return 'spinner'\n    }\n    if (fromCache) {\n      return 'subtle'\n    }\n\n    return 'initial'\n  }, [enableSearchSpinner, fromCache, isLoading, paneKey])\n\n  const textInputIcon = useMemo(() => {\n    if (loadingVariant === 'spinner') {\n      return AnimatedSpinnerIcon\n    }\n    if (searchInputValue && loadingVariant === 'subtle') {\n      return SubtleSpinnerIcon\n    }\n    return SearchIcon\n  }, [loadingVariant, searchInputValue])\n\n  return (\n    <>\n      <Box paddingX={3} paddingBottom={3}>\n        <TextInput\n          aria-label={t('panes.document-list-pane.search-input.aria-label')}\n          autoComplete=\"off\"\n          border={false}\n          clearButton={Boolean(searchQuery)}\n          disabled={Boolean(error)}\n          fontSize={[2, 2, 1]}\n          icon={textInputIcon}\n          iconRight={\n            loadingVariant === 'subtle' && !searchInputValue ? DelayedSubtleSpinnerIcon : null\n          }\n          onChange={handleQueryChange}\n          onClear={handleClearSearch}\n          onKeyDown={handleSearchKeyDown}\n          padding={2}\n          placeholder={t('panes.document-list-pane.search-input.placeholder')}\n          radius={2}\n          ref={setSearchInputElement}\n          spellCheck={false}\n          value={searchInputValue}\n        />\n      </Box>\n      <DocumentListPaneContent\n        childItemId={childItemId}\n        error={error}\n        filterIsSimpleTypeConstraint={!!typeName}\n        hasMaxItems={items.length === FULL_LIST_LIMIT}\n        hasSearchQuery={Boolean(searchQuery)}\n        isActive={isActive}\n        isLazyLoading={isLoadingFullList}\n        isLoading={isLoading}\n        items={items}\n        key={paneKey}\n        layout={layout}\n        loadingVariant={loadingVariant}\n        onEndReached={onLoadFullList}\n        onRetry={onRetry}\n        paneTitle={title}\n        searchInputElement={searchInputElement}\n        showIcons={showIcons}\n      />\n    </>\n  )\n})\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, type ReactNode, useMemo} from 'react'\nimport {type GeneralPreviewLayoutKey, type InitialValueTemplateItem} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../ui-components'\nimport {\n  BackLink,\n  PaneHeader as StructurePaneHeader,\n  PaneHeaderActions,\n  usePane,\n} from '../../components'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {type SortOrder} from './types'\n\ninterface PaneHeaderProps {\n  contentAfter?: ReactNode\n  index: number\n  initialValueTemplates?: InitialValueTemplateItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  menuItems?: PaneMenuItem[]\n  setLayout: (layout: GeneralPreviewLayoutKey) => void\n  setSortOrder: (sortOrder: SortOrder) => void\n  title: string\n}\n\nexport const PaneHeader = memo(\n  ({\n    contentAfter,\n    index,\n    initialValueTemplates = [],\n    menuItemGroups = [],\n    menuItems = [],\n    setLayout,\n    setSortOrder,\n    title,\n  }: PaneHeaderProps) => {\n    const {features} = useStructureTool()\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    const actionHandlers = useMemo((): Record<string, StructureToolPaneActionHandler> => {\n      return {\n        setLayout: ({layout: value}: {layout: GeneralPreviewLayoutKey}) => {\n          setLayout(value)\n        },\n        setSortOrder: (sort: SortOrder) => {\n          setSortOrder(sort)\n        },\n      }\n    }, [setLayout, setSortOrder])\n\n    return (\n      <TooltipDelayGroupProvider>\n        <StructurePaneHeader\n          actions={\n            <PaneHeaderActions\n              initialValueTemplateItems={initialValueTemplates}\n              actionHandlers={actionHandlers}\n              menuItemGroups={menuItemGroups}\n              menuItems={menuItems}\n            />\n          }\n          backButton={\n            features.backButton &&\n            index > 0 && (\n              <Button\n                as={BackLink}\n                data-as=\"a\"\n                icon={ArrowLeftIcon}\n                mode=\"bleed\"\n                tooltipProps={{content: 'Back'}}\n              />\n            )\n          }\n          contentAfter={contentAfter}\n          tabIndex={tabIndex}\n          title={title}\n        />\n      </TooltipDelayGroupProvider>\n    )\n  },\n)\n\nPaneHeader.displayName = 'Memo(PaneHeader)'\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {type SanityDocument} from '@sanity/client'\nimport {Checkbox} from '@sanity/ui'\nimport {type CellContext} from '@tanstack/react-table'\nimport {type MouseEvent, useCallback} from 'react'\n\nexport function DocumentSheetListSelect(props: CellContext<SanityDocument, unknown>) {\n  const {row, table} = props\n\n  const {selectedAnchor, setSelectedAnchor} = table.options.meta || {}\n\n  const handleOnClick = useCallback(\n    (e: MouseEvent<HTMLInputElement>) => {\n      if (e.shiftKey && selectedAnchor !== null && selectedAnchor !== undefined) {\n        const shiftClickIndex = row.index\n        const lowerIndex = shiftClickIndex < selectedAnchor ? shiftClickIndex : selectedAnchor\n        const upperIndex = shiftClickIndex < selectedAnchor ? selectedAnchor : shiftClickIndex\n\n        const additionalSelectedRows = table\n          .getRowModel()\n          .flatRows.slice(lowerIndex, upperIndex + 1)\n          .map(({id}) => id)\n\n        const currentSelectedRows = table.getSelectedRowModel().rows.map(({id}) => id)\n        table.setRowSelection(() =>\n          [...additionalSelectedRows, ...currentSelectedRows].reduce(\n            (nextSelectedRows, rowId) => ({...nextSelectedRows, [rowId]: true}),\n            {},\n          ),\n        )\n      } else if (setSelectedAnchor) {\n        const isRowCurrentlySelected = row.getIsSelected()\n        if (isRowCurrentlySelected) {\n          // about to unselect so invalidate current anchor\n          setSelectedAnchor(null)\n        } else {\n          // override anchor with new selection index\n          setSelectedAnchor(row.index)\n        }\n\n        row.toggleSelected()\n      }\n    },\n    [selectedAnchor, row, setSelectedAnchor, table],\n  )\n\n  return (\n    <Checkbox\n      style={{paddingLeft: 4}}\n      checked={props.row.getIsSelected()}\n      disabled={!props.row.getCanSelect()}\n      // onChange doesn't have shiftKey in event, but want to control this checkbox\n      // need to define noop onChange to suppress the warning\n      // eslint-disable-next-line react/jsx-no-bind\n      onChange={() => null}\n      onClick={handleOnClick}\n    />\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {type Table} from '@tanstack/react-table'\nimport {type ReactNode, useCallback, useContext, useEffect, useMemo, useState} from 'react'\nimport {DocumentSheetListContext} from 'sanity/_singletons'\n\ninterface DocumentSheetListProviderProps {\n  children?: ReactNode\n  table: Table<SanityDocument>\n}\n\ntype SelectedCellDetails = {\n  colId: string\n  rowIndex: number\n  state: 'focused' | 'selected'\n} | null\n\n/** @internal */\nexport interface DocumentSheetListContextValue {\n  focusAnchorCell: () => void\n  resetFocusSelection: () => void\n  setSelectedAnchorCell: (colId: string, rowIndex: number) => void\n  getStateByCellId: (\n    colId: string,\n    rowIndex: number,\n  ) => 'focused' | 'selectedAnchor' | 'selectedRange' | null\n  submitFocusedCell: () => void\n}\n\n/** @internal */\nexport const useDocumentSheetListContext = (): DocumentSheetListContextValue => {\n  const context = useContext(DocumentSheetListContext)\n\n  if (context === undefined) {\n    throw new Error('useDocumentSheetListContext must be used within an DocumentSheetListProvider')\n  }\n  return context\n}\n\n/** @internal */\nexport function DocumentSheetListProvider({\n  children,\n  table,\n}: DocumentSheetListProviderProps): ReactNode {\n  const [selectedAnchorCellDetails, setSelectedAnchorCellDetails] =\n    useState<SelectedCellDetails>(null)\n  const [selectedRangeCellIndexes, setSelectedRangeCellIndexes] = useState<number[]>([])\n\n  const clearAndSetFocusSelection = useCallback(\n    (nextAnchorDetails: SelectedCellDetails = null) => {\n      if (\n        selectedAnchorCellDetails?.state === 'focused' &&\n        document.activeElement instanceof HTMLElement\n      ) {\n        document.activeElement.blur()\n      }\n\n      setSelectedAnchorCellDetails(nextAnchorDetails)\n      setSelectedRangeCellIndexes([])\n    },\n    [selectedAnchorCellDetails],\n  )\n\n  const resetFocusSelection = useCallback(\n    () => clearAndSetFocusSelection(),\n    [clearAndSetFocusSelection],\n  )\n\n  const changeSelectionColumn = useCallback(\n    (direction: 'left' | 'right') => {\n      if (!selectedAnchorCellDetails) return\n\n      const visibleColumns = table.getVisibleLeafColumns()\n      const columnIndexAfterMove =\n        visibleColumns.findIndex((col) => col.id === selectedAnchorCellDetails.colId) +\n        (direction === 'left' ? -1 : 1)\n\n      if (columnIndexAfterMove < 0 || columnIndexAfterMove >= visibleColumns.length) return\n\n      clearAndSetFocusSelection({\n        colId: visibleColumns[columnIndexAfterMove].id,\n        rowIndex: selectedAnchorCellDetails.rowIndex,\n        state: 'selected',\n      })\n    },\n    [clearAndSetFocusSelection, selectedAnchorCellDetails, table],\n  )\n\n  const changeSelectionRange = useCallback(\n    (direction: 'up' | 'down') => {\n      if (!selectedAnchorCellDetails) return\n\n      setSelectedRangeCellIndexes((previousSelection) => {\n        const {rowIndex: anchorIndex} = selectedAnchorCellDetails\n        const getNextIndex = (startingIndex: number) =>\n          startingIndex + (direction === 'down' ? 1 : -1)\n        // if no cells are selected, select the cell in the direction\n        if (!previousSelection.length) {\n          const firstSelectedIndex = getNextIndex(anchorIndex)\n          if (firstSelectedIndex < 0) return []\n          return [firstSelectedIndex]\n        }\n        const lastIndexSelected = previousSelection[previousSelection.length - 1]\n        const nextIndex = getNextIndex(lastIndexSelected)\n\n        // if the cell in the direction is out of bounds, return the previous selection\n        if (nextIndex < 0) return previousSelection\n\n        // if the cell in the direction is the same as the focused cell, deselect all cells\n        if (nextIndex === anchorIndex) return []\n\n        // if the cell in the direction is already selected, deselect the last selected cell\n        if (previousSelection.includes(nextIndex)) {\n          return previousSelection.slice(0, -1)\n        }\n\n        return [...previousSelection, nextIndex]\n      })\n    },\n    [selectedAnchorCellDetails],\n  )\n\n  const setSelectedAnchorCell = useCallback(\n    (colId: string, rowIndex: number) => {\n      clearAndSetFocusSelection({colId, rowIndex, state: 'selected'})\n    },\n    [clearAndSetFocusSelection],\n  )\n\n  const handleEscapePress = useCallback(() => {\n    if (!selectedAnchorCellDetails) return\n    if (selectedRangeCellIndexes.length) {\n      // only clear selected range if it exists\n      setSelectedRangeCellIndexes([])\n    } else {\n      const nextAnchorCellDetails: SelectedCellDetails =\n        selectedAnchorCellDetails.state === 'selected'\n          ? null\n          : {\n              ...selectedAnchorCellDetails,\n              state: 'selected',\n            }\n      clearAndSetFocusSelection(nextAnchorCellDetails)\n    }\n  }, [clearAndSetFocusSelection, selectedAnchorCellDetails, selectedRangeCellIndexes.length])\n\n  const handleUpDownKey = useCallback(\n    (isShiftKey: boolean, key: string) => {\n      if (!selectedAnchorCellDetails) return\n\n      const direction = key === 'ArrowDown' ? 'down' : 'up'\n      const offset = direction === 'down' ? 1 : -1\n\n      if (isShiftKey) {\n        changeSelectionRange(direction)\n      } else {\n        const newSelectedCellRowIndex = selectedAnchorCellDetails.rowIndex + offset\n        if (newSelectedCellRowIndex < 0) return\n\n        setSelectedAnchorCell(selectedAnchorCellDetails.colId, newSelectedCellRowIndex)\n      }\n    },\n    [changeSelectionRange, selectedAnchorCellDetails, setSelectedAnchorCell],\n  )\n\n  const handleAnchorKeydown = useCallback(\n    (event: KeyboardEvent) => {\n      if (!selectedAnchorCellDetails) return\n\n      const {key, shiftKey} = event\n\n      switch (key) {\n        case 'Shift':\n          break // shift allow should do nothing\n\n        case 'Escape':\n          handleEscapePress()\n          break\n\n        case 'ArrowDown':\n        case 'ArrowUp':\n          event.preventDefault()\n          handleUpDownKey(shiftKey, key)\n          break\n\n        case 'ArrowLeft':\n        case 'ArrowRight':\n          // when cell is focused, arrows should have default behavior\n          // only prevent default when cell is selected\n          if (selectedAnchorCellDetails.state === 'selected') {\n            event.preventDefault()\n            changeSelectionColumn(key === 'ArrowLeft' ? 'left' : 'right')\n          }\n          break\n\n        default:\n          break\n      }\n    },\n    [selectedAnchorCellDetails, handleEscapePress, handleUpDownKey, changeSelectionColumn],\n  )\n\n  const handleAnchorClick = useCallback(\n    (event: MouseEvent) => {\n      if (!selectedAnchorCellDetails) return\n      const isClickInAnchorCell = document\n        .getElementById(\n          `cell-${selectedAnchorCellDetails.colId}-${selectedAnchorCellDetails.rowIndex}`,\n        )\n        ?.contains(event.target as Node)\n\n      if (!isClickInAnchorCell) resetFocusSelection()\n    },\n    [resetFocusSelection, selectedAnchorCellDetails],\n  )\n\n  useEffect(() => {\n    if (selectedAnchorCellDetails) {\n      document.addEventListener('keydown', handleAnchorKeydown)\n      document.addEventListener('click', handleAnchorClick)\n    }\n\n    return () => {\n      if (selectedAnchorCellDetails) {\n        document.removeEventListener('keydown', handleAnchorKeydown)\n        document.removeEventListener('click', handleAnchorClick)\n      }\n    }\n  }, [handleAnchorClick, handleAnchorKeydown, selectedAnchorCellDetails])\n\n  const focusAnchorCell = useCallback(\n    () =>\n      setSelectedAnchorCellDetails((anchorCellDetails) => {\n        if (!anchorCellDetails) return null\n\n        return {...anchorCellDetails, state: 'focused'}\n      }),\n    [],\n  )\n\n  const getStateByCellId = useCallback(\n    (colId: string, rowIndex: number) => {\n      if (selectedAnchorCellDetails?.colId !== colId) return null\n\n      if (selectedAnchorCellDetails.rowIndex === rowIndex)\n        return selectedAnchorCellDetails.state === 'focused' ? 'focused' : 'selectedAnchor'\n\n      if (selectedRangeCellIndexes.includes(rowIndex)) return 'selectedRange'\n\n      return null\n    },\n    [selectedAnchorCellDetails, selectedRangeCellIndexes],\n  )\n\n  const submitFocusedCell = useCallback(() => {\n    if (!selectedAnchorCellDetails) return\n\n    clearAndSetFocusSelection({\n      colId: selectedAnchorCellDetails.colId,\n      rowIndex: selectedAnchorCellDetails.rowIndex + 1,\n      state: 'selected',\n    })\n  }, [clearAndSetFocusSelection, selectedAnchorCellDetails])\n\n  const value = useMemo<DocumentSheetListContextValue>(\n    () => ({\n      focusAnchorCell,\n      resetFocusSelection,\n      setSelectedAnchorCell,\n      getStateByCellId,\n      submitFocusedCell,\n    }),\n    [\n      focusAnchorCell,\n      resetFocusSelection,\n      setSelectedAnchorCell,\n      getStateByCellId,\n      submitFocusedCell,\n    ],\n  )\n\n  return (\n    <DocumentSheetListContext.Provider value={value}>{children}</DocumentSheetListContext.Provider>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\n/* eslint-disable i18next/no-literal-string */\nimport {type ObjectFieldType} from '@sanity/types'\nimport {Select, TextInput} from '@sanity/ui'\nimport {type Cell, type CellContext, flexRender} from '@tanstack/react-table'\nimport {type MouseEventHandler, useCallback, useEffect, useRef, useState} from 'react'\nimport {type SanityDocument} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {useDocumentSheetListContext} from './DocumentSheetListProvider'\n\nconst DataCell = styled.td<{width: number}>`\n  display: flex;\n  overflow: hidden;\n  box-sizing: border-box;\n  width: ${({width}) => width}px;\n  border-top: 1px solid var(--card-border-color);\n  background-color: var(--card-bg-color);\n`\n\nconst PinnedDataCell = styled(DataCell)`\n  position: sticky;\n  z-index: 2;\n`\n\ninterface SheetListCellInnerProps extends CellContext<SanityDocument, unknown> {\n  fieldType: ObjectFieldType\n}\n\ntype CellInputElement = HTMLInputElement | HTMLSelectElement\ntype InputRef = CellInputElement | null\n\n/** @internal */\nexport function SheetListCellInner(props: SheetListCellInnerProps) {\n  const {getValue, column, row, fieldType} = props\n  const cellId = `cell-${column.id}-${row.index}`\n  const [renderValue, setRenderValue] = useState<string>(getValue() as string)\n  const [isDirty, setIsDirty] = useState(false)\n  const inputRef = useRef<InputRef>(null)\n  const {\n    focusAnchorCell,\n    resetFocusSelection,\n    setSelectedAnchorCell,\n    getStateByCellId,\n    submitFocusedCell,\n  } = useDocumentSheetListContext()\n  const cellState = getStateByCellId(column.id, row.index)\n\n  const handleOnFocus = useCallback(() => {\n    // reselect in cases where focus achieved without initial mousedown\n    setSelectedAnchorCell(column.id, row.index)\n    focusAnchorCell()\n  }, [column.id, focusAnchorCell, row.index, setSelectedAnchorCell])\n  const {patchDocument} = props.table.options.meta || {}\n\n  const handleProgrammaticFocus = () => {\n    inputRef.current?.focus()\n    if (inputRef.current instanceof HTMLInputElement) {\n      inputRef.current.select()\n    }\n  }\n\n  const handleOnMouseDown: MouseEventHandler<CellInputElement> = (event) => {\n    if (event.detail === 2) {\n      handleProgrammaticFocus()\n    } else {\n      event.preventDefault()\n      setSelectedAnchorCell(column.id, row.index)\n    }\n  }\n\n  const handleOnEnterDown = useCallback(\n    (event: KeyboardEvent) => {\n      const {key} = event\n      if (key === 'Enter') {\n        if (cellState === 'selectedAnchor') handleProgrammaticFocus()\n        if (cellState === 'focused') submitFocusedCell()\n      }\n    },\n    [cellState, submitFocusedCell],\n  )\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsDirty(true)\n    setRenderValue(event.target.value)\n  }\n\n  const handleOnBlur = () => {\n    if (isDirty) {\n      patchDocument?.(row.id, column.id, renderValue)\n      setIsDirty(false)\n    }\n    resetFocusSelection()\n  }\n\n  const handlePaste = useCallback(\n    (event: ClipboardEvent) => {\n      const clipboardData = event.clipboardData?.getData('Text')\n\n      if (typeof clipboardData === 'string' || typeof clipboardData === 'number') {\n        setRenderValue(clipboardData)\n        // patch immediately when pasting\n        patchDocument?.(row.id, column.id, clipboardData)\n      }\n    },\n    [column.id, patchDocument, row.id],\n  )\n\n  const handleCopy = useCallback(() => {\n    navigator.clipboard.writeText(renderValue.toString())\n  }, [renderValue])\n\n  useEffect(() => {\n    if (cellState === 'selectedAnchor' || cellState === 'focused')\n      // only listen for enter key when cell is focused or anchor\n      document.addEventListener('keydown', handleOnEnterDown)\n    if (cellState === 'selectedAnchor' || cellState === 'selectedRange')\n      // if cell is selected, paste events should be handled\n      document.addEventListener('paste', handlePaste)\n\n    if (cellState === 'selectedAnchor')\n      // only allow copying when cell is selected anchor\n      document.addEventListener('copy', handleCopy)\n\n    return () => {\n      if (cellState === 'selectedAnchor' || cellState === 'focused')\n        document.removeEventListener('keydown', handleOnEnterDown)\n      if (cellState === 'selectedAnchor' || cellState === 'selectedRange')\n        document.removeEventListener('paste', handlePaste)\n      if (cellState === 'selectedAnchor') document.removeEventListener('copy', handleCopy)\n    }\n  }, [\n    cellId,\n    cellState,\n    column.id,\n    getStateByCellId,\n    handleCopy,\n    handleOnEnterDown,\n    handlePaste,\n    row.index,\n  ])\n\n  const getBorderStyle = () => {\n    if (cellState === 'focused') return '2px solid blue'\n    if (cellState === 'selectedRange') return '1px solid green'\n    if (cellState === 'selectedAnchor') return '1px solid blue'\n\n    return '1px solid transparent'\n  }\n\n  const inputProps = {\n    'onFocus': handleOnFocus,\n    'onBlur': handleOnBlur,\n    'onMouseDown': handleOnMouseDown,\n    'aria-selected': !!cellState,\n    'data-testid': cellId,\n    'id': cellId,\n    'ref': (ref: InputRef) => {\n      inputRef.current = ref\n    },\n  }\n\n  if (fieldType.name === 'boolean') {\n    return (\n      <Select\n        {...inputProps}\n        onChange={() => null}\n        radius={0}\n        style={{\n          boxShadow: 'none',\n          border: getBorderStyle(),\n          padding: 0,\n        }}\n        value={JSON.stringify(renderValue)}\n      >\n        <option value=\"True\">True</option>\n        <option value=\"False\">False</option>\n      </Select>\n    )\n  }\n\n  return (\n    <TextInput\n      {...inputProps}\n      size={0}\n      radius={0}\n      border={false}\n      style={{\n        border: getBorderStyle(),\n        padding: '22px 16px',\n      }}\n      value={\n        typeof renderValue === 'string' || typeof renderValue === 'number'\n          ? renderValue\n          : JSON.stringify(renderValue)\n      }\n      onChange={handleOnChange}\n    />\n  )\n}\n\n/** @internal */\nexport function SheetListCell(cell: Cell<SanityDocument, unknown>) {\n  const isPinned = cell.column.getIsPinned()\n  const Cell = isPinned ? PinnedDataCell : DataCell\n  const borderWidth = isPinned && cell.column.getIsLastColumn('left') ? 2 : 1\n\n  return (\n    <Cell\n      key={cell.row.original._id + cell.id}\n      style={{\n        left: cell.column.getStart('left') ?? undefined,\n        borderRight: `${borderWidth}px solid var(--card-border-color)`,\n      }}\n      width={cell.column.getSize()}\n    >\n      {flexRender(cell.column.columnDef.cell, cell.getContext?.())}\n    </Cell>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {isObjectSchemaType, type ObjectSchemaType} from '@sanity/types'\nimport {Box, Checkbox, Flex, Text} from '@sanity/ui'\nimport {\n  type AccessorKeyColumnDef,\n  createColumnHelper,\n  type GroupColumnDef,\n  type VisibilityState,\n} from '@tanstack/react-table'\nimport {useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  type DocumentPreviewStore,\n  DocumentStatusIndicator,\n  getPreviewStateObservable,\n  type SanityDocument,\n  type SchemaType,\n  useDocumentPreviewStore,\n  useDocumentVersionInfo,\n} from 'sanity'\n\nimport {DocumentSheetListSelect} from './DocumentSheetListSelect'\nimport {SheetListCellInner} from './SheetListCell'\n\nexport const VISIBLE_COLUMN_LIMIT = 5\n\nconst PreviewCell = (props: {\n  documentPreviewStore: DocumentPreviewStore\n  schemaType: SchemaType\n  row: {\n    original: SanityDocument\n  }\n}) => {\n  const {documentPreviewStore, row, schemaType} = props\n  const previewStateObservable = useMemo(\n    () => getPreviewStateObservable(documentPreviewStore, schemaType, row.original._id),\n    [documentPreviewStore, row.original._id, schemaType],\n  )\n\n  const versionsInfo = useDocumentVersionInfo(row.original._id)\n\n  const {snapshot, isLoading} = useObservable(previewStateObservable, {\n    snapshot: null,\n    isLoading: true,\n  })\n  if (isLoading) {\n    return (\n      <Text size={1} muted>\n        Loading...\n      </Text>\n    )\n  }\n  const displayValue = (snapshot?.title ?? 'Untitled') as string\n\n  return (\n    <Flex align=\"center\" gap={3}>\n      <DocumentStatusIndicator\n        draft={versionsInfo.draft}\n        published={versionsInfo.published}\n        versions={undefined}\n      />\n      <Text size={1}>{displayValue}</Text>\n    </Flex>\n  )\n}\n\nconst columnHelper = createColumnHelper<SanityDocument>()\nconst SUPPORTED_FIELDS = ['string', 'number', 'boolean']\n\ntype Columns = (\n  | AccessorKeyColumnDef<SanityDocument, unknown>\n  | GroupColumnDef<SanityDocument, unknown>\n)[]\n\nconst getColsFromSchemaType = (schemaType: ObjectSchemaType, parentalField?: string): Columns => {\n  return schemaType.fields.reduce<Columns>((tableColumns: Columns, field) => {\n    const {type, name} = field\n    if (SUPPORTED_FIELDS.includes(type.name)) {\n      const nextCol = columnHelper.accessor(\n        // accessor must use dot notation for internal tanstack method of reading cell data\n        parentalField ? `${parentalField}.${field.name}` : field.name,\n        {\n          id: parentalField ? `${parentalField}_${field.name}` : field.name,\n          header: field.type.title,\n          enableHiding: true,\n          cell: (info) => <SheetListCellInner {...info} fieldType={type} />,\n        },\n      )\n\n      return [...tableColumns, nextCol]\n    }\n\n    // if first layer nested object\n    if (type.name === 'object' && isObjectSchemaType(type) && !parentalField) {\n      return [\n        ...tableColumns,\n        columnHelper.group({header: name, columns: getColsFromSchemaType(type, field.name)}),\n      ]\n    }\n\n    return tableColumns\n  }, [])\n}\n\n// Type guard function to check if a column is of type GroupColumnDef\nfunction isAccessorKeyColumnDef(\n  column: Columns[number],\n): column is AccessorKeyColumnDef<SanityDocument, unknown> {\n  return 'accessorKey' in column\n}\nfunction isGroupColumnDef(\n  column: AccessorKeyColumnDef<SanityDocument, unknown> | GroupColumnDef<SanityDocument, unknown>,\n): column is GroupColumnDef<SanityDocument, unknown> {\n  return 'columns' in column\n}\n\nconst flatColumns = (cols: Columns): AccessorKeyColumnDef<SanityDocument, unknown>[] => {\n  return cols.flatMap((col) => {\n    if (isAccessorKeyColumnDef(col)) {\n      return col\n    }\n    if (isGroupColumnDef(col)) {\n      return col.columns ? flatColumns(col.columns) : []\n    }\n    return []\n  })\n}\n\nexport function useDocumentSheetColumns(documentSchemaType?: ObjectSchemaType) {\n  const documentPreviewStore = useDocumentPreviewStore()\n\n  const columns: Columns = useMemo(() => {\n    if (!documentSchemaType) {\n      return []\n    }\n    return [\n      columnHelper.display({\n        id: 'selected',\n        enableHiding: false,\n        header: (info) => (\n          <Box>\n            <Checkbox\n              style={{paddingLeft: 4}}\n              indeterminate={info.table.getIsSomeRowsSelected()}\n              onChange={info.table.getToggleAllPageRowsSelectedHandler()}\n            />\n            {/* eslint-disable-next-line i18next/no-literal-string */}\n            {info.table.getSelectedRowModel().rows.length} selected\n          </Box>\n        ),\n        cell: DocumentSheetListSelect,\n      }),\n      columnHelper.accessor('Preview', {\n        enableHiding: false,\n        id: 'Preview',\n        cell: (info) => {\n          return (\n            <PreviewCell\n              {...info}\n              documentPreviewStore={documentPreviewStore}\n              schemaType={documentSchemaType}\n            />\n          )\n        },\n      }),\n      ...getColsFromSchemaType(documentSchemaType),\n    ]\n  }, [documentPreviewStore, documentSchemaType])\n\n  const [initialColumnsVisibility]: [VisibilityState, number] = useMemo(\n    () =>\n      flatColumns(columns).reduce<[VisibilityState, number]>(\n        ([accCols, countAllowedVisible], column) => {\n          if (!column.id) throw new Error('Column must have an id')\n          const visibilityKey = column.id\n\n          // this column is always visible\n          if (!column.enableHiding) {\n            return [{...accCols, [visibilityKey]: true}, countAllowedVisible]\n          }\n\n          // have already reached column visibility limit, hide column by default\n          if (countAllowedVisible === VISIBLE_COLUMN_LIMIT) {\n            return [{...accCols, [visibilityKey]: false}, countAllowedVisible]\n          }\n\n          return [{...accCols, [visibilityKey]: true}, countAllowedVisible + 1]\n        },\n        [{}, 0],\n      ),\n    [columns],\n  )\n\n  return {columns, initialColumnsVisibility}\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {Box, Checkbox, Flex, Menu, Stack, Text} from '@sanity/ui'\nimport {type Column, type Table} from '@tanstack/react-table'\nimport {useCallback} from 'react'\nimport {type SanityDocument, useTranslation} from 'sanity'\n\nimport {Button, MenuButton} from '../../../../ui-components'\nimport {VISIBLE_COLUMN_LIMIT} from './useDocumentSheetColumns'\n\ntype ColumnsControlProps = {\n  table: Table<SanityDocument>\n}\n\nexport function ColumnsControl({table}: ColumnsControlProps) {\n  const {t} = useTranslation()\n  const isVisibleLimitReached =\n    table.getVisibleLeafColumns().filter((col) => col.getCanHide()).length >= VISIBLE_COLUMN_LIMIT\n\n  const setInitialColumns = useCallback(() => {\n    table.resetColumnVisibility()\n  }, [table])\n\n  const handleColumnOnChange = (column: Column<SanityDocument, unknown>) => () => {\n    column.toggleVisibility()\n  }\n\n  const getColumnVisibilityDisabled = (column: Column<SanityDocument, unknown>) => {\n    const isColumnVisible = column.getIsVisible()\n    const isSingleColumnVisible =\n      table.getVisibleLeafColumns().filter((col) => col.getCanHide()).length === 1\n\n    return (isVisibleLimitReached && !isColumnVisible) || (isSingleColumnVisible && isColumnVisible)\n  }\n\n  return (\n    <MenuButton\n      button={<Button mode=\"bleed\" text={t('sheet-list.edit-columns')} />}\n      id=\"columns-control\"\n      menu={\n        <Menu padding={3} paddingTop={4} style={{width: 240}}>\n          <Flex direction=\"column\" height=\"fill\" gap={3}>\n            <Text weight=\"semibold\" size={1}>\n              {t('sheet-list.select-fields')}\n            </Text>\n            <Flex style={{flex: '1 1 auto', maxHeight: 320, overflowY: 'scroll'}}>\n              <Stack>\n                {table\n                  .getAllLeafColumns()\n                  .filter((column) => column.getCanHide())\n                  .map((column) => (\n                    <Flex key={column.id} marginY={2} align=\"center\">\n                      <Checkbox\n                        readOnly={getColumnVisibilityDisabled(column)}\n                        checked={column.getIsVisible()}\n                        onChange={handleColumnOnChange(column)}\n                        id={`col-visibility-${column.id}`}\n                        style={{display: 'block'}}\n                      />\n                      <Box flex={1} paddingLeft={3}>\n                        <Text size={1}>\n                          <label htmlFor={`col-visibility-${column.id}`}>\n                            {column.columnDef.header?.toString()}\n                          </label>\n                        </Text>\n                      </Box>\n                    </Flex>\n                  ))}\n              </Stack>\n            </Flex>\n            <Button\n              width=\"fill\"\n              mode=\"ghost\"\n              text={t('sheet-list.reset-columns')}\n              onClick={setInitialColumns}\n            />\n          </Flex>\n        </Menu>\n      }\n      placement=\"bottom\"\n      popover={{portal: true}}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {Filters, SearchHeader, useSearchState} from 'sanity'\nimport {styled} from 'styled-components'\n\nconst SearchContainer = styled(Flex)`\n  flex-shrink: 0;\n`\n\nexport function DocumentSheetListFilter() {\n  const {\n    state: {filtersVisible},\n  } = useSearchState()\n\n  return (\n    <SearchContainer>\n      <SearchHeader />\n      {filtersVisible && <Filters showTypeFilter={false} />}\n    </SearchContainer>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {CloseIcon, EllipsisHorizontalIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {Box, Flex, Menu, Text} from '@sanity/ui'\nimport {flexRender, type Header as HeaderType, type HeaderGroup} from '@tanstack/react-table'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../../../ui-components'\n\nconst Header = styled.th<{width: number}>`\n  margin: 16px;\n  z-index: 1;\n  padding: 22px 0px;\n  border-top: 1px solid var(--card-border-color);\n  background-color: var(--card-badge-default-bg-color);\n  box-sizing: border-box;\n  text-align: left;\n  width: ${({width}) => width}px;\n  max-width: ${({width}) => width}px;\n`\n\nconst PinnedHeader = styled(Header)`\n  position: sticky;\n  z-index: 2;\n`\n\nconst HoverMenu = styled.div`\n  visibility: hidden;\n\n  ${Header}:hover & {\n    visibility: visible;\n  }\n`\n\ntype DocumentSheetListHeaderProps = {\n  header: HeaderType<SanityDocument, unknown>\n  headerGroup: HeaderGroup<SanityDocument>\n}\n\nexport function DocumentSheetListHeader(props: DocumentSheetListHeaderProps) {\n  const {header, headerGroup} = props\n  const {t} = useTranslation()\n\n  const isPinned = header.column.getIsPinned()\n\n  const headerTitle =\n    headerGroup.depth > 0 && !header.column.parent ? null : (\n      <Text size={1} weight=\"semibold\" textOverflow=\"ellipsis\">\n        {flexRender(header.column.columnDef.header, header.getContext())}\n      </Text>\n    )\n\n  const HeaderTag = isPinned ? PinnedHeader : Header\n\n  const canShowHeaderMenu =\n    header.column.getCanHide() &&\n    (headerGroup.depth === 0 ? !header.column.columns.length : header.column.parent)\n\n  const borderWidth = isPinned && header.column.getIsLastColumn('left') ? 2 : 1\n\n  return (\n    <HeaderTag\n      style={{\n        left: header.column.getStart('left') ?? undefined,\n        borderRight: `${borderWidth}px solid var(--card-border-color)`,\n      }}\n      key={header.id}\n      data-testid={`header-${header.id}`}\n      width={header.getSize()}\n    >\n      <Flex justify=\"space-between\" marginX={2} align=\"baseline\">\n        <Tooltip delay={500} content={headerTitle}>\n          <Box style={{boxSizing: 'border-box'}} marginLeft={3} marginRight={3}>\n            {headerTitle}\n          </Box>\n        </Tooltip>\n        {canShowHeaderMenu && (\n          <HoverMenu>\n            <MenuButton\n              button={\n                <Button\n                  tooltipProps={{content: 'Open field menu'}}\n                  mode=\"bleed\"\n                  icon={EllipsisHorizontalIcon}\n                  data-testid=\"field-menu-button\"\n                />\n              }\n              id=\"field menu\"\n              popover={{placement: 'bottom-end'}}\n              menu={\n                <Menu>\n                  <MenuItem\n                    text={t('sheet-list.hide-field')}\n                    icon={CloseIcon}\n                    onClick={() => header.column.toggleVisibility()}\n                  />\n                </Menu>\n              }\n            />\n          </HoverMenu>\n        )}\n      </Flex>\n    </HeaderTag>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\n/* eslint-disable i18next/no-literal-string */\n/* eslint-disable @sanity/i18n/no-attribute-string-literals */\n/* eslint-disable react/jsx-no-bind */\nimport {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  DoubleChevronLeftIcon,\n  DoubleChevronRightIcon,\n} from '@sanity/icons'\nimport {Flex, Text} from '@sanity/ui'\nimport {type Table} from '@tanstack/react-table'\nimport {type SanityDocument} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../ui-components'\n\nexport function DocumentSheetListPaginator({table}: {table: Table<SanityDocument>}) {\n  return (\n    <TooltipDelayGroupProvider>\n      <Flex gap={3} align={'center'}>\n        <Button\n          onClick={() => table.setPageIndex(0)}\n          disabled={!table.getCanPreviousPage()}\n          icon={DoubleChevronLeftIcon}\n          tooltipProps={{\n            content: 'Go to first page',\n          }}\n        />\n        <Button\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n          icon={ChevronLeftIcon}\n          tooltipProps={{\n            content: 'Go to previous page',\n          }}\n        />\n        <Text style={{whiteSpace: 'nowrap'}}>\n          {table.getState().pagination.pageIndex + 1} of {table.getPageCount()}\n        </Text>\n\n        <Button\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n          icon={ChevronRightIcon}\n          tooltipProps={{\n            content: 'Go to next page',\n          }}\n        />\n        <Button\n          onClick={() => table.setPageIndex(table.getPageCount() - 1)}\n          disabled={!table.getCanNextPage()}\n          icon={DoubleChevronRightIcon}\n          tooltipProps={{\n            content: 'Go to last page',\n          }}\n        />\n        <select\n          value={table.getState().pagination.pageSize}\n          onChange={(e) => {\n            table.setPageSize(Number(e.target.value))\n          }}\n        >\n          {[25, 50, 100].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              {pageSize}\n            </option>\n          ))}\n        </select>\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n}\n","import {type ListenEvent, type ListenOptions} from '@sanity/client'\nimport {useCallback, useEffect, useMemo, useReducer, useState} from 'react'\nimport {catchError, of} from 'rxjs'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS, getDraftId, type SanityDocument, useClient} from 'sanity'\n\ninterface DocumentDeletedAction {\n  id: string\n  type: 'DOCUMENT_DELETED'\n}\n\ninterface DocumentUpdatedAction {\n  payload: SanityDocument\n  type: 'DOCUMENT_UPDATED'\n}\n\ninterface DocumentsSetAction {\n  documents: SanityDocument[]\n  type: 'DOCUMENTS_SET'\n}\n\ninterface DocumentReceivedAction {\n  payload: SanityDocument\n  type: 'DOCUMENT_RECEIVED'\n}\n\nexport type DocumentsReducerAction =\n  | DocumentDeletedAction\n  | DocumentUpdatedAction\n  | DocumentsSetAction\n  | DocumentReceivedAction\n\nexport interface DocumentsReducerState {\n  documents: Record<string, SanityDocument>\n}\n\nfunction createDocumentsSet(documents: SanityDocument[]) {\n  const documentsById = documents.reduce((acc, doc) => ({...acc, [doc._id]: doc}), {})\n  return documentsById\n}\n\nfunction documentsReducer(\n  state: DocumentsReducerState,\n  action: DocumentsReducerAction,\n): DocumentsReducerState {\n  switch (action.type) {\n    case 'DOCUMENTS_SET': {\n      // Create an object with the documents id as key\n      const documents = createDocumentsSet(action.documents)\n\n      return {\n        ...state,\n        documents: documents,\n      }\n    }\n\n    case 'DOCUMENT_RECEIVED': {\n      const nextDocumentResult = action.payload as SanityDocument\n\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          [nextDocumentResult._id]: nextDocumentResult,\n        },\n      }\n    }\n\n    case 'DOCUMENT_DELETED': {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const {[action.id]: _, ...restDocuments} = state.documents\n\n      return {\n        ...state,\n        documents: restDocuments,\n      }\n    }\n\n    case 'DOCUMENT_UPDATED': {\n      const updatedDocument = action.payload\n      const id = updatedDocument._id as string\n      const document = state.documents[id]\n\n      const nextDocument = {\n        // Add existing document data\n        ...document,\n        // Add incoming document data\n        ...updatedDocument,\n      } satisfies SanityDocument\n\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          [id]: nextDocument,\n        },\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nconst LISTEN_OPTIONS: ListenOptions = {\n  events: ['welcome', 'mutation', 'reconnect'],\n  includeResult: true,\n  visibility: 'query',\n  includeAllVersions: true,\n  tag: 'document-sheet-list-store',\n}\n\n/**\n * TODO:\n * [] Lazy load more documents, reduce initial fetch.\n * [] Add support for sorting and filtering.\n * []  Make a projection of the query according to the schema. e.g. get only the primitive fields and the _id to reduce the data payload.\n */\nexport function useDocumentSheetListStore({\n  filter,\n  params,\n  apiVersion,\n}: {\n  filter: string\n  params?: Record<string, unknown>\n  apiVersion?: string\n}) {\n  const QUERY = `*[${filter}][0...2000]`\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const [state, dispatch] = useReducer(documentsReducer, {\n    documents: {},\n  })\n  const [isLoading, setIsLoading] = useState<boolean>(client !== null)\n  const [error, setError] = useState<Error | null>(null)\n\n  const initialFetch = useCallback(async () => {\n    if (!client) {\n      setIsLoading(false)\n      return\n    }\n    try {\n      const res = await client.fetch(QUERY, params)\n      dispatch({type: 'DOCUMENTS_SET', documents: res})\n      setIsLoading(false)\n    } catch (err) {\n      setError(err)\n    }\n  }, [client, params, QUERY])\n\n  const handleListenerEvent = useCallback(\n    async (event: ListenEvent<Record<string, SanityDocument>>) => {\n      // Fetch all documents on initial connection\n      if (event.type === 'welcome') {\n        setIsLoading(true)\n        await initialFetch()\n        setIsLoading(false)\n      }\n\n      // The reconnect event means that we are trying to reconnect to the realtime listener.\n      // In this case we set loading to true to indicate that we're trying to\n      // reconnect. Once a connection has been established, the welcome event\n      // will be received and we'll fetch all documents again (above).\n      if (event.type === 'reconnect') {\n        setIsLoading(true)\n      }\n\n      // Handle mutations (create, update, delete) from the realtime listener\n      // and update the documents store accordingly\n      if (event.type === 'mutation') {\n        if (event.transition === 'appear') {\n          const nextDocument = event.result as SanityDocument | undefined\n\n          if (nextDocument) {\n            dispatch({\n              type: 'DOCUMENT_RECEIVED',\n              payload: nextDocument,\n            })\n          }\n        }\n\n        if (event.transition === 'disappear') {\n          dispatch({type: 'DOCUMENT_DELETED', id: event.documentId})\n        }\n\n        if (event.transition === 'update') {\n          const updatedDocument = event.result as SanityDocument | undefined\n\n          if (updatedDocument) {\n            dispatch({\n              type: 'DOCUMENT_UPDATED',\n              payload: updatedDocument,\n            })\n          }\n        }\n      }\n    },\n    [initialFetch],\n  )\n\n  const listener$ = useMemo(() => {\n    if (!client) return of()\n\n    const events$ = client.observable.listen(QUERY, params, LISTEN_OPTIONS).pipe(\n      catchError((err) => {\n        setError(err)\n        return of(err)\n      }),\n    )\n\n    return events$\n  }, [client, params, QUERY])\n\n  useEffect(() => {\n    const sub = listener$.subscribe(handleListenerEvent)\n\n    return () => {\n      sub?.unsubscribe()\n    }\n  }, [handleListenerEvent, listener$])\n\n  // Contemplate that we could have drafts and live documents here, merge them.\n  const dataAsArray = useMemo(() => {\n    // Joins the drafts and the live documents\n    const uniques = Object.keys(state.documents).reduce(\n      (acc: {[key: string]: SanityDocument}, key) => {\n        const document = state.documents[key]\n        const isDraft = document._id === getDraftId(document._id)\n        const id = isDraft ? document._id : getDraftId(document._id)\n        // If we already have the document, and this document is not the draft one, it means\n        // the draft hast already been added to the list, so we skip it.\n        if (acc[id] && !isDraft) {\n          return acc\n        }\n        acc[id] = document\n        return acc\n      },\n      {},\n    )\n    return Object.values(uniques)\n  }, [state.documents])\n\n  return {\n    data: dataAsArray,\n    isLoading,\n    error,\n  }\n}\n","import {useMemo} from 'react'\nimport {getPublishedId, useSearchState} from 'sanity'\n\nimport {useDocumentSheetListStore} from './useDocumentSheetListStore'\n\ninterface DocumentSheetListOptions {\n  /** The schemaType.name  */\n  typeName: string\n}\n\nexport function useDocumentSheetList({typeName}: DocumentSheetListOptions) {\n  const {state} = useSearchState()\n\n  const items = useMemo(() => {\n    const map = new Map()\n    state.result.hits.forEach((h) => map.set(getPublishedId(h.hit._id), h.hit))\n    return map\n  }, [state.result.hits])\n\n  // The store is listening to all the documents that match with the _type filter.\n  const {data, isLoading} = useDocumentSheetListStore({\n    filter: `_type == \"${typeName}\"`,\n  })\n\n  // Only return the documents that match with the serverSide filter items.\n  const documents = useMemo(() => {\n    return data.filter((doc) => items.has(getPublishedId(doc._id)))\n  }, [data, items])\n\n  return {data: documents, isLoading}\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {isDocumentSchemaType, type ObjectSchemaType, type SanityDocument} from '@sanity/types'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  type Row,\n  useReactTable,\n} from '@tanstack/react-table'\nimport {useCallback, useEffect, useState} from 'react'\nimport {SearchProvider, useSchema, useSearchState} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {type BaseStructureToolPaneProps} from '../../types'\nimport {ColumnsControl} from './ColumnsControl'\nimport {DocumentSheetListFilter} from './DocumentSheetListFilter'\nimport {DocumentSheetListHeader} from './DocumentSheetListHeader'\nimport {DocumentSheetListPaginator} from './DocumentSheetListPaginator'\nimport {DocumentSheetListProvider} from './DocumentSheetListProvider'\nimport {SheetListCell} from './SheetListCell'\nimport {useDocumentSheetColumns} from './useDocumentSheetColumns'\nimport {useDocumentSheetList} from './useDocumentSheetList'\n\ntype DocumentSheetListPaneProps = BaseStructureToolPaneProps<'documentList'>\n\nconst PaneContainer = styled(Flex)`\n  height: 100%;\n`\nconst TableContainer = styled.div`\n  overflow: auto; //our scrollable table container\n  position: relative; //needed for sticky header\n`\nconst Table = styled.table`\n  border-collapse: separate;\n  border-spacing: 0;\n  font-family: arial, sans-serif;\n  white-space: nowrap;\n  width: 100%;\n  border: 1px solid lightgray;\n\n  thead {\n    display: grid;\n    position: sticky;\n    top: 0;\n    z-index: 10;\n  }\n  tr {\n    padding: 0;\n  }\n  tr:last-child {\n    border-bottom: none;\n  }\n`\n\nfunction DocumentSheetListPaneInner({\n  documentSchemaType,\n}: DocumentSheetListPaneProps & {documentSchemaType: ObjectSchemaType}) {\n  const {dispatch, state} = useSearchState()\n  const {columns, initialColumnsVisibility} = useDocumentSheetColumns(documentSchemaType)\n  const {data} = useDocumentSheetList({\n    typeName: documentSchemaType.name,\n  })\n  const [selectedAnchor, setSelectedAnchor] = useState<number | null>(null)\n\n  const totalRows = state.result.hits.length\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    // Avoids resetting the page index when the data changes, e.g. a mutation is received\n    autoResetPageIndex: false,\n    initialState: {\n      columnPinning: {left: ['selected', 'Preview']},\n      pagination: {pageSize: 25},\n      columnVisibility: initialColumnsVisibility,\n    },\n    getRowId: (row) => row._id,\n    meta: {\n      selectedAnchor,\n      setSelectedAnchor,\n      patchDocument: (documentId, fieldId, value) => null,\n    },\n  })\n\n  const {rows} = table.getRowModel()\n\n  useEffect(() => {\n    dispatch({type: 'TERMS_TYPE_ADD', schemaType: documentSchemaType})\n    return () => {\n      dispatch({type: 'TERMS_TYPE_REMOVE', schemaType: documentSchemaType})\n    }\n  }, [documentSchemaType, dispatch])\n\n  const renderRow = useCallback((row: Row<SanityDocument>) => {\n    return (\n      <Box\n        as=\"tr\"\n        key={row.original._id + row.id}\n        paddingY={2}\n        style={{display: 'flex', width: '100%'}}\n      >\n        {row.getVisibleCells().map((cell) => (\n          <SheetListCell {...cell} key={row.original._id + cell.id} />\n        ))}\n      </Box>\n    )\n  }, [])\n\n  const rowsCount = `Total: ${totalRows} rows, showing ${rows.length} rows`\n  return (\n    <PaneContainer direction=\"column\" paddingX={3} data-testid=\"document-sheet-list-pane\">\n      <Flex direction=\"row\" align=\"center\" paddingY={3} paddingX={1} justify=\"space-between\">\n        <Flex direction=\"row\" align=\"center\">\n          <DocumentSheetListFilter />\n          <Text size={0} muted>\n            {rowsCount}\n          </Text>\n        </Flex>\n        <ColumnsControl table={table} />\n      </Flex>\n      <TableContainer>\n        <DocumentSheetListProvider table={table}>\n          <Table>\n            <thead>\n              {table.getHeaderGroups().map((headerGroup) => (\n                <Box as=\"tr\" key={headerGroup.id}>\n                  {headerGroup.headers.map((header) => (\n                    <DocumentSheetListHeader\n                      key={header.id}\n                      header={header}\n                      headerGroup={headerGroup}\n                    />\n                  ))}\n                </Box>\n              ))}\n            </thead>\n            <tbody>{table.getRowModel().rows.map(renderRow)}</tbody>\n          </Table>\n        </DocumentSheetListProvider>\n      </TableContainer>\n      <Flex justify={'flex-end'} padding={3} gap={4} paddingY={5}>\n        <DocumentSheetListPaginator table={table} />\n      </Flex>\n    </PaneContainer>\n  )\n}\n\nexport function DocumentSheetListPane(props: DocumentSheetListPaneProps) {\n  const schema = useSchema()\n  const typeName = props.pane.schemaTypeName\n\n  const schemaType = schema.get(typeName)\n  if (!schemaType || !isDocumentSchemaType(schemaType)) {\n    throw new Error(`Schema type \"${typeName}\" not found or not a document schema`)\n  }\n  return (\n    <SearchProvider>\n      <DocumentSheetListPaneInner {...props} documentSchemaType={schemaType} />\n    </SearchProvider>\n  )\n}\n","import {Card, Code} from '@sanity/ui'\nimport {isEqual} from 'lodash'\nimport {memo, useMemo, useState} from 'react'\nimport {\n  EMPTY_ARRAY,\n  type GeneralDocumentListLayoutKey,\n  SourceProvider,\n  useI18nText,\n  useSource,\n} from 'sanity'\nimport shallowEquals from 'shallow-equals'\n\nimport {Pane} from '../../components/pane'\nimport {_DEBUG} from '../../constants'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureToolSetting} from '../../useStructureToolSetting'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {DEFAULT_ORDERING, EMPTY_RECORD} from './constants'\nimport {DocumentListPane} from './DocumentListPane'\nimport {findStaticTypesInFilter} from './helpers'\nimport {PaneHeader} from './PaneHeader'\nimport {DocumentSheetListPane} from './sheetList/DocumentSheetListPane'\nimport {type SortOrder} from './types'\n\nconst addSelectedStateToMenuItems = (options: {\n  menuItems?: PaneMenuItem[]\n  sortOrderRaw?: SortOrder\n  layout?: GeneralDocumentListLayoutKey\n}) => {\n  const {menuItems, sortOrderRaw, layout} = options\n\n  return menuItems?.map((item) => {\n    if (item.params?.layout) {\n      return {\n        ...item,\n        selected: layout === item.params?.layout,\n      }\n    }\n\n    if (item?.params?.by) {\n      return {\n        ...item,\n        selected: isEqual(sortOrderRaw?.by, item?.params?.by || EMPTY_ARRAY),\n      }\n    }\n\n    return {...item, selected: false}\n  })\n}\n\nexport function useShallowUnique<ValueType>(value: ValueType): ValueType {\n  const [previous, setPrevious] = useState<ValueType>(value)\n  if (!shallowEquals(previous, value)) {\n    setPrevious(value)\n    return value\n  }\n  return previous\n}\n\n/**\n * @internal\n */\nexport const PaneContainer = memo(function PaneContainer(\n  props: BaseStructureToolPaneProps<'documentList'>,\n) {\n  const {index, isSelected, pane, paneKey} = props\n  const {name: parentSourceName} = useSource()\n\n  const {\n    defaultLayout = 'default',\n    initialValueTemplates = EMPTY_ARRAY,\n    menuItemGroups,\n    menuItems,\n    options,\n  } = pane\n  const {defaultOrdering = EMPTY_ARRAY, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const sourceName = pane.source\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const [layout, setLayout] = useStructureToolSetting<GeneralDocumentListLayoutKey>(\n    'layout',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultLayout,\n  )\n\n  const {title} = useI18nText(pane)\n\n  // Ensure that we use the defaultOrdering value from structure builder if any as the default\n  const defaultSortOrder = useMemo(() => {\n    return defaultOrdering?.length > 0 ? {by: defaultOrdering} : DEFAULT_ORDERING\n  }, [defaultOrdering])\n\n  const [sortOrderRaw, setSortOrder] = useStructureToolSetting<SortOrder>(\n    'sort-order',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultSortOrder,\n  )\n\n  const menuItemsWithSelectedState = useMemo(\n    () =>\n      addSelectedStateToMenuItems({\n        menuItems,\n        sortOrderRaw,\n        layout,\n      }),\n    [layout, menuItems, sortOrderRaw],\n  )\n\n  const isSheetListLayout = layout === 'sheetList'\n  const paneLayout = isSheetListLayout ? (\n    <DocumentSheetListPane {...props} key={props.pane.id} />\n  ) : (\n    <DocumentListPane {...props} sortOrder={sortOrderRaw} layout={layout} />\n  )\n\n  return (\n    <SourceProvider name={sourceName || parentSourceName}>\n      <Pane\n        data-ui=\"DocumentListPane\"\n        id={paneKey}\n        minWidth={320}\n        {...(isSheetListLayout ? {} : {currentMaxWidth: 350, maxWidth: 640})}\n        selected={isSelected}\n      >\n        {_DEBUG && (\n          <Card padding={4} tone=\"transparent\">\n            <Code>{pane.source || '(none)'}</Code>\n          </Card>\n        )}\n\n        <PaneHeader\n          index={index}\n          initialValueTemplates={initialValueTemplates}\n          menuItemGroups={menuItemGroups}\n          menuItems={menuItemsWithSelectedState}\n          setLayout={setLayout}\n          setSortOrder={setSortOrder}\n          title={title}\n        />\n        {paneLayout}\n      </Pane>\n    </SourceProvider>\n  )\n})\nPaneContainer.displayName = 'Memo(PaneContainer)'\n","import {type DocumentBadgeComponent} from 'sanity'\n\n/** @internal */\nexport const LiveEditBadge: DocumentBadgeComponent = (props) => {\n  const {liveEditSchemaType, version} = props\n\n  if (liveEditSchemaType && !version) {\n    return {\n      label: 'Live',\n      color: 'danger',\n    }\n  }\n\n  return null\n}\nLiveEditBadge.displayName = 'LiveEditBadge'\n","import {uuid} from '@sanity/uuid'\n\nimport {EMPTY_PARAMS, type LOADING_PANE} from './constants'\nimport {type PaneNode, type RouterPanes} from './types'\n\nconst state: {\n  activePanes: Array<PaneNode | typeof LOADING_PANE>\n} = {activePanes: []}\n\nexport function setActivePanes(panes: Array<PaneNode | typeof LOADING_PANE>): void {\n  state.activePanes = panes\n}\n\n/**\n * This function looks at the _active panes_ to resolve an intent. this type of\n * intent resolution is faster and does not cause the panes to reset\n *\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: {panes?: RouterPanes} | undefined,\n  payload: unknown,\n): {panes: RouterPanes} | {intent: string; params: Record<string, string>; payload: unknown} {\n  const panes = routerState?.panes || []\n  const activePanes = state.activePanes || []\n  const editDocumentId = params.id || uuid()\n\n  // Loop through open panes and see if any of them can handle the intent\n  for (let i = activePanes.length - 1; i >= 0; i--) {\n    const pane = activePanes[i]\n\n    if (typeof pane !== 'object') continue\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `resolveIntent.ts`\n    if (\n      pane.canHandleIntent?.(intent, params, {\n        pane,\n        index: i,\n      }) ||\n      // see `resolveIntent.ts` for more info\n      (pane.type === 'documentList' &&\n        pane.schemaTypeName === params.type &&\n        pane.options.filter === '_type == $type')\n    ) {\n      const paneParams = getPaneParams(intent, params)\n\n      return {\n        panes: panes\n          .slice(0, i)\n          .concat([[{id: editDocumentId, params: paneParams, payload}]]) as RouterPanes,\n      }\n    }\n  }\n\n  return {intent: intent, params, payload}\n}\n\nfunction getPaneParams(\n  intent: string,\n  {template, version}: Record<string, string>,\n): {template?: string; version?: string} {\n  if (intent !== 'create') return EMPTY_PARAMS\n  if (template && version) return {template, version}\n  if (template) return {template}\n  if (version) return {version}\n  return EMPTY_PARAMS\n}\n","import {type ObjectDiff} from '@sanity/diff'\nimport {BoundaryElementProvider, Box, Card, Flex, Text} from '@sanity/ui'\nimport {useMemo, useState} from 'react'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  type DocumentChangeContextInstance,\n  LoadingBlock,\n  NoChanges,\n  type ObjectSchemaType,\n  ScrollContainer,\n  usePerspective,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {TimelineMenu} from '../../timeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nconst Grid = styled(Box)`\n  &:not([hidden]) {\n    display: grid;\n  }\n  grid-template-columns: 48px 1fr;\n  align-items: center;\n  gap: 0.25em;\n`\n\nexport function ChangesInspector({showChanges}: {showChanges: boolean}): React.JSX.Element {\n  const {documentId, schemaType, timelineError, timelineStore, value} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n\n  const rev = useTimelineSelector(timelineStore, (state) => state.revTime)\n  const diff = useTimelineSelector(timelineStore, (state) => state.diff)\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const selectionState = useTimelineSelector(timelineStore, (state) => state.selectionState)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n  const loading = selectionState === 'loading'\n  const isComparingCurrent = !onOlderRevision\n\n  // Note that we are using the studio core namespace here, as changes theoretically should\n  // be part of Sanity core (needs to be moved from structure at some point)\n  const {t: structureT} = useTranslation(structureLocaleNamespace)\n\n  const documentContext: DocumentChangeContextInstance = useMemo(\n    () => ({\n      documentId,\n      schemaType,\n      FieldWrapper: ChangeFieldWrapper,\n      rootDiff: diff,\n      isComparingCurrent,\n      value,\n      showFromValue: true,\n    }),\n    [documentId, diff, isComparingCurrent, schemaType, value],\n  )\n\n  if (selectedReleaseId) {\n    return (\n      <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n        <Card flex={1} padding={2} paddingTop={0}>\n          <TimelineError versionError />\n        </Card>\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <Box padding={3}>\n        <Grid paddingX={2} paddingBottom={2}>\n          <Text size={1} muted>\n            {structureT('changes.from.label')}\n          </Text>\n\n          <TimelineMenu mode=\"since\" chunk={sinceTime} placement=\"bottom-start\" />\n          <Text size={1} muted>\n            {structureT('changes.to.label')}\n          </Text>\n          <TimelineMenu chunk={rev} mode=\"rev\" placement=\"bottom-end\" />\n        </Grid>\n      </Box>\n\n      <Card flex={1} paddingX={2} paddingY={2}>\n        <BoundaryElementProvider element={scrollRef}>\n          <Scroller data-ui=\"Scroller\" ref={setScrollRef}>\n            <Box flex={1} paddingX={3} height=\"fill\">\n              {showChanges && (\n                <Content\n                  diff={diff}\n                  documentContext={documentContext}\n                  error={timelineError}\n                  loading={loading}\n                  schemaType={schemaType}\n                />\n              )}\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  diff,\n  documentContext,\n  loading,\n  schemaType,\n}: {\n  error?: Error | null\n  diff: ObjectDiff<any> | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n}) {\n  if (error) {\n    return <NoChanges />\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n\n  if (!diff) {\n    return <NoChanges />\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={diff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {\n  type DocumentGroupEvent,\n  Event,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  useTranslation,\n} from 'sanity'\n\nimport {Tooltip} from '../../../../../ui-components'\n\nexport interface TimelineItemProps {\n  event: DocumentGroupEvent\n  isSelected: boolean\n  onSelect: (chunk: DocumentGroupEvent) => void\n  optionsMenu?: React.ReactNode\n}\n\nconst getIsSelectable = (event: DocumentGroupEvent) => {\n  return (\n    !isDeleteDocumentVersionEvent(event) &&\n    !isDeleteDocumentGroupEvent(event) &&\n    !isUnpublishDocumentEvent(event) &&\n    !isScheduleDocumentVersionEvent(event) &&\n    !isUnscheduleDocumentVersionEvent(event)\n  )\n}\n\nexport function EventTimelineItem({event, isSelected, onSelect, optionsMenu}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n  const isSelectable = getIsSelectable(event)\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(event)\n      }\n    },\n    [onSelect, event, isSelectable],\n  )\n  return (\n    <Tooltip content={isSelectable ? '' : t('changes.not-selectable')} disabled={isSelectable}>\n      <Flex gap={1}>\n        <Card\n          as={isSelectable ? 'button' : 'div'}\n          onClick={handleClick}\n          padding={2}\n          pressed={isSelected}\n          radius={2}\n          data-ui=\"timelineItem\"\n          data-testid=\"timeline-item-button\"\n          data-chunk-timestamp={event.timestamp}\n          style={{\n            cursor: isSelectable ? 'pointer' : 'default',\n          }}\n        >\n          <Event event={event} showChangesBy=\"tooltip\" />\n        </Card>\n        {optionsMenu}\n      </Flex>\n    </Tooltip>\n  )\n}\n","import {\n  Flex,\n  Menu,\n  // eslint-disable-next-line no-restricted-imports\n  MenuItem,\n  Text,\n  usePortal,\n} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  ContextMenuButton,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  type PublishDocumentVersionEvent,\n  RELEASES_INTENT,\n  Translate,\n  useSetPerspective,\n  useTranslation,\n  VersionInlineBadge,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {MenuButton} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {TIMELINE_MENU_PORTAL} from '../timelineMenu'\n\nexport function PublishedEventMenu({event}: {event: PublishDocumentVersionEvent}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const portalContext = usePortal()\n  const {params, setParams} = usePaneRouter()\n  const setPerspective = useSetPerspective()\n\n  const handleOpenReleaseDocument = useCallback(() => {\n    setParams({\n      ...params,\n      rev: event.versionRevisionId || '@lastPublished',\n      since: undefined,\n      historyEvent: event.id,\n      historyVersion: getVersionFromId(event.versionId),\n    })\n  }, [setParams, params, event])\n\n  const handleOpenDraftDocument = useCallback(() => {\n    setParams({\n      ...params,\n      rev: event.versionRevisionId,\n      preserveRev: 'true',\n      since: undefined,\n    })\n    setTimeout(() => {\n      // A bug is generated when we change the perspective and the params at the same time\n      // Resetting the params to the value it had before, because the paneRouter uses the previous value\n      setPerspective('drafts')\n    }, 100)\n  }, [setParams, params, event.versionRevisionId, setPerspective])\n\n  const VersionBadge = ({children}: {children: React.ReactNode}) => {\n    return (\n      <VersionInlineBadge $tone={event.release ? getReleaseTone(event.release) : undefined}>\n        {children}\n      </VersionInlineBadge>\n    )\n  }\n  return (\n    <MenuButton\n      id={`timeline-item-menu-button-${event.versionId}`}\n      button={\n        <ContextMenuButton\n          aria-label={t('timeline-item.menu-button.aria-label')}\n          tooltipProps={{content: t('timeline-item.menu-button.tooltip')}}\n        />\n      }\n      menu={\n        <Menu padding={1}>\n          {event.release ? (\n            <>\n              <IntentLink\n                intent={RELEASES_INTENT}\n                params={{id: getReleaseIdFromReleaseDocumentId(event.release._id)}}\n                style={{textDecoration: 'none'}}\n              >\n                <MenuItem padding={3}>\n                  <Flex align={'center'} justify=\"flex-start\">\n                    <Text size={1} style={{textDecoration: 'none'}}>\n                      <Translate\n                        components={{\n                          VersionBadge: ({children}) => <VersionBadge>{children}</VersionBadge>,\n                        }}\n                        i18nKey=\"events.open.release\"\n                        values={{\n                          releaseTitle:\n                            event.release.metadata.title ||\n                            t('release.placeholder-untitled-release'),\n                        }}\n                        t={t}\n                      />\n                    </Text>\n                  </Flex>\n                </MenuItem>\n              </IntentLink>\n              <MenuItem onClick={handleOpenReleaseDocument}>\n                <Flex align={'center'} justify=\"flex-start\">\n                  <Text size={1}>\n                    <Translate\n                      components={{\n                        VersionBadge: ({children}) => <VersionBadge>{children}</VersionBadge>,\n                      }}\n                      i18nKey=\"events.inspect.release\"\n                      values={{\n                        releaseTitle:\n                          event.release.metadata.title || t('release.placeholder-untitled-release'),\n                      }}\n                      t={t}\n                    />\n                  </Text>\n                </Flex>\n              </MenuItem>\n            </>\n          ) : (\n            <MenuItem onClick={handleOpenDraftDocument} disabled={!event.versionRevisionId}>\n              <Flex align={'center'}>\n                <Text size={1}>\n                  <Translate\n                    components={{\n                      VersionBadge: ({children}) => (\n                        <VersionInlineBadge $tone=\"caution\">{children}</VersionInlineBadge>\n                      ),\n                    }}\n                    i18nKey=\"events.open.draft\"\n                    t={t}\n                  />\n                </Text>\n              </Flex>\n            </MenuItem>\n          )}\n        </Menu>\n      }\n      popover={{\n        // when used inside the timeline menu we want to keep the element inside the popover, to avoid closing the popover when clicking expand.\n        portal: portalContext.elements?.[TIMELINE_MENU_PORTAL] ? TIMELINE_MENU_PORTAL : true,\n        placement: 'bottom',\n        fallbackPlacements: ['bottom-end', 'bottom-start'],\n      }}\n    />\n  )\n}\n","import {Box, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {motion, type Variants} from 'framer-motion'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  type DocumentGroupEvent,\n  getDocumentVariantType,\n  isCreateDocumentVersionEvent,\n  isEditDocumentVersionEvent,\n  isPublishDocumentVersionEvent,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ExpandableTimelineItemButton} from '../expandableTimelineItemButton'\nimport {ListWrapper, Root} from '../timeline.styled'\nimport {EventTimelineItem} from './EventTimelineItem'\nimport {PublishedEventMenu} from './PublishedEventMenu'\n\ninterface TimelineProps {\n  events: DocumentGroupEvent[]\n  hasMoreEvents: boolean | null\n  selectedEventId?: string\n  onLoadMore: () => void\n  onSelect: (event: DocumentGroupEvent) => void\n  fetchEventChildren: (event: DocumentGroupEvent) => Promise<void>\n  /**\n   * The list needs a predefined max height for the scroller to work.\n   */\n  listMaxHeight?: string\n}\n\nconst TimelineItemWrapper = motion.create(Box)\nconst CHILDREN_ITEMS_VARIANTS: Variants = {\n  initial: {\n    opacity: 0,\n  },\n  animate: {\n    opacity: 1,\n  },\n  exit: {\n    opacity: 0,\n  },\n}\n\nconst ITEM_HEIGHT = 57\n\nexport const TIMELINE_LIST_WRAPPER_ID = 'timeline-list-wrapper'\n\nexport const EventsTimeline = ({\n  events: allEvents,\n  hasMoreEvents,\n  selectedEventId,\n  onLoadMore,\n  onSelect,\n  listMaxHeight = 'calc(100vh - 280px)',\n  fetchEventChildren,\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n  const [expandedParents, setExpandedParents] = useState<Set<string>>(() => {\n    if (selectedEventId) {\n      // Find that event and if it has a parent, expand the parent.\n      const selectedEvent = allEvents.find((event) => event.id === selectedEventId)\n      if (selectedEvent && 'parentId' in selectedEvent && selectedEvent.parentId) {\n        return new Set([selectedEvent.parentId])\n      }\n    }\n    return new Set()\n  })\n  const [expandingParents, setExpandingParents] = useState<Set<string>>(new Set())\n\n  const events = useMemo(() => {\n    return allEvents.filter((event) => {\n      if (isCreateDocumentVersionEvent(event) && event.parentId) {\n        // Check if it's the last event in the list, in that case, we want to show it\n        const isLastEvent = allEvents[allEvents.length - 1].id === event.id\n        if (isLastEvent) return true\n        return expandedParents.has(event.parentId)\n      }\n      if (isEditDocumentVersionEvent(event) && event.parentId) {\n        return expandedParents.has(event.parentId)\n      }\n      return true\n    })\n  }, [expandedParents, allEvents])\n\n  const handleExpandParent = useCallback(\n    (event: DocumentGroupEvent) => async () => {\n      const parentId = event.id\n\n      let isExpanding = false\n      setExpandedParents((prev) => {\n        const next = new Set(prev)\n\n        if (prev.has(parentId)) next.delete(parentId)\n        else {\n          isExpanding = true\n          next.add(parentId)\n        }\n\n        return next\n      })\n      if (isExpanding) {\n        setExpandingParents((prev) => {\n          const next = new Set(prev)\n          next.add(parentId)\n          return next\n        })\n        await fetchEventChildren(event)\n        setExpandingParents((prev) => {\n          const next = new Set(prev)\n          next.delete(parentId)\n          return next\n        })\n      }\n    },\n    [fetchEventChildren, setExpandingParents],\n  )\n\n  const handleSelectChunk = useCallback(\n    (event: DocumentGroupEvent) => {\n      onSelect(event)\n    },\n    [onSelect],\n  )\n\n  const renderOptionsMenu = useCallback(\n    (event: DocumentGroupEvent) => {\n      const documentVariantType = getDocumentVariantType(event.documentId)\n      if (isPublishDocumentVersionEvent(event) && documentVariantType === 'published') {\n        return <PublishedEventMenu event={event} />\n      }\n      if (\n        isPublishDocumentVersionEvent(event) &&\n        documentVariantType === 'draft' &&\n        event.creationEvent\n      ) {\n        return (\n          <ExpandableTimelineItemButton\n            isExpanded={expandedParents.has(event.id)}\n            onExpand={handleExpandParent(event)}\n          />\n        )\n      }\n      return null\n    },\n    [expandedParents, handleExpandParent],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<DocumentGroupEvent[][number]>>(\n    (event, {activeIndex}) => {\n      /**\n       * The create version event will be present while expanding (loading the edits), so we are attaching to it the loading block at the top.\n       * - publishEvent (expanding?)\n       * --- loadingBlock  ~createEvent~\n       * */\n      const showExpandingLoader =\n        isCreateDocumentVersionEvent(event) &&\n        event.parentId &&\n        expandingParents.has(event.parentId)\n\n      const isLastEvent = activeIndex === events.length - 1\n      if (showExpandingLoader) {\n        return (\n          <TimelineItemWrapper\n            animate={{opacity: 1}}\n            initial={{opacity: 0}}\n            transition={{duration: 0.2, delay: 0.2}}\n          >\n            {/* We need this item to match the same height as the rest of the list items, which is 57px */}\n            <Flex align=\"center\" justify=\"center\" style={{height: ITEM_HEIGHT}}>\n              <Spinner />\n            </Flex>\n          </TimelineItemWrapper>\n        )\n      }\n      return (\n        <TimelineItemWrapper\n          paddingBottom={1}\n          paddingRight={1}\n          key={event.timestamp}\n          animate=\"animate\"\n          exit=\"exit\"\n          initial=\"initial\"\n          variants={'parentId' in event ? CHILDREN_ITEMS_VARIANTS : undefined}\n          paddingLeft={\n            (isEditDocumentVersionEvent(event) || isCreateDocumentVersionEvent(event)) &&\n            event.parentId &&\n            !isLastEvent\n              ? 4\n              : 1\n          }\n        >\n          <EventTimelineItem\n            event={event}\n            isSelected={event.id === selectedEventId}\n            onSelect={handleSelectChunk}\n            optionsMenu={renderOptionsMenu(event)}\n          />\n\n          {isLastEvent && hasMoreEvents && <LoadingBlock />}\n        </TimelineItemWrapper>\n      )\n    },\n    [\n      expandingParents,\n      selectedEventId,\n      handleSelectChunk,\n      renderOptionsMenu,\n      events.length,\n      hasMoreEvents,\n    ],\n  )\n\n  useEffect(() => setMounted(true), [])\n  const selectedIndex = events.findIndex((event) => event.id === selectedEventId)\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {events.length > 0 ? (\n        <ListWrapper direction=\"column\" $maxHeight={listMaxHeight} id={TIMELINE_LIST_WRAPPER_ID}>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={ITEM_HEIGHT}\n            items={events}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      ) : (\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </Stack>\n      )}\n    </Root>\n  )\n}\n\nEventsTimeline.displayName = 'EventsTimeline'\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Flex,\n  type Placement,\n  PortalProvider,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useToast,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentGroupEvent,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  TIMELINE_ITEM_I18N_KEY_MAPPING,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../../ui-components'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {TimelineError} from '../TimelineError'\nimport {EventsTimeline} from './EventsTimeline'\n\ninterface TimelineMenuProps {\n  event: DocumentGroupEvent | null\n  events: DocumentGroupEvent[]\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport const TIMELINE_MENU_PORTAL = 'timeline-menu'\n\nconst formatParams = {\n  timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n}\n\nexport function EventsTimelineMenu({event, events, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popoverRef, setPopoverRef] = useState<HTMLElement | null>(null)\n  const toast = useToast()\n  const {\n    nextCursor,\n    loading,\n    error: eventsError,\n    findRangeForRevision,\n    findRangeForSince,\n    loadMoreEvents,\n    expandEvent,\n  } = useEvents()\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const handleGlobalKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (open && (e.key === 'Escape' || e.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(open && handleClose, () => [button, popoverRef])\n\n  const selectRev = useCallback(\n    (revEvent: DocumentGroupEvent) => {\n      try {\n        if (\n          isDeleteDocumentVersionEvent(revEvent) ||\n          isDeleteDocumentGroupEvent(revEvent) ||\n          isUnpublishDocumentEvent(revEvent) ||\n          isScheduleDocumentVersionEvent(revEvent) ||\n          isUnscheduleDocumentVersionEvent(revEvent)\n        ) {\n          console.error('Event is not selectable')\n          return\n        }\n        const [since, rev] = findRangeForRevision(revEvent?.id)\n        setTimelineRange(since, rev)\n        handleClose()\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [t, toast, setTimelineRange, findRangeForRevision, handleClose],\n  )\n\n  const selectSince = useCallback(\n    (sinceEvent: DocumentGroupEvent) => {\n      try {\n        const [since, rev] = findRangeForSince(sinceEvent.id)\n        setTimelineRange(since, rev)\n        handleClose()\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [findRangeForSince, setTimelineRange, toast, t, handleClose],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading && nextCursor) {\n      loadMoreEvents()\n    }\n  }, [loading, loadMoreEvents, nextCursor])\n\n  const content = useMemo(() => {\n    if (eventsError) return <TimelineError />\n\n    return (\n      <EventsTimeline\n        events={events}\n        fetchEventChildren={expandEvent}\n        hasMoreEvents={Boolean(nextCursor)}\n        selectedEventId={event?.id}\n        onLoadMore={handleLoadMore}\n        onSelect={mode === 'rev' ? selectRev : selectSince}\n      />\n    )\n  }, [\n    eventsError,\n    mode,\n    expandEvent,\n    events,\n    nextCursor,\n    event?.id,\n    handleLoadMore,\n    selectSince,\n    selectRev,\n  ])\n\n  const revLabel = event\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[event.type], {\n        context: 'timestamp',\n        timestamp: new Date(event.timestamp),\n        formatParams,\n      })\n    : t('timeline.latest-revision')\n\n  // eslint-disable-next-line no-nested-ternary\n  const sinceLabel = event\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[event.type], {\n        context: 'timestamp',\n        timestamp: new Date(event.timestamp),\n        formatParams,\n      })\n    : events.length > 0\n      ? t('timeline.since-version-missing')\n      : t('timeline.no-previous-events')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <PortalProvider __unstable_elements={{[TIMELINE_MENU_PORTAL]: popoverRef}}>\n      <Root\n        data-testid=\"timeline-menu\"\n        constrainSize\n        content={open && content}\n        data-ui=\"versionMenu\"\n        open={open}\n        placement={placement}\n        matchReferenceWidth\n        portal\n        ref={setPopoverRef}\n      >\n        <Flex width={'fill'}>\n          <Button\n            data-testid={open ? 'timeline-menu-close-button' : 'timeline-menu-open-button'}\n            disabled={loading || !events.length}\n            mode=\"ghost\"\n            onClick={open ? handleClose : handleOpen}\n            ref={setButton}\n            selected={open}\n            width=\"fill\"\n            tooltipProps={null}\n            justify={'space-between'}\n            style={{\n              maxWidth: '100%',\n            }}\n            iconRight={ChevronDownIcon}\n            text={loading ? t('timeline.loading-history') : buttonLabel}\n          />\n        </Flex>\n      </Root>\n    </PortalProvider>\n  )\n}\n","import {BoundaryElementProvider, Box, Card, Flex, Spinner, Text} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type ReactElement, useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  ChangesError,\n  type DocumentChangeContextInstance,\n  LoadingBlock,\n  NoChanges,\n  type ObjectSchemaType,\n  ScrollContainer,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {EventsTimelineMenu} from '../../timeline/events/EventsTimelineMenu'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nconst Grid = styled(Box)`\n  &:not([hidden]) {\n    display: grid;\n  }\n  grid-template-columns: 48px 1fr;\n  align-items: center;\n  gap: 0.25em;\n`\n\nconst SpinnerContainer = styled(Flex)`\n  width: 100%;\n  position: absolute;\n  bottom: -4px;\n`\n\nconst DIFF_INITIAL_VALUE = {\n  diff: null,\n  loading: true,\n  error: null,\n}\nexport function EventsInspector({showChanges}: {showChanges: boolean}): ReactElement {\n  const {documentId, schemaType, timelineError, value, formState} = useDocumentPane()\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n\n  const {events, revision, sinceRevision, getChangesList} = useEvents()\n\n  const isComparingCurrent = !revision?.revisionId\n  const changesList$ = useMemo(() => getChangesList(), [getChangesList])\n  const {\n    diff,\n    loading: diffLoading,\n    error: diffError,\n  } = useObservable(changesList$, DIFF_INITIAL_VALUE)\n\n  const {t} = useTranslation('studio')\n\n  const documentContext: DocumentChangeContextInstance = useMemo(() => {\n    return {\n      documentId,\n      schemaType,\n      FieldWrapper: ChangeFieldWrapper,\n      rootDiff: diff,\n      isComparingCurrent: isComparingCurrent && !formState?.readOnly,\n      value,\n      showFromValue: true,\n    }\n  }, [diff, documentId, isComparingCurrent, formState?.readOnly, schemaType, value])\n\n  const [sinceEvent, toEvent] = useMemo(() => {\n    if (!events) return [null, null]\n    return [\n      events.find((e) => e.id === sinceRevision?.revisionId) || null,\n      events.find((e) => e.id === revision?.revisionId) || events[0],\n    ]\n  }, [events, revision?.revisionId, sinceRevision?.revisionId])\n\n  const sinceEvents = useMemo(() => {\n    // The sinceEvents need to account the toEvent showing only events that are older than the toEvent\n    if (!toEvent) return events.slice(1)\n    return events.slice(events.indexOf(toEvent) + 1).map((event) => {\n      // If the to event has a parent id, we need to remove the parent id from the since events or they won't be rendered, as they have no parent to expand.\n      if ('parentId' in toEvent && 'parentId' in event && event.parentId === toEvent.parentId) {\n        return {...event, parentId: undefined}\n      }\n      return event\n    })\n  }, [events, toEvent])\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <Box padding={3} style={{position: 'relative'}}>\n        <Grid paddingX={2} paddingBottom={2}>\n          <Text size={1} muted>\n            {t('changes.inspector.from-label')}\n          </Text>\n          <EventsTimelineMenu\n            event={sinceEvent || null}\n            events={sinceEvents}\n            mode=\"since\"\n            placement=\"bottom-start\"\n          />\n          <Text size={1} muted>\n            {t('changes.inspector.to-label')}\n          </Text>\n          <EventsTimelineMenu\n            event={toEvent || null}\n            events={events}\n            mode=\"rev\"\n            placement=\"bottom-end\"\n          />\n        </Grid>\n        {diffLoading && (\n          <motion.div\n            animate={{opacity: 1}}\n            initial={{opacity: 0}}\n            transition={{delay: 0.2, duration: 0.2}}\n          >\n            <SpinnerContainer justify=\"center\" align=\"center\" gap={2}>\n              <Text muted size={0}>\n                {t('changes.loading-changes')}\n              </Text>\n              <Spinner size={0} />\n            </SpinnerContainer>\n          </motion.div>\n        )}\n      </Box>\n\n      <Card flex={1} paddingX={2} paddingY={2}>\n        <BoundaryElementProvider element={scrollRef}>\n          <Scroller data-ui=\"Scroller\" ref={setScrollRef}>\n            <Box flex={1} paddingX={3} height=\"fill\">\n              {showChanges && (\n                <Content\n                  documentContext={documentContext}\n                  error={timelineError || diffError}\n                  loading={revision?.loading || sinceRevision?.loading || false}\n                  schemaType={schemaType}\n                />\n              )}\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  documentContext,\n  loading,\n  schemaType,\n}: {\n  error?: Error | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n}) {\n  if (error) {\n    return <ChangesError />\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n\n  if (!documentContext.rootDiff) {\n    return (\n      <motion.div\n        animate={{opacity: 1}}\n        initial={{opacity: 0}}\n        transition={{delay: 0.2, duration: 0.2}}\n      >\n        <NoChanges />\n      </motion.div>\n    )\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={documentContext.rootDiff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n","import {BoundaryElementProvider, Card, Flex, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {\n  type DocumentGroupEvent,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  LoadingBlock,\n  ScrollContainer,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {EventsTimeline} from '../../timeline/events/EventsTimeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function EventsSelector({showList}: {showList: boolean}) {\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n  const [listHeight, setListHeight] = useState(0)\n  const {setTimelineRange} = useDocumentPane()\n  const getScrollerRef = useCallback(\n    (el: HTMLDivElement | null) => {\n      if (!listHeight && el) {\n        /**\n         * Hacky solution, the list height needs to be defined, it cannot be obtained from the parent using a `max-height: 100%`\n         * Because the scroller won't work properly and it won't scroll to the selected element on mount.\n         * To fix this, this component will set the list height to the height of the parent element - 1px, to avoid a double scroll line.\n         */\n        setListHeight(el.clientHeight ? el.clientHeight - 1 : 0)\n        setScrollRef(el)\n      }\n    },\n    [listHeight],\n  )\n  const {\n    events,\n    nextCursor,\n    loading,\n    error,\n    revision,\n    loadMoreEvents,\n    findRangeForRevision,\n    expandEvent,\n  } = useEvents()\n\n  const {t} = useTranslation('studio')\n  const toast = useToast()\n\n  const selectRev = useCallback(\n    (event: DocumentGroupEvent) => {\n      try {\n        if (\n          isDeleteDocumentVersionEvent(event) ||\n          isDeleteDocumentGroupEvent(event) ||\n          isUnpublishDocumentEvent(event) ||\n          isScheduleDocumentVersionEvent(event) ||\n          isUnscheduleDocumentVersionEvent(event)\n        ) {\n          console.error('Event is not selectable')\n          return\n        }\n        const [since, rev] = findRangeForRevision(event.id)\n        setTimelineRange(since, rev)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [t, toast, setTimelineRange, findRangeForRevision],\n  )\n\n  const initialLoad = loading && !events.length\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n      <Card flex={1} padding={2} paddingTop={0}>\n        {error ? (\n          <TimelineError />\n        ) : (\n          <BoundaryElementProvider element={scrollRef}>\n            <Scroller data-ui=\"Scroller\" ref={getScrollerRef}>\n              {listHeight &&\n              // This forces the list to unmount and remount, which is needed to reset the scroll position\n              showList &&\n              !initialLoad ? (\n                <EventsTimeline\n                  events={events}\n                  fetchEventChildren={expandEvent}\n                  hasMoreEvents={Boolean(nextCursor)}\n                  // If we have a revision, we select it, otherwise we select the first event\n                  selectedEventId={revision?.revisionId || events[0]?.id}\n                  onLoadMore={loadMoreEvents}\n                  onSelect={selectRev}\n                  listMaxHeight={`${listHeight}px`}\n                />\n              ) : null}\n              {loading && <LoadingBlock />}\n            </Scroller>\n          </BoundaryElementProvider>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n","import {BoundaryElementProvider, Card, Flex, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {\n  type Chunk,\n  ScrollContainer,\n  usePerspective,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Timeline} from '../../timeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function HistorySelector({showList}: {showList: boolean}) {\n  const {timelineError, setTimelineRange, timelineStore} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n  const [listHeight, setListHeight] = useState(0)\n\n  const getScrollerRef = useCallback((el: HTMLDivElement | null) => {\n    if (!el?.clientHeight) return\n    /**\n     * Hacky solution, the list height needs to be defined, it cannot be obtained from the parent using a `max-height: 100%`\n     * Because the scroller won't work properly and it won't scroll to the selected element on mount.\n     * To fix this, this component will set the list height to the height of the parent element - 1px, to avoid a double scroll line.\n     */\n    setListHeight(el.clientHeight - 1)\n    setScrollRef(el)\n  }, [])\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n\n  const {t} = useTranslation('studio')\n  const toast = useToast()\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForRev(revChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    // If updated, be sure to update the TimeLineMenu component as well\n    if (!loading) {\n      timelineStore?.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n      <Card flex={1} padding={2} paddingTop={0}>\n        {timelineError || selectedReleaseId ? (\n          <TimelineError versionError={Boolean(selectedReleaseId)} />\n        ) : (\n          <BoundaryElementProvider element={scrollRef}>\n            <Scroller data-ui=\"Scroller\" ref={getScrollerRef}>\n              {listHeight &&\n              // This forces the list to unmount and remount, which is needed to reset the scroll position\n              showList ? (\n                <Timeline\n                  chunks={chunks}\n                  hasMoreChunks={hasMoreChunks}\n                  lastChunk={realRevChunk}\n                  onLoadMore={handleLoadMore}\n                  onSelect={selectRev}\n                  listMaxHeight={`${listHeight}px`}\n                />\n              ) : null}\n            </Scroller>\n          </BoundaryElementProvider>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n","import {CloseIcon} from '@sanity/icons'\nimport {Card, Flex, TabList, TabPanel} from '@sanity/ui'\nimport {type DocumentInspectorProps, useSource, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Tab} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesInspector} from './ChangesInspector'\nimport {EventsInspector} from './EventsInspector'\nimport {EventsSelector} from './EventsSelector'\nimport {HistorySelector} from './HistorySelector'\n\nconst FadeInFlex = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n  &[data-ready] {\n    opacity: 1;\n  }\n`\nconst TABS = ['history', 'review'] as const\nconst isValidTab = (tab: string | undefined): tab is (typeof TABS)[number] =>\n  // @ts-expect-error TS doesn't understand the type guard\n  tab && TABS.includes(tab)\n\nexport function ChangesTabs(props: DocumentInspectorProps) {\n  const {params, setParams} = usePaneRouter()\n  const source = useSource()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const isReady = params?.inspect === HISTORY_INSPECTOR_NAME\n\n  const paneRouterTab = isValidTab(params?.changesInspectorTab)\n    ? params.changesInspectorTab\n    : TABS[0]\n\n  const setPaneRouterTab = (tab: (typeof TABS)[number]) =>\n    setParams({\n      ...params,\n      changesInspectorTab: tab,\n      // Reset the since when changing the tab, as it's not relevant for the history tab\n      since: tab === 'history' ? undefined : params?.since,\n    })\n\n  return (\n    <FadeInFlex direction=\"column\" padding={0} height=\"fill\" data-ready={isReady ? '' : undefined}>\n      <Card paddingBottom={1}>\n        <Flex align=\"center\" padding={3} gap={2}>\n          <TabList space={1} flex={1}>\n            <Tab\n              aria-controls=\"history-panel\"\n              id=\"history-tab\"\n              label={t('changes.tab.history')}\n              onClick={() => setPaneRouterTab('history')}\n              selected={paneRouterTab === 'history'}\n            />\n            <Tab\n              aria-controls=\"review-changes-panel\"\n              id=\"changes-tab\"\n              label={t('changes.tab.review-changes')}\n              onClick={() => setPaneRouterTab('review')}\n              selected={paneRouterTab === 'review'}\n            />\n          </TabList>\n          <Button\n            aria-label={t('changes.action.close-label')}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={props.onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Flex>\n      </Card>\n\n      <TabPanel\n        aria-labelledby=\"history-tab\"\n        height=\"fill\"\n        hidden={paneRouterTab !== 'history'}\n        id=\"history-panel\"\n      >\n        {source.beta?.eventsAPI?.documents ? (\n          <EventsSelector showList={paneRouterTab === 'history'} />\n        ) : (\n          <HistorySelector showList={paneRouterTab === 'history'} />\n        )}\n      </TabPanel>\n\n      <TabPanel\n        aria-labelledby=\"review-tab\"\n        hidden={paneRouterTab !== 'review'}\n        id=\"review-panel\"\n        height=\"fill\"\n      >\n        {source.beta?.eventsAPI?.documents ? (\n          <>\n            {paneRouterTab === 'review' ? (\n              <EventsInspector showChanges={paneRouterTab === 'review'} />\n            ) : null}\n          </>\n        ) : (\n          <ChangesInspector showChanges={paneRouterTab === 'review'} />\n        )}\n      </TabPanel>\n    </FadeInFlex>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {type DocumentInspector, useTranslation} from 'sanity'\n\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesTabs} from './ChangesTabs'\n\nexport const changesInspector: DocumentInspector = {\n  name: HISTORY_INSPECTOR_NAME,\n  useMenuItem: () => {\n    const {features} = useStructureTool()\n    const {t} = useTranslation()\n\n    return {\n      hidden: !features.reviewChanges,\n      icon: RestoreIcon,\n      title: t('changes.title'),\n    }\n  },\n  component: ChangesTabs,\n  onClose: ({params}) => ({\n    params: {\n      ...params,\n      since: undefined,\n      rev: undefined,\n      changesInspectorTab: undefined,\n      historyVersion: undefined,\n    },\n  }),\n  onOpen: ({params}) => ({params: {...params, since: '@lastPublished'}}),\n}\n","/* eslint-disable no-loop-func */\n\nimport {type Path, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {isArray, isRecord} from 'sanity'\n\nexport function getPathTitles(options: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}): Array<{name: string; title?: string}> {\n  const {path, schemaType, value} = options\n  const result: Array<{name: string; title?: string}> = []\n\n  let s = schemaType\n  let v: unknown = value\n\n  for (const segment of path) {\n    // field name\n    if (typeof segment === 'string') {\n      if (!isRecord(v) && v !== undefined) {\n        throw new Error(`Parent value is not an object, cannot get path segment: .${segment}`)\n      }\n\n      if (s.jsonType !== 'object') {\n        throw new Error(\n          `Parent type is not an object schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const field = s.fields.find((f) => f.name === segment)\n\n      if (!field) {\n        result.push({name: segment})\n        return result\n      }\n\n      s = field.type\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item index\n    if (typeof segment === 'number') {\n      if (!isArray(v) && v !== undefined) {\n        throw new Error(`Parent value is not an array, cannot get path segment: [${segment}]`)\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: [${segment}]`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const itemType = s.of.find((ofType) => {\n        if (typeof v === 'string') {\n          return ofType.jsonType === 'string'\n        }\n\n        if (typeof v === 'number') {\n          return ofType.jsonType === 'number'\n        }\n\n        if (typeof v === 'boolean') {\n          return ofType.jsonType === 'boolean'\n        }\n\n        if (isRecord(v)) {\n          return ofType.name === v?._type\n        }\n\n        return false\n      })\n\n      if (!itemType) {\n        throw new Error(`Item type not found: [${segment}]`)\n      }\n\n      s = itemType\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item key\n    if (isRecord(segment) && segment._key) {\n      if (!isArray(v)) {\n        throw new Error(\n          `Parent value is not an array, cannot get path segment: [_key == ${segment}]`,\n        )\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      const values = v ?? []\n\n      v = values.find((i) => isRecord(i) && i._key === segment._key)\n\n      if (!isRecord(v)) {\n        throw new Error(`Array item not found: [_key == ${segment._key}]`)\n      }\n\n      const ofType = s.of.find((i) => isRecord(v) && i.name === v?._type)\n\n      if (!ofType) {\n        throw new Error(`Array item type not found: .${v?._type}`)\n      }\n\n      s = ofType\n\n      result.push(s)\n\n      continue\n    }\n\n    throw new Error(`Invalid path segment: ${JSON.stringify(segment)}`)\n  }\n\n  return result\n}\n","import {\n  ErrorOutlineIcon,\n  type IconComponent,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {\n  type ObjectSchemaType,\n  type Path,\n  type SanityDocument,\n  type SchemaType,\n  type ValidationMarker,\n} from '@sanity/types'\nimport {Box, Card, type CardTone, Flex, Stack, Text} from '@sanity/ui'\nimport {type ErrorInfo, Fragment, useCallback, useMemo, useState} from 'react'\nimport {type DocumentInspectorProps, useTranslation} from 'sanity'\n\nimport {ErrorBoundary} from '../../../../../ui-components'\nimport {DocumentInspectorHeader} from '../../documentInspector'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {getPathTitles} from './getPathTitles'\n\nconst MARKER_ICON: Record<'error' | 'warning' | 'info', IconComponent> = {\n  error: ErrorOutlineIcon,\n  warning: WarningOutlineIcon,\n  info: InfoOutlineIcon,\n}\n\nconst MARKER_TONE: Record<'error' | 'warning' | 'info', CardTone> = {\n  error: 'critical',\n  warning: 'caution',\n  info: 'primary',\n}\n\nexport function ValidationInspector(props: DocumentInspectorProps) {\n  const {onClose} = props\n  const {onFocus, onPathOpen, schemaType, validation, value} = useDocumentPane()\n  const {t} = useTranslation('validation')\n\n  const handleOpen = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onFocus, onPathOpen],\n  )\n\n  return (\n    <Flex direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <DocumentInspectorHeader\n        as=\"header\"\n        closeButtonLabel={t('panel.close-button-aria-label')}\n        flex=\"none\"\n        onClose={onClose}\n        title={t('panel.title')}\n      />\n\n      <Card flex={1} overflow=\"auto\" padding={3}>\n        {validation.length === 0 && (\n          <Box padding={2}>\n            <Text muted size={1}>\n              {t('panel.no-errors-message')}\n            </Text>\n          </Box>\n        )}\n\n        {validation.length > 0 && (\n          <Stack space={2}>\n            {validation.map((marker, i) => (\n              <ValidationCard\n                // eslint-disable-next-line react/no-array-index-key\n                key={i}\n                marker={marker}\n                onOpen={handleOpen}\n                schemaType={schemaType}\n                value={value}\n              />\n            ))}\n          </Stack>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n\nfunction ValidationCard(props: {\n  marker: ValidationMarker\n  onOpen: (path: Path) => void\n  schemaType: ObjectSchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {marker, onOpen, schemaType, value} = props\n  const handleOpen = useCallback(() => onOpen(marker.path), [marker, onOpen])\n  const [errorInfo, setErrorInfo] = useState<{error: Error; info: ErrorInfo} | null>(null)\n  const Icon = MARKER_ICON[marker.level]\n\n  return (\n    <ErrorBoundary onCatch={setErrorInfo}>\n      {errorInfo && (\n        <Card padding={3} radius={2} tone=\"critical\">\n          <Text size={1}>{errorInfo.error.message}</Text>\n        </Card>\n      )}\n\n      {!errorInfo && (\n        <Card\n          __unstable_focusRing\n          as=\"button\"\n          onClick={handleOpen}\n          padding={3}\n          radius={2}\n          tone={MARKER_TONE[marker.level]}\n        >\n          <Flex align=\"flex-start\" gap={3}>\n            <Box flex=\"none\">\n              <Text size={1}>\n                <Icon />\n              </Text>\n            </Box>\n\n            <Stack flex={1} space={2}>\n              <DocumentNodePathBreadcrumbs\n                path={marker.path}\n                schemaType={schemaType}\n                value={value}\n              />\n\n              <Text muted size={1}>\n                {marker.message}\n              </Text>\n            </Stack>\n          </Flex>\n        </Card>\n      )}\n    </ErrorBoundary>\n  )\n}\n\nfunction DocumentNodePathBreadcrumbs(props: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {path, schemaType, value} = props\n\n  const pathTitles = useMemo(() => {\n    try {\n      return getPathTitles({path, schemaType, value})\n    } catch (e) {\n      console.error(e)\n    }\n    return null\n  }, [path, schemaType, value])\n\n  if (!pathTitles?.length) return null\n\n  return (\n    <Text size={1}>\n      {pathTitles.map((t, i) => (\n        <Fragment key={i}>\n          {i > 0 && <span style={{color: 'var(--card-muted-fg-color)', opacity: 0.5}}> / </span>}\n          <span style={{fontWeight: 500}}>{t.title || t.name}</span>\n        </Fragment>\n      ))}\n    </Text>\n  )\n}\n","import {CheckmarkCircleIcon, ErrorOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {useMemo} from 'react'\nimport {\n  type DocumentInspector,\n  type DocumentInspectorMenuItem,\n  type DocumentInspectorUseMenuItemProps,\n  type FormNodeValidation,\n  isValidationError,\n  isValidationWarning,\n  usePerspective,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {VALIDATION_INSPECTOR_NAME} from '../../constants'\nimport {ValidationInspector} from './ValidationInspector'\n\nfunction useMenuItem(props: DocumentInspectorUseMenuItemProps): DocumentInspectorMenuItem {\n  const {documentId, documentType} = props\n  const {t} = useTranslation('validation')\n  const {selectedReleaseId} = usePerspective()\n  const {validation: validationMarkers} = useValidationStatus(\n    documentId,\n    documentType,\n    selectedReleaseId,\n  )\n\n  const validation: FormNodeValidation[] = useMemo(\n    () =>\n      validationMarkers.map((item) => ({\n        level: item.level,\n        message: item.message,\n        path: item.path,\n      })),\n    [validationMarkers],\n  )\n\n  const hasErrors = validation.some(isValidationError)\n  const hasWarnings = validation.some(isValidationWarning)\n\n  const icon = useMemo(() => {\n    if (hasErrors) return ErrorOutlineIcon\n    if (hasWarnings) return WarningOutlineIcon\n    return CheckmarkCircleIcon\n  }, [hasErrors, hasWarnings])\n\n  const tone = useMemo(() => {\n    if (hasErrors) return 'critical'\n    if (hasWarnings) return 'caution'\n    return 'positive'\n  }, [hasErrors, hasWarnings])\n\n  return {\n    hidden: validation.length === 0,\n    icon,\n    title: t('panel.title'),\n    tone,\n    showAsAction: true,\n  }\n}\n\nexport const validationInspector: DocumentInspector = {\n  name: VALIDATION_INSPECTOR_NAME,\n  component: ValidationInspector,\n  useMenuItem,\n}\n","import {omit} from 'lodash'\nimport {decodeJsonParams, encodeJsonParams, route} from 'sanity/router'\n\nimport {type RouterPaneGroup, type RouterPanes, type RouterPaneSibling} from './types'\n\nconst EMPTY_PARAMS = {}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToState(params: string): Record<string, unknown> {\n  try {\n    return JSON.parse(decodeURIComponent(params))\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn('Failed to parse JSON parameters')\n    return {}\n  }\n}\n\nexport function encodePanesSegment(panes: RouterPanes): string {\n  return (panes || [])\n    .map((group) => group.map(encodeChunks).join('|'))\n    .map(encodeURIComponent)\n    .join(';')\n}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToPath(params: Record<string, unknown>): string {\n  return JSON.stringify(params)\n}\n\n// http://localhost:3333/intent/create/template=book-by-author;type=book/eyJhdXRob3JJZCI6Imdycm0ifQ==\n\n/**\n * @internal\n */\nexport function toState(pathSegment: string): RouterPaneGroup[] {\n  return parsePanesSegment(decodeURIComponent(pathSegment))\n}\n\n/**\n * @internal\n */\nexport function toPath(panes: RouterPaneGroup[]): string {\n  return encodePanesSegment(panes)\n}\n\nexport const router = route.create('/', [\n  // \"Asynchronous intent resolving\" route\n  route.intents('/intent'),\n\n  // Legacy fallback route, will be redirected to new format\n  route.create('/edit/:type/:editDocumentId', [\n    route.create({\n      path: '/:params',\n      transform: {params: {toState: legacyEditParamsToState, toPath: legacyEditParamsToPath}},\n    }),\n  ]),\n\n  // The regular path - when the intent can be resolved to a specific pane\n  route.create({\n    path: '/:panes',\n    // Legacy URLs, used to handle redirects\n    children: [route.create('/:action', route.create('/:legacyEditDocumentId'))],\n    transform: {\n      panes: {toState, toPath},\n    },\n  }),\n])\n\n// old: authors;knut,{\"template\":\"diaryEntry\"}\n// new: authors;knut,view=diff,eyJyZXYxIjoiYWJjMTIzIiwicmV2MiI6ImRlZjQ1NiJ9|latest-posts\n\nconst panePattern = /^([.a-z0-9_-]+),?({.*?})?(?:(;|$))/i\nconst isParam = (str: string) => /^[a-z0-9]+=[^=]+/i.test(str)\nconst isPayloadLike = (str: string) => /^[A-Za-z0-9\\-_]+(?:={0,2})$/.test(str)\nconst exclusiveParams = ['view', 'since', 'rev', 'inspect', 'comment']\n\ntype Truthy<T> = T extends false\n  ? never\n  : T extends ''\n    ? never\n    : T extends 0\n      ? never\n      : T extends 0n\n        ? never\n        : T extends null | undefined\n          ? NonNullable<T>\n          : T\nconst isTruthy = Boolean as (t: unknown) => boolean as <T>(t: T) => t is Truthy<T>\n\nfunction parseChunks(chunks: string[], initial: RouterPaneSibling): RouterPaneSibling {\n  const sibling: RouterPaneSibling = {...initial, params: EMPTY_PARAMS, payload: undefined}\n  return chunks.reduce((pane, chunk) => {\n    if (isParam(chunk)) {\n      const key = chunk.slice(0, chunk.indexOf('='))\n      const value = chunk.slice(key.length + 1)\n      pane.params = {...pane.params, [decodeURIComponent(key)]: decodeURIComponent(value)}\n    } else if (isPayloadLike(chunk)) {\n      pane.payload = tryParseBase64Payload(chunk)\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn('Unknown pane segment: %s - skipping', chunk)\n    }\n\n    return pane\n  }, sibling)\n}\n\nfunction encodeChunks(pane: RouterPaneSibling, index: number, group: RouterPaneGroup): string {\n  const {payload, params = {}, id} = pane\n  const [firstSibling] = group\n  const paneIsFirstSibling = pane === firstSibling\n  const sameAsFirst = index !== 0 && id === firstSibling.id\n  const encodedPayload =\n    typeof payload === 'undefined' ? undefined : encodeJsonParams(payload as any)\n\n  const encodedParams = Object.entries(params)\n    .filter((entry): entry is [string, string] => {\n      const [key, value] = entry\n      if (!value) return false\n      if (paneIsFirstSibling) return true\n\n      // omit the value if it's the same as the value from the first sibling\n      const valueFromFirstSibling = firstSibling.params?.[key]\n      if (value === valueFromFirstSibling && !exclusiveParams.includes(key)) return false\n      return true\n    })\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n\n  return (\n    [sameAsFirst ? '' : id]\n      .concat([encodedParams.length > 0 && encodedParams, encodedPayload].filter(isTruthy).flat())\n      .join(',') || ','\n  )\n}\n\nexport function parsePanesSegment(str: string): RouterPanes {\n  if (str.indexOf(',{') !== -1) {\n    return parseOldPanesSegment(str)\n  }\n\n  return str\n    .split(';')\n    .map((group) => {\n      const [firstSibling, ...restOfSiblings] = group.split('|').map((segment) => {\n        const [id, ...chunks] = segment.split(',')\n        return parseChunks(chunks, {id})\n      })\n\n      return [\n        firstSibling,\n        ...restOfSiblings.map((sibling) => ({\n          ...firstSibling,\n          ...sibling,\n          id: sibling.id || firstSibling.id,\n          params: {...omit(firstSibling.params, exclusiveParams), ...sibling.params},\n          payload: sibling.payload || firstSibling.payload,\n        })),\n      ]\n    })\n    .filter((group) => group.length > 0)\n}\n\nfunction parseOldPanesSegment(str: string): RouterPanes {\n  const chunks: RouterPaneGroup = []\n\n  let buffer = str\n  while (buffer.length) {\n    const [match, id, payloadChunk] = buffer.match(panePattern) || []\n    if (!match) {\n      buffer = buffer.slice(1)\n      continue\n    }\n\n    const payload = payloadChunk && tryParsePayload(payloadChunk)\n    chunks.push({id, payload})\n\n    buffer = buffer.slice(match.length)\n  }\n\n  return [chunks]\n}\n\nfunction tryParsePayload(json: string) {\n  try {\n    return JSON.parse(json)\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n\nfunction tryParseBase64Payload(data: string): unknown {\n  try {\n    return data ? decodeJsonParams(data) : undefined\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {definePlugin} from 'sanity'\n\nimport {\n  DeleteAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  HistoryRestoreAction,\n  PublishAction,\n  UnpublishAction,\n} from './documentActions'\nimport {LiveEditBadge} from './documentBadges'\nimport {getIntentState} from './getIntentState'\nimport {structureUsEnglishLocaleBundle} from './i18n'\nimport {changesInspector} from './panes/document/inspectors/changes'\nimport {validationInspector} from './panes/document/inspectors/validation'\nimport {router} from './router'\nimport {type StructureToolOptions} from './types'\n\nconst documentActions = [\n  PublishAction,\n  UnpublishAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  DeleteAction,\n  HistoryRestoreAction,\n]\n\nconst documentBadges = [LiveEditBadge]\n\nconst inspectors = [validationInspector, changesInspector]\n\n/**\n * The structureTool is a studio plugin which adds the “structure tool” – a tool within\n * Sanity Studio in which content editors can drill down to specific documents to edit them.\n * You can configure your Studio's structure tool(s).\n *\n * @public\n * @param options - Options for the structure tool. See {@link StructureToolOptions}\n * @example Minimal example\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n *\n * export default defineConfig((\n *  // ...\n *  plugins: [\n *    structureTool() // use defaults\n *  ]\n * })\n * ```\n *\n * @example To customise your structure tool\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n * import { FaCar } from 'react-icons'\n\n * export default defineConfig((\n *\t // ...\n *   plugins: [\n *    structureTool({\n *      name: 'cars',\n *      title: 'Cars',\n *      icon: FaCar,\n *      structure: (S) => S.documentTypeList('car'),\n *      defaultDocumentNode: (S) =>\n *        S.document().views([\n *          S.view.form(),\n *          S.view.component(Preview).title('Preview')\n *        ])\n *    })\n *  ]\n * })\n * ```\n * */\nexport const structureTool = definePlugin<StructureToolOptions | void>((options) => {\n  const icon = options?.icon || MasterDetailIcon\n\n  return {\n    name: 'sanity/structure',\n    document: {\n      actions: (prevActions) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document actions already exist in the Studio config\n        return Array.from(new Set([...prevActions, ...documentActions]))\n      },\n      badges: (prevBadges) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document badges already exist in the Studio config\n        return Array.from(new Set([...prevBadges, ...documentBadges]))\n      },\n      inspectors: (prevInspectors) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the inspectors already exist in the Studio config\n        return Array.from(new Set([...prevInspectors, ...inspectors]))\n      },\n    },\n\n    tools: [\n      {\n        name: options?.name || 'structure',\n        title: options?.title || 'Structure',\n        icon,\n        component: lazy(() => import('./components/structureTool')),\n        canHandleIntent: (intent, params) => {\n          if (intent === 'create') return canHandleCreateIntent(params)\n          if (intent === 'edit') return canHandleEditIntent(params)\n          return false\n        },\n        getIntentState,\n        // Controlled by sanity/src/structure/components/structureTool/StructureTitle.tsx\n        controlsDocumentTitle: true,\n        options,\n        router,\n        __internalApplicationType: 'sanity/structure',\n      },\n    ],\n\n    i18n: {\n      bundles: [structureUsEnglishLocaleBundle],\n    },\n  }\n})\n\nfunction canHandleCreateIntent(params: Record<string, unknown>) {\n  // We can't handle create intents without a `type` parameter\n  if (!('type' in params)) {\n    return false\n  }\n\n  // We can handle any create intent as long as it has a `type` parameter,\n  // but we also know how to deal with templates, where other tools might not\n  return 'template' in params ? {template: true} : true\n}\n\nfunction canHandleEditIntent(params: Record<string, unknown>) {\n  // We can't handle edit intents without an `id` parameter\n  if (!('id' in params)) {\n    return false\n  }\n\n  // We can handle any edit intent with a document ID, but we're best at `structure` mode\n  // This ensures that other tools that can handle modes such as `presentation` or `batch`\n  // can take precedence over the structure tool\n  return 'mode' in params ? {mode: params.mode === 'structure'} : true\n}\n"],"names":["DocTitle","props","$","_c","document","documentValue","schema","useSchema","t0","_type","get","schemaType","t","useTranslation","structureLocaleNamespace","t1","value","error","useValuePreview","t2","t3","message","errorMessage","title","jsx","color","Fragment","ChevronWrapper","styled","Box","CrossDatasetReferencesDetails","details","CrossDatasetReferencesSummary","summary","Table","table","theme","rem","sanity","space","DocumentIdFlex","Flex","OtherReferenceCount","difference","totalCount","references","length","count","Text","Symbol","for","InfoOutlineIcon","t4","Tooltip","t5","jsxs","Inline","PaneItemPreview","icon","layout","presence","versionsInfo","useDocumentVersionInfo","_id","perspectiveStack","usePerspective","documentPreviewStore","getPreviewStateObservable","previewStateObservable","snapshot","isLoading","original","previewIsLoading","useObservable","draft","published","versions","TooltipDelayGroupProvider","DocumentPreviewPresence","DocumentStatusIndicator","status","DocumentStatus","tooltip","getPreviewValueWithFallback","fallback","t6","SanityDefaultPreview","BackLink","forwardRef","ref","routerPanesState","groupIndex","useContext","PaneRouterContext","slice","panes","state","StateLink","usePaneLayout","pane","PaneLayoutContext","Error","ChildLink","childId","childParameters","childPayload","rest","id","params","payload","ParameterizedLink","currentPanes","siblingIndex","nextParams","useUnique","nextPayload","currentGroup","currentSibling","nextSibling","nextGroup","nextPanes","nextState","t7","ReferenceChildLink","children","documentId","documentType","parentRefPath","template","pathToString","type","usePaneRouter","EMPTY_ARRAY","ReferencePreviewLink","onClick","getPublishedId","documentPresence","useDocumentPresence","useDocumentPreviewStore","name","linkProps","PreviewCard","ConfirmDeleteDialogBody","crossDatasetReferences","internalReferences","documentTitle","action","datasetNames","hasUnknownDatasetNames","onReferenceLinkClick","toast","useToast","item","UnknownIcon","renderPreviewItem","DocumentTitle","Translate","T0","T1","T2","t10","t11","t12","t8","t9","normalizedDatasetNames","datasetSubtitle","datasets","join","context","t13","WarningOutlineIcon","t14","t15","Card","t16","Stack","map","item_0","borderTop","undefined","DocumentsIcon","documentCount","ChevronDownIcon","minWidth","filter","_temp","t17","index","projectId","datasetName","Button","CopyIcon","content","navigator","clipboard","writeText","catch","push","reference","isClientError","e","POLL_INTERVAL","visiblePoll$","getVisiblePoll$","fromEvent","pipe","startWith","visibilityState","distinctUntilChanged","switchMap","visible","timer","EMPTY","shareReplay","refCount","bufferSize","getDocumentExistence","versionedClient","draftId","getDraftId","publishedId","requestOptions","uri","getDataUrl","json","query","excludeContent","tag","observable","request","omitted","nonExistant","doc","reason","some","fetchCrossDatasetReferences","checkDocumentId","of","currentDataset","config","dataset","url","catchError","statusCode","useInternalReferences","createHookFromObservableFactory","documentStore","listenQuery","fetch","listen","transitions","throttleTime","useCrossDatasetReferences","useReferringDocuments","useClient","DEFAULT_STUDIO_CLIENT_OPTIONS","useDocumentStore","isInternalReferencesLoading","isCrossDatasetReferencesLoading","Array","from","Set","Boolean","sort","projectIds","_temp2","_temp3","_temp4","crossDatasetReference_1","crossDatasetReference","crossDatasetReference_0","DialogBody","LoadingContainer","attrs","align","direction","justify","ConfirmDeleteDialog","onCancel","onConfirm","dialogId","useId","showConfirmButton","text","cancelButton","confirmButton","LoadingBlock","Dialog","ConfirmDeleteDialogContainer","setError","useState","handleRetry","tone","ErrorBoundary","Delay","ms","ready","setReady","timeoutId","setTimeout","clearTimeout","useEffect","PANE_DEBUG","PANE_COLLAPSED_WIDTH","PANE_DEFAULT_MIN_WIDTH","Root","Layer","PaneDivider","disabled","element","resize","dragging","setDragging","event","preventDefault","startX","pageX","handleMouseMove","deltaX","handleMouseUp","e_0","window","removeEventListener","addEventListener","handleMouseDown","Pane","forwardedRef","currentMaxWidthProp","currentMinWidthProp","maxWidthProp","minWidthProp","restProps","currentMinWidth","currentMaxWidth","flex","maxWidth","selected","flexProp","rootElement","setRootElement","collapse","collapsed","layoutCollapsed","expand","expandedElement","mount","p","find","indexOf","paneIndex","nextPane","isLast","expanded","nextCollapsed","useRef","current","useImperativeHandle","refValue","setRef","useLayoutEffect","handleCollapse","handleExpand","contextValue","bb0","bb1","hidden","LegacyLayerProvider","divider","Infinity","t18","style","t19","t20","t21","t22","t23","t24","BoundaryElementProvider","t25","t26","IsLastPaneProvider","t27","t28","displayName","usePane","PaneContext","PaneContent","as","overflow","padding","toLowerCaseNoSpaces","str","toLocaleLowerCase","replaceAll","MENU_GROUP_POPOVER_PROPS","constrainSize","placement","portal","PaneMenuButtonItem","isAfterGroup","node","getI18nText","useGetI18nText","MenuDivider","child","childIndex","key","child_0","childIndex_0","MenuGroup","PaneContextMenuItemResolver","intent","PaneContextMenuItem","tooltipContent","useI18nText","hotkey","split","iconRight","CheckmarkIcon","onAction","MenuItem","TooltipOfDisabled","PaneContextIntentMenuItem","intentLink","useIntentLink","handleClick","href","CONTEXT_MENU_POPOVER_PROPS","nodesHasTone","nodes","PaneContextMenuButton","actionsNodes","hasCritical","hasCaution","ContextMenuButton","nodeIndex","Menu","MenuButton","RootCard","PaneFooter","$border","css","Layout","TitleCard","fg","bg","card","enabled","TitleTextSkeleton","TextSkeleton","TitleText","PaneHeader","actions","backButton","border","contentAfter","loading","subActions","tabs","tabIndex","paneElement","paneRect","useElementRect","height","innerHeight","width","layoutStyle","handleTitleClick","handleLayoutClick","showTabsOrSubActions","LayerProvider","getDisabledReason","disabledReason","ariaLabel","isDisabled","PaneHeaderActionButton","warn","PaneHeaderMenuItemActionButton","hotkeys","StatusButton","PaneHeaderActionIntentButton","PaneHeaderMenuGroupActionButton","idx","_calcPaneResize","cache","left","right","sum","leftMinWidth","rightMinWidth","leftMaxWidth","Math","min","rightMaxWidth","minDeltaX","rightMinDeltaX","maxDeltaX","leftMaxDeltaX","_deltaX","max","leftW","rightW","leftFlex","rightFlex","_getDOMPath","el","path","parentElement","childNodes","unshift","EMPTY_PATH","_sortElements","elements","WeakMap","set","_sortByElementPath","a","b","_a","_b","len","i","aIndex","bIndex","createPaneLayoutController","observers","optionsMap","userCollapsedElementSet","rootWidth","resizeDataMap","Map","resizing","add","_notifyObservers","delete","options","splice","leftElement","leftIndex","leftOptions","rightElement","rightOptions","offsetWidth","leftResizeData","rightResizeData","nextRootElement","setRootWidth","nextRootWidth","subscribe","observer","_elements","dataMap","lastElement","collapsedWidth","remaingWidth","userCollapsed","has","sizeCollapsed","resizeData","data","PaneLayout","onCollapse","onExpand","controller","setState","paneLayout","isMenuNodeButton","renderAsButton","isNotMenuNodeButton","negate","resolveMenuNodes","fieldActions","menuItems","menuItemGroups","keyOffset","mapFieldActionToPaneMenuNode","groups","itemGroup","g","i18n","ungroupedItems","group","shortcut","actionHandler","showAsAction","childIdx","IntentButton","linkRef","IntentLink","searchParams","Link","InsufficientPermissionsMessageTooltip","reveal","currentUser","useCurrentUser","InsufficientPermissionsMessage","POPOVER_PROPS","getIntent","templates","version","typeName","templateId","baseParams","initialDocumentId","parameters","PaneHeaderCreateButton","templateItems","useTemplates","selectedReleaseId","selectedPerspective","isReleaseActive","useIsReleaseActive","tCore","templatePermissions","isTemplatePermissionsLoading","useTemplatePermissions","every","nothingGranted","reduce","permissionsById","AddIcon","isPublishedPerspective","disabledByPerspectiveTooltipProps","firstItem","granted","itemIndex","disabled_0","intent_0","acc","permission_0","permission","isNonNullable","hashObject","sortObject","v","isArray","Object","entries","keyA","keyB","localeCompare","JSON","stringify","parse","PaneHeaderActions","memo","initialValueTemplateItems","initialValueTemplateItemsFromStructure","actionHandlers","EMPTY_OBJECT","handleAction","useCallback","console","handler","menuNodes","useMemo","actionNodes","contextMenuNodes","initialValueTemplateItemFromMenuItems","menuItemIndex","intentParams","templateParams","description","combinedInitialValueTemplates","uniqBy","MissingSchemaType","Code","getIconWithFallback","defaultIcon","PaneItem","pressed","margin","marginBottom","marginTop","hasSchemaType","clicked","setClicked","isSanityDocument","DocumentIcon","opacity","ChevronRightIcon","FolderIcon","preview","metaKey","preloading","setPreload","timeoutRef","startTransition","handleMouseEnter","handleMouseLeave","PreloadDocumentPane","useEditState","RenderActionCollectionState","actionProps","onActionComplete","GetHookCollectionState","RenderBadgeCollectionState","badges","badgeProps","useCreatePathSyncChannel","Subject","DIFF_VIEW_SEARCH_PARAMETER","DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER","DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER","DIFF_SEARCH_PARAM_DELIMITER","useDiffViewRouter","navigate","routerState","useRouter","mode","previousDocument","nextDocument","next","fromPairs","_searchParams","toPairs","navigateDiffView","exitDiffView","includes","diffViewModes","isDiffViewMode","maybeDiffViewMode","useDiffViewState","onParamsError","URLSearchParams","anyParamSet","param","parseParams","result","errors","isActive","previousDocumentType","previousDocumentId","nextDocumentType","nextDocumentId","documents","previous","useScrollMirror","existentElements","scrollMirror","ScrollMirror","destroy","VersionModeHeaderLayout","header","VersionModeHeaderLayoutSection","div","VersionModeHeader","documentVersions","useDocumentVersions","activeReleases","useActiveReleases","releasesIds","flatMap","getVersionFromId","releases","release","releaseId","getReleaseIdFromReleaseDocumentId","onSelectPreviousRelease","selectedDocumentId","onSelectNextRelease","TransferIcon","justifySelf","CloseIcon","VersionMenu","onSelectRelease","role","findRelease","tStructure","getMenuButtonProps","VersionMenuItem","onSelect","isSelected","getVersionId","ReleaseAvatar","getReleaseTone","metadata","releaseType","formatRelativeLocalePublishDate","isReleaseScheduledOrScheduling","LockIcon","isReleaseDocument","isPublishedId","isDraftId","DialogLayout","pickDocumentLayoutComponent","plugin","components","unstable_layout","usePathSyncChannel","syncChannel","source","state_0","deepEquals","Scroller","DiffViewPaneLayout","Container","UiContainer","DiffViewPane","scrollElement","compareDocument","containerElement","portalElement","setPortalElement","boundaryElement","setBoundaryElement","pick","defaultComponent","DocumentLayout","useMiddlewareComponents","isInteractive","onOpenReviewChanges","noop","onSetFocus","isReviewChangesOpen","DialogProvider","PortalProvider","ConnectorContext","ChangeIndicatorsTracker","VirtualizerScrollInstanceProvider","DiffViewDocument","compareValue","useCompareValue","patchChannel","perspectiveName","selectedPerspectiveName","comparisonValue","useDocumentForm","collapsedFieldSets","collapsedPaths","documentForm","formState","onBlur","onChange","onFocus","onProgrammaticFocus","onSetActiveFieldGroup","onSetCollapsedFieldSet","onSetCollapsedPath","pathSyncChannel","onPathOpen","subscription","unsubscribe","CommentsEnabledContext","FormBuilder","focusPath","changed","focused","validation","members","isVersionId","compareDocumentEditState","createPatchChannel","EditReferenceLinkComponent","_documentId","DiffView","previousPaneElement","setPreviousPaneElement","nextPaneElement","setNextPaneElement","referenceInputOptionsContext","ReferenceInputOptionsContext","disableNew","diffViewReferenceInputOptionsContext","DiffViewDocumentLayout","input","ErrorPane","paneKey","getWaitMessages","thresholds","messageKey","isDev","src","merge","threshold","mapTo","delay","DEFAULT_MESSAGE_KEY","Content","LoadingPane","messageProp","resolvedMessage","currentMessage","setCurrentMessage","sub","contentElement","setContentElement","mounted","setMounted","_raf2","DELAY","useDocumentPane","documentPane","DocumentPaneContext","CommentsWrapper","CommentsEnabledProvider","CommentsProviderWrapper","useCommentsEnabled","connectionState","inspector","openInspector","setParams","createPathWithParams","selectedCommentId","comment","paramsRef","commentId","inspect","COMMENTS_INSPECTOR_NAME","location","origin","getCommentLink","handleClearSelectedComment","handleOpenCommentsInspector","CommentsProvider","useFilteredReleases","displayed","archivedReleases","useArchivedReleases","isCreatingDocument","_createdAt","notCurrentReleases","currentReleases","inCreation","versionDocExists","historyVersion","archivedRelease","r","useDocumentIdStack","editState","filteredReleases","systemStack","releaseStack","concat","stack","findIndex","id_0","position","previousId","nextId","useStructureTool","structureTool","StructureToolContext","DOCUMENT_PANEL_MIN_WIDTH","DOCUMENT_PANEL_INITIAL_MIN_WIDTH","DOCUMENT_INSPECTOR_MIN_WIDTH","DOCUMENT_INSPECTOR_MAX_WIDTH","EMPTY_PARAMS","INSPECT_ACTION_PREFIX","DEFAULT_MENU_ITEM_GROUPS","HISTORY_INSPECTOR_NAME","VALIDATION_INSPECTOR_NAME","DocumentInspectorMenuItemsResolver","inspectors","onMenuItems","setMenuItems","newFieldActions","setMenuItem","prev","InspectorMenuItems","useMenuItem","defineInspectorMenuItemComponent","InspectorMenuItem","menuItem","useDocumentTitle","subscribed","IGNORE_OPS","DocumentOperationResults","pushToast","documentPaneValue","documentTitleInfo","titleError","useDocumentOperationEvent","prevEvent","paneRouter","op","documentTitleBase","cleanupId","closable","duration","Strong","closeCurrentAndAfter","isLiveEditEnabled","liveEdit","zIndex","lineHeight","DocumentInspectorHeader","closeButtonLabel","forwardedAs","onClose","DocumentInspectorPanel","closeInspector","features","handleClose","Component","component","resizablePanes","Resizable","STRUCTURE_TOOL_NAMESPACE","useStructureToolSetting","namespace","defaultValue","keyValueStore","useKeyValueStore","keyValueStoreKey","getKey","value_0","newValue","setKey","VIEW_MODE_PARSED","VIEW_MODE_RAW","VIEW_MODES","lru","LRU","maxSize","isExpanded","keyPath","cached","isRecord","toggleExpanded","selectElement","sel","getSelection","range","createRange","removeAllRanges","selectNodeContents","addRange","select","currentTarget","maybeSelectAll","keyCode","ctrlKey","isDocumentLike","isString","JSONInspectorWrapper","fonts","code","family","sizes","fontSize","syntax","property","constant","string","boolean","number","Search","target","handleChange","TextInput","SearchIcon","InspectDialog","onInspectClose","dialogIdPrefix","viewModeId","onViewModeChange","viewMode","setParsedViewMode","setRawViewMode","bottom","Tab","TabList","outline","JsonInspector","ignoreCase","TabPanel","Banner","Icon","paddingY","DeletedDocumentBanners","isDeleted","isDeleting","isDraftPerspective","DeletedDocumentBanner","lastNonDeletedRevId","restore","useDocumentOperation","navigateIntent","execute","handleRestore","ReadOnlyIcon","ArchivedReleaseBanner","DocumentRemoveIcon","DeprecatedDocumentTypeBanner","isDeprecatedSchemaType","deprecated","ErrorOutlineIcon","AskToEditDialogOpened","defineEvent","AskToEditRequestSent","MAX_NOTE_LENGTH","RequestPermissionDialog","onRequestSubmitted","telemtry","useTelemetry","useProjectId","apiVersion","client","zOffset","useZIndex","isSubmitting","setIsSubmitting","note","setNote","msgError","setMsgError","hasTooManyRequests","setHasTooManyRequests","hasBeenDenied","setHasBeenDenied","adminRole","roles","requestedRole","method","body","requestUrl","then","log","err","response","errMessage","finally","onSubmit","fullscreen","role_0","appliesToUsers","LOADING_STATE","EMPTY_STATE","DECLINED_STATE","PENDING_STATE","EXPIRED_STATE","useRoleRequestsStatus","checkRoleRequests","checkRoleRequests$","requests","projectRequests","resourceId","declinedRequest","isAfter","addWeeks","Date","createdAt","isBefore","InsufficientPermissionBanner","requiredPermission","roleRequestStatus","requestStatusLoading","requestStatusError","requestSent","setRequestSent","requestPending","currentUserRoles","isOnlyViewer","showRequestPermissionDialog","setShowRequestPermissionDialog","listFormat","useListFormat","telemetry","roleTitles","formatToParts","Roles","part","ReferenceChangedBanner","replaceCurrent","routerReferenceId","parentSibling","parentId","hasHistoryOpen","rev","pathFromString","referenceInfoObservable","parentRefPathSegment","keyedSegmentIndex","unstable_observePathsDocumentPair","debounceTime","availability","pathGet","_ref","referenceInfo","handleReloadReference","available","SyncIcon","LONG_ENOUGH_BUT_NOT_TOO_LONG","useConditionalToast","TOAST_DELAY","AddToReleaseBanner","currentRelease","LATEST","createVersion","useVersionOperations","versionCreateState","setVersionCreateState","handleAddToRelease","lastUpdate","now","useCurrentTime","getTime","VersionBadge","getVersionInlineBadge","updateIntervalMs","currentTime","setCurrentTime","intervalId","setInterval","clearInterval","ArchivedReleaseDocumentBanner","handleGoBack","historyEvent","since","CreateLinkedBanner","documentLinkedBannerContent","CreateLinkedBannerContent","useSanityCreateConfig","getSanityCreateLinkMetadata","createLinkMetadata","ResolvedLiveEdit","DraftLiveEditBanner","isPublishing","setPublishing","isDiscarding","setDiscarding","publish","discardChanges","liveEditResolveType","handlePublish","handleDiscard","OpenReleaseToEditBanner","isPinnedDraftOrPublished","onlyHasVersions","useOnlyHasVersions","OpenReleaseToEditBannerInner","setPerspective","useSetPerspective","currentVersion","documentVersionsTitleList","handleGoToEdit","VersionInlineBadge","ScheduledReleaseBanner","date","UnpublishedDocumentBanner","willBeUnpublished","isGoingToUnpublish","UnpublishIcon","TitleContainer","heading","FormHeader","isSingleton","__experimental_formPreviewTitle","Heading","ev","FormView","margins","openPath","isLocked","transactionSyncLock","pair","documentEvents","tap","prepareMutationEvent","prepareRebaseEvent","hasRev","_rev","patches","handleInitialValue","useEffectEvent","formRef","setFormRef","focusedFirstDescendant","setFocusedFirstDescendant","focusFirstDescendant","Spinner","readOnly","PresenceOverlay","mutations","mut","patch","fromMutationPatches","remotePatches","remoteMutations","localPatches","localMutations","DelayedDiv","show","motion","DocumentHeaderTabs","parentRef","activeViewId","views","tabList","setTabList","parentSize","useElementSize","tabListSize","parentWidth","tabListWidth","tabPanelId","view","activeTab","view_0","view_1","index_0","DocumentHeaderMenuItem","label","viewId","setView","DocumentHeaderTab","DocumentHeaderTitle","DocumentPanelSubHeader","setParentRef","showTabs","showBackButton","ArrowLeftIcon","DocumentBox","ScrollContainer","$disabled","DocumentPanel","footerHeight","headerHeight","isInspectOpen","setDocumentPanelPortalElement","footer","permissions","isPermissionsLoading","isSanityCreateLinked","showCreateBanner","parentPortal","usePortal","_portalElement","documentScrollElement","setDocumentScrollElement","formContainerElement","activeView","splitPanes","formViewHidden","ActiveViewComponent","historical","activeViewNode","isLiveEdit","scrollTo","inspectDialog","showInspector","isSystemBundle","isPinnedDraftOrPublish","banners","showFormView","_DEBUG","freeze","LOADING_PANE","DOCUMENT_PANEL_PORTAL_ELEMENT","POPOVER_FALLBACK_PLACEMENTS","DIALOG_WIDTH_TO_UI_WIDTH","small","medium","large","full","ConfirmDialog","dialog","referenceElement","Popover","ConfirmDialogContent","cancelButtonIcon","cancelButtonText","confirmButtonIcon","confirmButtonText","isTopLayer","useLayer","useGlobalKeyDown","useClickOutsideEvent","Grid","ModalDialog","showCloseButton","PopoverDialog","PopoverDialogContent","DocumentActionPortalProvider","ActionStateDialog","modalId","unknownModal","ActionDialogWrapper","actionStates","actionIndex","setActionIndex","currentAction","ActionMenuButton","idPrefix","setReferenceElement","preventOverflow","popoverProps","actionState","renderActionDialog","ActionMenuListItem","onHandle","String","replace","tooltipProps","s","toUpperCase","DISABLED_REASON_TITLE_KEY","NOTHING_TO_DELETE","NOT_READY","DeleteAction","onComplete","setIsDeleting","paneSetIsDeleting","deleteOp","isConfirmDialogOpen","setConfirmDialogOpen","handleCancel","handleConfirm","handle","useDocumentPairPermissions","TrashIcon","DISABLED_REASON_KEY","NO_CHANGES","NOT_PUBLISHED","DiscardChangesAction","isPublished","ResetIcon","NOTHING_TO_DUPLICATE","DuplicateAction","duplicate","isDuplicating","setDuplicating","dupeId","uuid","duplicateSuccess","firstValueFrom","operationEvents","HistoryRestoreAction","revision","isRevisionInitial","isRevisionLatest","RevertIcon","DocumentPublished","LIVE_EDIT_ENABLED","ALREADY_PUBLISHED","publishedAt","AlreadyPublished","useTemporalPhrase","timeSincePublished","useRelativeTime","PublishAction","publishState","setPublishState","validationStatus","useValidationStatus","syncState","useSyncState","changesOpen","isValidationErrorMarker","hasValidationErrors","publishScheduled","setPublishScheduled","isSyncing","isValidating","_updatedAt","hasDraft","doPublish","validationComplete","didPublish","publishedImmediately","previouslyPublished","PublishIcon","UnpublishAction","unpublish","isDraft","DocumentStatusBarActionsInner","showMenu","states","__internal_tasks","useSource","firstActionState","menuActionStates","buttonElement","setButtonElement","Hotkeys","sideMenuItems","canShowAction","footerAction","DocumentStatusBarActions","allActions","renderDocumentStatusBarActions","HistoryStatusBarActions","revisionId","isRestoreAction","historyActions","toLowerCase","TooltipContent","intendedPublishAt","DATE_TIME_FORMAT","dateStyle","timeStyle","DocumentPerspectiveList","dateTimeFormat","useDateTimeFormat","handlePerspectiveChange","perspective","isPublishedChipDisabled","getReleaseChipState","isReleaseHistoryMatch","isPublishSelected","isDraftSelected","displayedId","isDraftDisabled","VersionChip","format","menuReleaseId","releasesLoading","fromRelease","isVersion","releaseState","HorizontalScroller","getTheme_v2","rgba","DocumentPanelHeader","_props","onMenuAction","onPaneClose","onPaneSplit","unstable_languageFilter","hasGroupSiblings","useFieldActions","menuButtonNodes","showSplitPaneButton","splitViews","showSplitPaneCloseButton","showPaneGroupCloseButton","renderPaneActions","renderedActions","LanguageFilterComponent","SplitVerticalIcon","DocumentPanelHeaderActionDialogDeferred","useDeferredValue","DocumentPanelHeaderActionDialog","SpacerButton","size","pointerEvents","visibility","BADGE_TONES","primary","success","warning","danger","DocumentBadgesInner","DocumentBadgesDeferred","DocumentBadges","renderDocumentBadges","badge","Badge","whiteSpace","TIMELINE_ICON_COMPONENTS","create","discardDraft","initial","editDraft","EditIcon","editLive","getTimelineEventIconComponent","hideScrollbarOnExpand","listWrapper","getElementById","TIMELINE_LIST_WRAPPER_ID","firstChildren","scrollHeight","clientHeight","currentStyle","getComputedStyle","overflowY","FlipIcon","ChevronLeftIcon","ExpandableTimelineItemButton","stopPropagation","handleExpandClick","StackWrapper","ListWrapper","$maxHeight","$visible","TIMELINE_ITEM_I18N_KEY_MAPPING","UserAvatarStack","maxLength","userIds","withTooltip","userId","UserAvatar","AvatarStack","IconBox","$color","avatar","TIMELINE_ITEM_EVENT_TONE","withinSelection","RELATIVE_TIME_OPTIONS","minimal","NameSkeleton","Skeleton","font","UserLine","user","useUser","AvatarSkeleton","collaborators","TimelineItem","chunk","optionsMenu","endTimestamp","timestamp","IconComponent","authors","authorUserIds","collaboratorsUsersIds","isSelectable","dateFormat","updatedTimeAgo","parsedDate","formattedTimestamp","evt","isNonPublishChunk","isPublishChunk","getPreviousPublishAction","chunks","previousPublish","addChunksMetadata","forEach","Timeline","hasMoreChunks","lastChunk","selectedChunk","onLoadMore","listMaxHeight","selectedChunkId","chunksWithMetadata","expandedParents","setExpandedParents","filteredChunks","handleExpandParent","selectedIndex","handleSelectChunk","timelineChunk","c","renderItem","activeIndex","CommandList","TimelineError","versionError","TextWithTone","TIMELINE_MENU_PORTAL","TimelineMenu","setTimelineRange","timelineError","timelineStore","open","setOpen","button","setButton","popoverRef","setPopoverRef","useTimelineSelector","realRevChunk","sinceTime","handleOpen","handleGlobalKeyDown","focus","selectRev","revChunk","sinceId","revId","findRangeForRev","selectSince","sinceChunk","findRangeForSince","handleLoadMore","loadMore","formatParams","revLabel","sinceLabel","buttonLabel","StyledMotionPath","Circle","Arrows","Checkmark","rotateAnimation","keyframes","RotateGroup","root","syncing","scale","transition","saved","changes","circle","strokeDasharray","strokeDashoffset","arrows","checkmark","pathLength","AnimatedStatusIcon","STATUS_DICTIONARY","i18nKey","DocumentStatusPulse","currentStatus","MotionButton","MotionBox","ButtonSkeleton","DocumentStatusButton","author","translationKey","onHistoryOpen","onHistoryClose","relativeTime","FallbackStatus","createDocumentVersion","editDocumentVersion","EventsStatus","events","useEvents","TimelineStatus","TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY","SYNCING_TIMEOUT","SAVED_TIMEOUT","DocumentStatusLine","setStatus","eventsEnabled","beta","eventsAPI","lastUpdated","timerId","timerId_0","AnimatePresence","StatusText","RevisionStatusLine","RestoreIcon","useResizeObserver","onResize","resizeObserver","observe","unobserve","CONTAINER_BREAKPOINT","AnimatedCard","DocumentStatusBar","actionsBoxRef","onDocumentChange","CreateLinkedActions","documentLinkedActions","showingRevision","setCollapsed","contentRect","handleResize","isReady","shouldRender","flexShrink","marginLeft","KeyboardShortcutResponder","actionsBoxElement","onActionStart","onKeyDown","rootRef","As","activeAction","matchingStates","isHotkey","matchingState","handleKeyDown","DocumentActionShortcuts","setActiveIndex","renderDocumentActionShortcuts","getInspectorItems","currentInspector","hasValue","inspectorMenuItems","getInspectItem","JsonIcon","getCompareVersionsItem","documentIdStack","getProductionPreviewItem","previewUrl","EarthAmericasIcon","getMenuItems","inspectorItems","items","LinkIcon","DocumentLayoutError","DIALOG_PROVIDER_POSITION","DocumentLayoutFooter","documentPanelPortalElement","setFooterElement","setActionsBoxElement","zOffsets","isInitialValueLoading","portalElements","startInCreateBanner","StartInCreateBanner","ShowWhenPaneOpen","StyledChangeConnectorRoot","ChangeConnectorRoot","inspectOpen","paneParams","footerElement","headerElement","setHeaderElement","useGlobalCopyPasteElementHandler","setInspectorMenuItems","rootFieldActionNodes","setRootFieldActionNodes","footerRect","headerRect","handleKeyUp","onConnectorSetFocus","GetFormValueProvider","FieldActionsResolver","FieldActionsProvider","paneDialog","changesInspectorTab","useDocumentLayoutComponent","DocumentURLCopied","getInitialValueTemplateOpts","opts","panePayload","structureNodeTemplate","templateName","urlTemplate","typeTemplates","useDocumentPaneInitialValue","paneOptions","templateParameters","initialValueRaw","useInitialValue","useDocumentPaneInspector","inspectorsResolver","inspectorName","setInspectorName","inspectParamRef","historyInspector","closeInspectorName","nextInspectorName","nextInspector","currentParams","onOpen","handleHistoryClose","handleHistoryOpen","reviewChanges","toggleLegacyInspect","toggle","omit","handleLegacyInspectClose","handleInspectorAction","usePreviewUrl","resolveProductionUrl","BehaviorSubject","subject","asObservable","DocumentPaneProvider","onFocusPath","forcedVersion","historyStore","store","timelineReady","revisionDocument","onOlderRevision","sinceDocument","isPristine","setDocumentMeta","useCopyPaste","documentActions","documentBadges","unstable_fieldActions","fieldActionsResolver","languageFilterResolver","setPaneParams","viewsProp","documentIdRaw","diffViewRouter","initialValue","getIsDeleted","getComparisonValue","getIsReadOnly","getDisplayed","formReady","formStateRef","initialFocusPath","getFormDocumentValue","getDocumentVersionType","actionsPerspective","documentActionsProps","versionType","versionName","languageFilter","newSince","newRev","handlePaneClose","closeCurrent","handlePaneSplit","duplicateCurrent","handleMenuAction","toString","startsWith","restParams","pathFromUrl","resolveKeyedPath","DocumentEventsPane","usePaneOptions","showingPublishedOnDraft","eventsStore","useEventsStore","sinceRevision","historyStoreProps","PerspectiveProvider","EventsProvider","isDeleteDocumentGroupEvent","isDeleteDocumentVersionEvent","DocumentPaneWithLegacyTimelineStore","setTimelineError","onError","useTimelineStore","revTime","sinceAttributes","timelineDisplayed","_temp5","_temp6","_temp7","state_1","state_2","state_3","state_4","state_5","DocumentPaneProviderWrapper","useResetHistoryParams","isMounted","_perspective","preserveRev","updateHistoryParams","DocumentPane","parentSourceName","CopyPasteProvider","SourceProvider","DocumentPaneInner","resolveNewDocumentOptions","isLoaded","isDocumentLoaded","useDocumentType","mergeDocumentType","providerProps","handleEditReference","childParams","routerPanesStateLength","activePath","ReferenceInputOptionsProvider","PARTIAL_PAGE_LIMIT","FULL_LIST_LIMIT","DEFAULT_ORDERING","by","field","EMPTY_RECORD","RootBox","$opacity","CommandListBox","SKELETON_ITEMS","keys","LoadingView","num","DocumentListPaneContent","childItemId","filterIsSimpleTypeConstraint","hasMaxItems","hasSearchQuery","isLazyLoading","loadingVariant","onEndReached","onRetry","paneTitle","searchInputElement","showIcons","setShouldRender","handleEndReached","isLastItem","showSpinner","showMaxItemsMessage","limit","noDocumentsContent","ErrorActions","mainContent","removePublishedWithDrafts","collate","entry","hasPublished","applyOrderingFunctions","order","orderBy","mapWith","fieldType","tryResolveSchemaTypeForPath","fieldExtendsType","jsonType","baseType","pathSegments","PathUtils","fromString","segment","getFieldTypeByName","isKeySegment","isIndexSegment","memberType","otherType","isReferenceSchemaType","refType","otherRefType","to","fieldName","fields","ofType","findTypes","base","types","isSplat","findStaticTypesInFilter","swr","createSWR","listenSearchQuery","searchQuery","staticTypeNames","maxFieldDepth","searchStrategy","sortBy","extendedProjection","events$","defer","includeAllVersions","includeResult","mergeMap","throwError","share","welcome$","mutationAndReconnect$","partition","swrKey","take","asyncScheduler","leading","trailing","exhaustMapWithTrailing","typeNames","getSearchableTypes","getExtendedProjection","search","createSearch","strategy","maxDepth","doFetch","__unstable_extendedProjection","comments","skipSortByScore","hits","hit","fromCache","INITIAL_QUERY_STATE","isLoadingFullList","useDocumentList","searchFilter","paramsProp","sortOrder","useWorkspace","useSearchMaxFieldDepth","typeNameFromFilter","onRetry$","observableCallback","onFetchFullList$","onLoadFullList","queryResults$","listenSearchQueryArgs","partialList$","fullList$","withLatestFrom","takeUntil","caught$","safeError","scan","nonErrorThrownWarning","thrown","rotate","fadeIn","AnimatedSpinnerIcon","SpinnerIcon","SubtleSpinnerIcon","DelayedSubtleSpinnerIcon","DocumentListPane","sortOrderRaw","displayOptions","useShallowUnique","staticTypes","setSearchQuery","searchInputValue","setSearchInputValue","setSearchInputElement","sortWithOrderingFn","documentListIsLoading","trim","handleQueryChange","useObservableEvent","event$","debounce","handleClearSearch","handleSearchKeyDown","enableSearchSpinner","setEnableSearchSpinner","textInputIcon","initialValueTemplates","setLayout","setSortOrder","StructurePaneHeader","DocumentSheetListSelect","row","selectedAnchor","setSelectedAnchor","meta","handleOnClick","shiftKey","shiftClickIndex","lowerIndex","upperIndex","additionalSelectedRows","getRowModel","flatRows","currentSelectedRows","getSelectedRowModel","rows","setRowSelection","nextSelectedRows","rowId","isRowCurrentlySelected","getIsSelected","toggleSelected","Checkbox","paddingLeft","getCanSelect","useDocumentSheetListContext","DocumentSheetListContext","DocumentSheetListProvider","selectedAnchorCellDetails","setSelectedAnchorCellDetails","selectedRangeCellIndexes","setSelectedRangeCellIndexes","clearAndSetFocusSelection","nextAnchorDetails","activeElement","HTMLElement","blur","resetFocusSelection","changeSelectionColumn","visibleColumns","getVisibleLeafColumns","columnIndexAfterMove","col","colId","rowIndex","changeSelectionRange","previousSelection","anchorIndex","getNextIndex","startingIndex","firstSelectedIndex","lastIndexSelected","nextIndex","setSelectedAnchorCell","handleEscapePress","nextAnchorCellDetails","handleUpDownKey","isShiftKey","offset","newSelectedCellRowIndex","handleAnchorKeydown","handleAnchorClick","contains","focusAnchorCell","anchorCellDetails","getStateByCellId","submitFocusedCell","DataCell","td","PinnedDataCell","SheetListCellInner","getValue","column","cellId","renderValue","setRenderValue","isDirty","setIsDirty","inputRef","cellState","handleOnFocus","patchDocument","handleProgrammaticFocus","HTMLInputElement","handleOnMouseDown","detail","handleOnEnterDown","handleOnChange","handleOnBlur","handlePaste","clipboardData","getData","handleCopy","getBorderStyle","inputProps","Select","boxShadow","SheetListCell","cell","isPinned","getIsPinned","Cell","borderWidth","getIsLastColumn","getStart","borderRight","getSize","flexRender","columnDef","getContext","VISIBLE_COLUMN_LIMIT","PreviewCell","displayValue","columnHelper","createColumnHelper","SUPPORTED_FIELDS","getColsFromSchemaType","parentalField","tableColumns","nextCol","accessor","enableHiding","info","isObjectSchemaType","columns","isAccessorKeyColumnDef","isGroupColumnDef","flatColumns","cols","useDocumentSheetColumns","documentSchemaType","display","getIsSomeRowsSelected","getToggleAllPageRowsSelectedHandler","initialColumnsVisibility","accCols","countAllowedVisible","visibilityKey","ColumnsControl","isVisibleLimitReached","getCanHide","setInitialColumns","resetColumnVisibility","handleColumnOnChange","toggleVisibility","getColumnVisibilityDisabled","isColumnVisible","getIsVisible","isSingleColumnVisible","maxHeight","getAllLeafColumns","SearchContainer","DocumentSheetListFilter","useSearchState","filtersVisible","SearchHeader","Filters","Header","th","PinnedHeader","HoverMenu","DocumentSheetListHeader","headerGroup","headerTitle","depth","parent","HeaderTag","canShowHeaderMenu","boxSizing","EllipsisHorizontalIcon","DocumentSheetListPaginator","setPageIndex","getCanPreviousPage","DoubleChevronLeftIcon","previousPage","getState","pagination","pageIndex","getPageCount","nextPage","getCanNextPage","DoubleChevronRightIcon","pageSize","setPageSize","Number","createDocumentsSet","documentsReducer","nextDocumentResult","_","restDocuments","updatedDocument","LISTEN_OPTIONS","useDocumentSheetListStore","QUERY","dispatch","useReducer","setIsLoading","res","initialFetch","handleListenerEvent","err_0","listener$","uniques","values","dataAsArray","useDocumentSheetList","h","PaneContainer","TableContainer","DocumentSheetListPaneInner","totalRows","useReactTable","getCoreRowModel","getFilteredRowModel","getPaginationRowModel","autoResetPageIndex","initialState","columnPinning","columnVisibility","getRowId","fieldId","renderRow","getVisibleCells","createElement","rowsCount","getHeaderGroups","headers","DocumentSheetListPane","schemaTypeName","isDocumentSchemaType","SearchProvider","addSelectedStateToMenuItems","isEqual","setPrevious","shallowEquals","defaultLayout","defaultOrdering","sourceName","defaultSortOrder","menuItemsWithSelectedState","isSheetListLayout","LiveEditBadge","liveEditSchemaType","activePanes","setActivePanes","getIntentState","editDocumentId","canHandleIntent","getPaneParams","ChangesInspector","showChanges","scrollRef","setScrollRef","diff","selectionState","isComparingCurrent","structureT","FieldWrapper","ChangeFieldWrapper","rootDiff","showFromValue","documentContext","NoChanges","ChangeList","DocumentChangeContext","getIsSelectable","isUnpublishDocumentEvent","isScheduleDocumentVersionEvent","isUnscheduleDocumentVersionEvent","EventTimelineItem","cursor","Event","PublishedEventMenu","portalContext","versionId","versionRevisionId","handleOpenReleaseDocument","handleOpenDraftDocument","RELEASES_INTENT","textDecoration","children_0","releaseTitle","children_1","fallbackPlacements","children_2","TimelineItemWrapper","CHILDREN_ITEMS_VARIANTS","animate","exit","ITEM_HEIGHT","EventsTimeline","allEvents","hasMoreEvents","selectedEventId","fetchEventChildren","selectedEvent","expandingParents","setExpandingParents","isCreateDocumentVersionEvent","isEditDocumentVersionEvent","isExpanding","renderOptionsMenu","documentVariantType","getDocumentVariantType","isPublishDocumentVersionEvent","creationEvent","showExpandingLoader","isLastEvent","EventsTimelineMenu","nextCursor","eventsError","findRangeForRevision","loadMoreEvents","expandEvent","revEvent","sinceEvent","SpinnerContainer","DIFF_INITIAL_VALUE","EventsInspector","getChangesList","changesList$","diffLoading","diffError","toEvent","sinceEvents","ChangesError","EventsSelector","showList","listHeight","setListHeight","getScrollerRef","initialLoad","HistorySelector","FadeInFlex","TABS","isValidTab","tab","ChangesTabs","paneRouterTab","setPaneRouterTab","changesInspector","getPathTitles","f","itemType","_key","MARKER_ICON","MARKER_TONE","ValidationInspector","marker","ValidationCard","errorInfo","setErrorInfo","level","DocumentNodePathBreadcrumbs","pathTitles","fontWeight","validationMarkers","hasErrors","isValidationError","hasWarnings","isValidationWarning","CheckmarkCircleIcon","validationInspector","legacyEditParamsToState","decodeURIComponent","encodePanesSegment","encodeChunks","encodeURIComponent","legacyEditParamsToPath","toState","pathSegment","parsePanesSegment","toPath","router","route","intents","transform","panePattern","isParam","test","isPayloadLike","exclusiveParams","isTruthy","parseChunks","sibling","tryParseBase64Payload","firstSibling","paneIsFirstSibling","sameAsFirst","encodedPayload","encodeJsonParams","encodedParams","valueFromFirstSibling","flat","parseOldPanesSegment","restOfSiblings","buffer","match","payloadChunk","tryParsePayload","decodeJsonParams","definePlugin","MasterDetailIcon","prevActions","prevBadges","prevInspectors","tools","lazy","canHandleCreateIntent","canHandleEditIntent","controlsDocumentTitle","__internalApplicationType","bundles","structureUsEnglishLocaleBundle"],"mappings":"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"}