/* globals customElements */
import {EditorView, basicSetup, json} from '../vendor/vendor.bundle.js'
import {ApiBaseElement} from './api-base.js'

const template = `<m-box>
    <h2 class="mar-t-0">Payload</h2>
    <div id="payload" name="payload"></div>
    <button ord="primary" class="mar-t-sm sanity-button">Invoke</button>
</m-box>
`
class PayloadPanel extends ApiBaseElement {
  invoke = () => {
    const payloadText = this.api.store.payload.state.doc.text.join('') || '{}'
    this.api.invoke(payloadText)
  }
  updateButtonText = ({inprogress}) => {
    if (inprogress) {
      this.button.setAttribute('disabled', '')
      this.button.innerHTML = '<network-spinner></network-spinner>'
    } else {
      this.button.removeAttribute('disabled')
      this.button.innerText = 'Invoke'
    }
  }

  connectedCallback() {
    this.innerHTML = template
    this.payload = this.querySelector('#payload')
    this.button = this.querySelector('button')
    this.button.addEventListener('click', this.invoke)
    this.api.subscribe(this.updateButtonText, ['inprogress'])

    this.api.store.payload = new EditorView({
      doc: '\n\n\n\n',
      extensions: [basicSetup, json()],
      parent: this.payload,
    })
  }

  disconnectedCallback() {
    this.button.removeEventListener('click', this.invoke)
  }
}

customElements.define('payload-panel', PayloadPanel)
