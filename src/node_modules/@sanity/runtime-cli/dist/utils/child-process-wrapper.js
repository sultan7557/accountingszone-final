import {join} from 'node:path'
import process from 'node:process'

// Start when payload data arrives from parent process
process.on('message', async (data) => {
  const {srcPath, payload} = JSON.parse(data)
  let logs = ''
  let json = null

  // Import the function code
  const {handler} = await import(join(process.cwd(), srcPath))

  // backup stdout
  const originalStdoutWrite = process.stdout.write.bind(process.stdout)

  // redirect stdout to a buffer
  process.stdout.write = (chunk) => {
    if (typeof chunk === 'string') {
      logs += chunk
    }
    return true
  }

  if (handler && typeof handler === 'function') {
    json = await handler(payload)
  }

  // revert changes to stdout
  process.stdout.write = originalStdoutWrite

  // Send result of handler code to parent process.
  process.send(JSON.stringify({json, logs}))
})
