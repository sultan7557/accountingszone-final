{"version":3,"file":"index.cjs","sources":["../../src/ui/History.tsx","../../src/ui/Meta.ts","../../src/util/useDragEvents.ts","../../src/ui/schema/SchemaContext.tsx","../../src/ui/schema/useSchema.ts","../../src/ui/context-menu/contextMenuItems.tsx","../../src/ui/context-menu/ContextMenu.tsx","../../src/util/getLinkHref.ts","../../src/ui/preview/PreviewSnapshotsContext.tsx","../../src/ui/preview/usePreviewSnapshots.ts","../../src/ui/ElementOverlay.tsx","../../src/ui/OverlayDragGroupRect.tsx","../../src/ui/OverlayDragInsertMarker.tsx","../../src/ui/OverlayDragPreview.tsx","../../src/ui/OverlayMinimapPrompt.tsx","../../src/ui/elementsReducer.ts","../../src/ui/overlayStateReducer.ts","../../src/ui/preview/PreviewSnapshotsProvider.tsx","../../src/ui/schema/SchemaProvider.tsx","../../src/ui/shared-state/SharedStateProvider.tsx","../../src/ui/telemetry/TelemetryProvider.tsx","../../src/ui/useController.tsx","../../src/ui/usePerspectiveSync.tsx","../../src/ui/useReportDocuments.ts","../../src/ui/Overlays.tsx","../../src/ui/Refresh.tsx","../../src/ui/useComlink.tsx","../../src/optimistic/state/createSharedListener.ts","../../src/ui/useDatasetMutator.ts","../../src/ui/VisualEditing.tsx"],"sourcesContent":["import {useEffect, type FunctionComponent} from 'react'\nimport type {HistoryAdapter, VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const History: FunctionComponent<{\n  comlink: VisualEditingNode\n  history?: HistoryAdapter\n}> = (props) => {\n  const {comlink, history} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/navigate', (data) => {\n      history?.update(data)\n    })\n  }, [comlink, history])\n\n  useEffect(() => {\n    if (history) {\n      return history.subscribe((update) => {\n        update.title = update.title || document.title\n        comlink?.post('visual-editing/navigate', update)\n      })\n    }\n    return\n  }, [comlink, history])\n\n  return null\n}\n","import {useEffect, type FunctionComponent} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const Meta: FunctionComponent<{\n  comlink: VisualEditingNode\n}> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    const sendMeta = () => {\n      comlink.post('visual-editing/meta', {title: document.title})\n    }\n\n    const observer = new MutationObserver(([mutation]) => {\n      if (mutation.target.nodeName === 'TITLE') {\n        sendMeta()\n      }\n    })\n\n    observer.observe(document.head, {\n      subtree: true,\n      characterData: true,\n      childList: true,\n    })\n\n    sendMeta()\n\n    return () => observer.disconnect()\n  }, [comlink])\n\n  return null\n}\n","import {at, insert, remove} from '@sanity/mutate'\nimport {get as getFromPath} from '@sanity/util/paths'\nimport {useCallback, useEffect} from 'react'\nimport {useDocuments} from '../react/useDocuments'\nimport type {DragEndEvent, DragInsertPosition} from '../types'\nimport {getArrayItemKeyAndParentPath} from './mutations'\n\n// Finds the node that the drag end event was relative to, and the relative\n// position the new element should be inserted in. If the reference node was\n// \"top\" or \"left\", we insert \"after\". If it was \"bottom\" or \"right\", we insert\n// \"before\".\nfunction getReferenceNodeAndInsertPosition(position: DragInsertPosition) {\n  if (position) {\n    const {top, right, bottom, left} = position\n    if (left || top) {\n      return {node: (left ?? top)!.sanity, position: 'after' as const}\n    } else if (right || bottom) {\n      return {node: (right ?? bottom)!.sanity, position: 'before' as const}\n    }\n  }\n  return undefined\n}\n\nexport function useDragEndEvents(): {\n  dispatchDragEndEvent: (event: DragEndEvent) => void\n} {\n  const {getDocument} = useDocuments()\n\n  useEffect(() => {\n    const handler = (e: CustomEvent<DragEndEvent>) => {\n      const {insertPosition, target, preventInsertDefault} = e.detail\n\n      if (preventInsertDefault) return\n\n      const reference = getReferenceNodeAndInsertPosition(insertPosition)\n      if (reference) {\n        const doc = getDocument(target.id)\n        // We must have access to the document actor in order to perform the\n        // necessary mutations. If this is undefined, something went wrong when\n        // resolving the currently in use documents\n        const {node, position} = reference\n        // Get the key of the element that was dragged\n        const {key: targetKey, hasExplicitKey} = getArrayItemKeyAndParentPath(target)\n        // Get the key of the reference element, and path to the parent array\n        const {path: arrayPath, key: referenceItemKey} = getArrayItemKeyAndParentPath(node)\n        // Don't patch if the keys match, as this means the item was only\n        // dragged to its existing position, i.e. not moved\n        if (arrayPath && referenceItemKey && referenceItemKey !== targetKey) {\n          doc.patch(async ({getSnapshot}) => {\n            const snapshot = await getSnapshot()\n            // Get the current value of the element we dragged, as we will need\n            // to clone this into the new position\n            const elementValue = getFromPath(snapshot, target.path)\n\n            if (hasExplicitKey) {\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove({_key: targetKey})),\n                // Insert the cloned dragged item into its new position\n                at(arrayPath, insert(elementValue, position, {_key: referenceItemKey})),\n              ]\n            } else {\n              // handle reordering for primitives\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove(~~targetKey)),\n                // Insert the cloned dragged item into its new position\n                at(\n                  arrayPath,\n                  insert(\n                    elementValue,\n                    position,\n                    // if target key is < reference, each item in the array's index will be one less due to the previous removal\n                    referenceItemKey > targetKey ? ~~referenceItemKey - 1 : ~~referenceItemKey,\n                  ),\n                ),\n              ]\n            }\n          })\n        }\n      }\n    }\n    window.addEventListener('sanity/dragEnd', handler as EventListener)\n    return () => {\n      window.removeEventListener('sanity/dragEnd', handler as EventListener)\n    }\n  }, [getDocument])\n\n  const dispatchDragEndEvent = useCallback((event: DragEndEvent) => {\n    const customEvent = new CustomEvent<DragEndEvent>('sanity/dragEnd', {\n      detail: event,\n      cancelable: true,\n    })\n    window.dispatchEvent(customEvent)\n  }, [])\n\n  return {dispatchDragEndEvent}\n}\n","import type {\n  DocumentSchema,\n  SanityNode,\n  SanityStegaNode,\n  TypeSchema,\n} from '@sanity/presentation-comlink'\nimport {createContext} from 'react'\nimport type {OverlayElementField, OverlayElementParent} from '../../types'\n\nexport interface SchemaContextValue {\n  getField: (node: SanityNode | SanityStegaNode) => {\n    field: OverlayElementField\n    parent: OverlayElementParent\n  }\n  getType: <T extends 'document' | 'type' = 'document'>(\n    node: SanityNode | SanityStegaNode | string,\n    type?: T,\n  ) => T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined\n}\n\nexport const SchemaContext = createContext<SchemaContextValue | null>(null)\n","import {useContext} from 'react'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nexport function useSchema(): SchemaContextValue {\n  const context = useContext(SchemaContext)\n\n  if (!context) {\n    throw new Error('Schema context is missing')\n  }\n\n  return context\n}\n","import {\n  ArrowDownIcon,\n  ArrowUpIcon,\n  CopyIcon,\n  InsertAboveIcon,\n  InsertBelowIcon,\n  PublishIcon,\n  RemoveIcon,\n  SortIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\nimport type {\n  SanityNode,\n  SchemaArrayItem,\n  SchemaNode,\n  SchemaUnionNode,\n  SchemaUnionOption,\n} from '@sanity/presentation-comlink'\nimport type {SchemaType} from '@sanity/types'\nimport {MenuGroup} from '@sanity/ui/_visual-editing'\nimport {type FunctionComponent} from 'react'\nimport type {OptimisticDocument} from '../../optimistic'\nimport {InsertMenu} from '../../overlay-components/components/InsertMenu'\nimport type {ContextMenuNode, OverlayElementField, OverlayElementParent} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {\n  getArrayDuplicatePatches,\n  getArrayInsertPatches,\n  getArrayMovePatches,\n  getArrayRemovePatches,\n} from '../../util/mutations'\n\nexport function getArrayRemoveAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayRemovePatches(node, (await getSnapshot())!))\n}\n\nfunction getArrayInsertAction(\n  node: SanityNode,\n  doc: OptimisticDocument,\n  insertType: string,\n  position: 'before' | 'after',\n): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () => doc.patch(() => getArrayInsertPatches(node, insertType, position))\n}\n\nfunction getDuplicateAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayDuplicatePatches(node, (await getSnapshot())!))\n}\n\nexport function getContextMenuItems(context: {\n  doc: OptimisticDocument\n  field: OverlayElementField\n  node: SanityNode\n  parent: OverlayElementParent\n}): Promise<ContextMenuNode[]> {\n  const {node, field, parent, doc} = context\n  if (field?.type === 'arrayItem') {\n    return getContextMenuArrayItems({node, field, doc})\n  }\n  if (parent?.type === 'union') {\n    return getContextMenuUnionItems({node, parent, doc})\n  }\n\n  return Promise.resolve([])\n}\n\nfunction getDuplicateItem(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Duplicate',\n      icon: CopyIcon,\n      action: getDuplicateAction(node, doc),\n      telemetryEvent: 'Visual Editing Context Menu Item Duplicated' as const,\n    },\n  ]\n}\n\nfunction getRemoveItems(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Remove',\n      icon: RemoveIcon,\n      action: getArrayRemoveAction(node, doc),\n      telemetryEvent: 'Visual Editing Context Menu Item Removed' as const,\n    },\n  ]\n}\n\nasync function getMoveItems(\n  context: {\n    doc: OptimisticDocument\n    node: SanityNode\n  },\n  withDivider = true,\n) {\n  const {node, doc} = context\n  if (!doc) return []\n\n  const items: ContextMenuNode[] = []\n  const groupItems: ContextMenuNode[] = []\n\n  const [moveUpPatches, moveDownPatches, moveFirstPatches, moveLastPatches] = await Promise.all([\n    getArrayMovePatches(node, doc, 'previous'),\n    getArrayMovePatches(node, doc, 'next'),\n    getArrayMovePatches(node, doc, 'first'),\n    getArrayMovePatches(node, doc, 'last'),\n  ])\n\n  if (moveFirstPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To top',\n      icon: PublishIcon,\n      action: () => doc.patch(moveFirstPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveUpPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Up',\n      icon: ArrowUpIcon,\n      action: () => doc.patch(moveUpPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveDownPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Down',\n      icon: ArrowDownIcon,\n      action: () => doc.patch(moveDownPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveLastPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To bottom',\n      icon: UnpublishIcon,\n      action: () => doc.patch(moveLastPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n\n  if (groupItems.length) {\n    items.push({\n      type: 'group',\n      label: 'Move',\n      icon: SortIcon,\n      items: groupItems,\n    })\n    if (withDivider) {\n      items.push({type: 'divider'})\n    }\n  }\n\n  return items\n}\n\nasync function getContextMenuArrayItems(context: {\n  doc: OptimisticDocument\n  field: SchemaArrayItem\n  node: SanityNode\n}): Promise<ContextMenuNode[]> {\n  const {node, field, doc} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  items.push({\n    type: 'action',\n    label: 'Insert before',\n    icon: InsertAboveIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'before'),\n    telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n  })\n  items.push({\n    type: 'action',\n    label: 'Insert after',\n    icon: InsertBelowIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'after'),\n    telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n  })\n\n  return items\n}\n\nconst InsertMenuWrapper: FunctionComponent<{\n  label: string\n  onSelect: (schemaType: SchemaType) => void\n  parent: SchemaUnionNode<SchemaNode>\n  width: number | undefined\n  boundaryElement: HTMLDivElement | null\n}> = (props) => {\n  const {label, parent, width, onSelect, boundaryElement} = props\n\n  return (\n    <MenuGroup\n      fontSize={1}\n      icon={InsertBelowIcon}\n      padding={2}\n      popover={{\n        arrow: false,\n        constrainSize: true,\n        floatingBoundary: boundaryElement,\n        padding: 0,\n        placement: 'right-start',\n        fallbackPlacements: [\n          'left-start',\n          'right',\n          'left',\n          'right-end',\n          'left-end',\n          'bottom',\n          'top',\n        ],\n        preventOverflow: true,\n        width,\n        __unstable_margins: [4, 4, 4, 4],\n      }}\n      space={2}\n      text={label}\n    >\n      <InsertMenu node={parent} onSelect={onSelect} />\n    </MenuGroup>\n  )\n}\n\nasync function getContextMenuUnionItems(context: {\n  doc: OptimisticDocument\n  node: SanityNode\n  parent: SchemaUnionNode<SchemaNode>\n}): Promise<ContextMenuNode[]> {\n  const {doc, node, parent} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  if (parent.options?.insertMenu) {\n    const insertMenuOptions = parent.options.insertMenu || {}\n    const width = insertMenuOptions.views?.some((view) => view.name === 'grid') ? 0 : undefined\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement, sendTelemetry}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'before')\n          action()\n\n          sendTelemetry('Visual Editing Context Menu Item Inserted', null)\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert before\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement, sendTelemetry}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'after')\n          action()\n\n          sendTelemetry('Visual Editing Context Menu Item Inserted', null)\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert after\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n  } else {\n    items.push({\n      type: 'group',\n      label: 'Insert before',\n      icon: InsertAboveIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          icon: getNodeIcon(t),\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          action: getArrayInsertAction(node, doc, t.name, 'before'),\n          telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n        }\n      }),\n    })\n    items.push({\n      type: 'group',\n      label: 'Insert after',\n      icon: InsertBelowIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          icon: getNodeIcon(t),\n          action: getArrayInsertAction(node, doc, t.name, 'after'),\n          telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n        }\n      }),\n    })\n  }\n\n  return items\n}\n","import {\n  Box,\n  Flex,\n  Menu,\n  MenuDivider,\n  MenuGroup,\n  MenuItem,\n  Popover,\n  Spinner,\n  Stack,\n  Text,\n  type PopoverMargins,\n} from '@sanity/ui/_visual-editing'\nimport {useCallback, useEffect, useMemo, useState, type FunctionComponent} from 'react'\nimport {useDocuments} from '../../react/useDocuments'\nimport type {ContextMenuNode, ContextMenuProps} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {PopoverPortal} from '../PopoverPortal'\nimport {useSchema} from '../schema/useSchema'\nimport {useTelemetry} from '../telemetry/useTelemetry'\nimport {getContextMenuItems} from './contextMenuItems'\n\nconst POPOVER_MARGINS: PopoverMargins = [-4, 4, -4, 4]\n\nfunction ContextMenuItem(props: {\n  node: ContextMenuNode\n  onDismiss?: () => void\n  boundaryElement: HTMLDivElement | null\n}) {\n  const {node, onDismiss, boundaryElement} = props\n  const sendTelemetry = useTelemetry()\n\n  const onClick = useCallback(() => {\n    if (node.type === 'action') {\n      node.action?.()\n      onDismiss?.()\n\n      if (node.telemetryEvent) {\n        sendTelemetry(node.telemetryEvent, null)\n      }\n    }\n  }, [node, onDismiss, sendTelemetry])\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  if (node.type === 'action') {\n    return (\n      <MenuItem\n        fontSize={1}\n        hotkeys={node.hotkeys}\n        icon={node.icon}\n        padding={2}\n        space={2}\n        text={node.label}\n        disabled={!node.action}\n        onClick={onClick}\n      />\n    )\n  }\n\n  if (node.type === 'group') {\n    return (\n      <MenuGroup\n        fontSize={1}\n        icon={node.icon}\n        padding={2}\n        // @todo when this PR lands https://github.com/sanity-io/ui/pull/1454\n        // menu={{\n        //   padding: 0,\n        // }}\n        popover={{\n          arrow: false,\n          constrainSize: true,\n          placement: 'right-start',\n          fallbackPlacements: [\n            'left-start',\n            'right',\n            'left',\n            'right-end',\n            'left-end',\n            'bottom',\n            'top',\n          ],\n          preventOverflow: true,\n          __unstable_margins: POPOVER_MARGINS,\n        }}\n        space={2}\n        text={node.label}\n      >\n        {node.items.map((item, itemIndex) => (\n          <ContextMenuItem\n            key={itemIndex}\n            node={item}\n            onDismiss={onDismiss}\n            boundaryElement={boundaryElement}\n          />\n        ))}\n      </MenuGroup>\n    )\n  }\n\n  if (node.type === 'custom') {\n    const {component: Component} = node\n    return <Component boundaryElement={boundaryElement} sendTelemetry={sendTelemetry} />\n  }\n\n  return null\n}\n\nexport const ContextMenu: FunctionComponent<ContextMenuProps> = (props) => {\n  const {\n    node,\n    onDismiss,\n    position: {x, y},\n  } = props\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const {getField} = useSchema()\n  const {getDocument} = useDocuments()\n\n  const {field, parent} = getField(node)\n\n  const title = useMemo(() => {\n    return field?.title || field?.name || 'Unknown type'\n  }, [field])\n\n  const [items, setItems] = useState<ContextMenuNode[] | undefined>(undefined)\n\n  useEffect(() => {\n    const fetchContextMenuItems = async () => {\n      const doc = getDocument(node.id)\n      if (!doc) return\n      const items = await getContextMenuItems({node, field, parent, doc})\n      setItems(items)\n    }\n    fetchContextMenuItems()\n  }, [field, node, parent, getDocument])\n\n  const contextMenuReferenceElement = useMemo(() => {\n    return {\n      getBoundingClientRect: () => ({\n        bottom: y,\n        left: x,\n        right: x,\n        top: y,\n        width: 0,\n        height: 0,\n      }),\n    } as HTMLElement\n  }, [x, y])\n\n  const icon = useMemo(() => {\n    return getNodeIcon(field)\n  }, [field])\n\n  return (\n    <PopoverPortal setBoundaryElement={setBoundaryElement} onDismiss={onDismiss}>\n      <Popover\n        __unstable_margins={POPOVER_MARGINS}\n        arrow={false}\n        open\n        placement=\"right-start\"\n        referenceElement={contextMenuReferenceElement}\n        content={\n          <Menu style={{minWidth: 120, maxWidth: 160}}>\n            <Flex gap={2} padding={2}>\n              <Box flex=\"none\">{items ? <Text size={1}>{icon}</Text> : <Spinner size={1} />}</Box>\n\n              <Stack flex={1} space={2}>\n                <Text size={1} weight=\"semibold\">\n                  {items ? title : 'Loading...'}\n                </Text>\n              </Stack>\n            </Flex>\n\n            {items && (\n              <>\n                <MenuDivider />\n                {items.map((item, i) => (\n                  <ContextMenuItem\n                    key={i}\n                    node={item}\n                    onDismiss={onDismiss}\n                    boundaryElement={boundaryElement}\n                  />\n                ))}\n              </>\n            )}\n          </Menu>\n        }\n      >\n        <div\n          key={`${x}-${y}`}\n          style={{\n            position: 'absolute',\n            left: x,\n            top: y,\n          }}\n        />\n      </Popover>\n    </PopoverPortal>\n  )\n}\n","export function getLinkHref(href: string, referer: string): string {\n  try {\n    const parsed = new URL(href, typeof location === 'undefined' ? undefined : location.origin)\n    if (parsed.hash) {\n      const hash = new URL(getLinkHref(parsed.hash.slice(1), referer))\n      return `${parsed.origin}${parsed.pathname}${parsed.search}#${hash.pathname}${hash.search}`\n    }\n    parsed.searchParams.set('preview', referer)\n    return parsed.toString()\n  } catch {\n    return href\n  }\n}\n","import type {PreviewSnapshot} from '@sanity/presentation-comlink'\nimport {createContext} from 'react'\n\nexport type PreviewSnapshotsContextValue = PreviewSnapshot[]\n\nexport const PreviewSnapshotsContext = createContext<PreviewSnapshotsContextValue | null>(null)\n","import {useContext} from 'react'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport function usePreviewSnapshots(): PreviewSnapshotsContextValue {\n  const context = useContext(PreviewSnapshotsContext)\n\n  if (!context) {\n    throw new Error('Preview Snapshots context is missing')\n  }\n\n  return context\n}\n","import {createEditUrl, studioPath} from '@sanity/client/csm'\nimport {DocumentIcon, DragHandleIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui/_visual-editing'\nimport {pathToUrlString} from '@sanity/visual-editing-csm'\nimport {\n  isValidElement,\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n  type CSSProperties,\n  type FunctionComponent,\n  type ReactElement,\n} from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {styled} from 'styled-components'\nimport {PointerEvents} from '../overlay-components/components/PointerEvents'\nimport type {\n  ElementFocusedState,\n  ElementNode,\n  OverlayComponent,\n  OverlayComponentResolver,\n  OverlayComponentResolverContext,\n  OverlayRect,\n  SanityNode,\n  SanityStegaNode,\n} from '../types'\nimport {getLinkHref} from '../util/getLinkHref'\nimport {usePreviewSnapshots} from './preview/usePreviewSnapshots'\nimport {useSchema} from './schema/useSchema'\n\nconst isReactElementOverlayComponent = (\n  component:\n    | OverlayComponent\n    | {component: OverlayComponent; props?: Record<string, unknown>}\n    | Array<OverlayComponent | {component: OverlayComponent; props?: Record<string, unknown>}>\n    | ReactElement,\n): component is React.JSX.Element => {\n  return isValidElement(component)\n}\n\nexport interface ElementOverlayProps {\n  componentResolver?: OverlayComponentResolver\n  draggable: boolean\n  element: ElementNode\n  focused: ElementFocusedState\n  hovered: boolean\n  isDragging: boolean\n  node: SanityNode | SanityStegaNode\n  rect: OverlayRect\n  showActions: boolean\n  wasMaybeCollapsed: boolean\n  enableScrollIntoView: boolean\n}\n\nconst Root = styled(Card)`\n  background-color: var(--overlay-bg);\n  border-radius: 3px;\n  pointer-events: none;\n  position: absolute;\n  will-change: transform;\n  box-shadow: var(--overlay-box-shadow);\n  transition: none;\n\n  --overlay-bg: transparent;\n  --overlay-box-shadow: inset 0 0 0 1px transparent;\n\n  [data-overlays] & {\n    --overlay-bg: color-mix(in srgb, transparent 95%, var(--card-focus-ring-color));\n    --overlay-box-shadow: inset 0 0 0 2px\n      color-mix(in srgb, transparent 50%, var(--card-focus-ring-color));\n  }\n\n  [data-fading-out] & {\n    transition:\n      box-shadow 1550ms,\n      background-color 1550ms;\n\n    --overlay-bg: rgba(0, 0, 255, 0);\n    --overlay-box-shadow: inset 0 0 0 1px transparent;\n  }\n\n  &[data-focused] {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  }\n\n  &[data-hovered]:not([data-focused]) {\n    transition: none;\n    --overlay-box-shadow: inset 0 0 0 2px var(--card-focus-ring-color);\n  }\n\n  /* [data-unmounted] & {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  } */\n\n  :link {\n    text-decoration: none;\n  }\n`\n\nconst Actions = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`\n\nconst Tab = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`\n\nconst ActionOpen = styled(Card)`\n  cursor: pointer;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n\n  & [data-ui='Text'] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nconst Labels = styled(Flex)`\n  display: flex;\n  align-items: center;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n  & [data-ui='Text'],\n  & [data-sanity-icon] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nfunction createIntentLink(node: SanityNode) {\n  const {id, type, path, baseUrl, tool, workspace} = node\n\n  return createEditUrl({\n    baseUrl,\n    workspace,\n    tool,\n    type: type!,\n    id,\n    path: pathToUrlString(studioPath.fromString(path)),\n  })\n}\n\nconst ElementOverlayInner: FunctionComponent<ElementOverlayProps> = (props) => {\n  const {element, focused, componentResolver, node, showActions, draggable} = props\n\n  const {getField, getType} = useSchema()\n  const schemaType = getType(node)\n  const {field, parent} = getField(node)\n\n  const href = 'path' in node ? createIntentLink(node) : node.href\n\n  const previewSnapshots = usePreviewSnapshots()\n\n  const title = useMemo(() => {\n    if (!('path' in node)) return undefined\n    return previewSnapshots.find((snapshot) => snapshot._id === node.id)?.title\n  }, [node, previewSnapshots])\n\n  const componentContext = useMemo<OverlayComponentResolverContext | undefined>(() => {\n    if (!('path' in node)) return undefined\n    if (!field || !schemaType) return undefined\n    const type = field.value.type\n\n    return {\n      document: schemaType,\n      element,\n      field,\n      focused: !!focused,\n      node,\n      parent,\n      type,\n    }\n  }, [schemaType, element, field, focused, node, parent])\n\n  const customComponents = useCustomComponents(componentContext, componentResolver)\n\n  const icon = schemaType?.icon ? (\n    <div dangerouslySetInnerHTML={{__html: schemaType.icon}} />\n  ) : (\n    <DocumentIcon />\n  )\n\n  return (\n    <>\n      {showActions ? (\n        <Actions gap={1} paddingY={1} data-sanity-overlay-element>\n          <Link href={href} />\n        </Actions>\n      ) : null}\n      {title && (\n        <Tab gap={1} paddingY={1}>\n          <Labels gap={2} padding={2}>\n            {draggable && (\n              <Box marginRight={1}>\n                <Text className=\"drag-handle\" size={0}>\n                  <DragHandleIcon />\n                </Text>\n              </Box>\n            )}\n            <Text size={0}>{icon}</Text>\n            <Text size={1} weight=\"medium\">\n              {title}\n            </Text>\n          </Labels>\n        </Tab>\n      )}\n\n      {Array.isArray(customComponents)\n        ? customComponents.map(({component: Component, props}, i) => {\n            return (\n              <Component key={i} PointerEvents={PointerEvents} {...componentContext!} {...props} />\n            )\n          })\n        : customComponents}\n    </>\n  )\n}\n\nexport const ElementOverlay = memo(function ElementOverlay(props: ElementOverlayProps) {\n  const {draggable, focused, hovered, rect, wasMaybeCollapsed, enableScrollIntoView} = props\n\n  const ref = useRef<HTMLDivElement>(null)\n\n  const scrolledIntoViewRef = useRef(false)\n\n  const style = useMemo<CSSProperties>(\n    () => ({\n      width: `${rect.w}px`,\n      height: `${rect.h}px`,\n      transform: `translate(${rect.x}px, ${rect.y}px)`,\n    }),\n    [rect],\n  )\n\n  useEffect(() => {\n    if (\n      !scrolledIntoViewRef.current &&\n      !wasMaybeCollapsed &&\n      focused === true &&\n      ref.current &&\n      enableScrollIntoView\n    ) {\n      const target = ref.current\n      scrollIntoView(ref.current, {\n        // Workaround issue with scroll-into-view-if-needed struggling with iframes\n        behavior: (actions) => {\n          if (actions.length === 0) {\n            // An empty actions list equals scrolling isn't needed\n            return\n          }\n          // Uses native scrollIntoView to ensure iframes behave correctly\n          target.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'nearest',\n          })\n        },\n        scrollMode: 'if-needed',\n        block: 'center',\n        inline: 'nearest',\n      })\n    }\n\n    scrolledIntoViewRef.current = focused === true\n  }, [focused, wasMaybeCollapsed, enableScrollIntoView])\n\n  const [isNearTop, setIsNearTop] = useState(false)\n  useEffect(() => {\n    if (!ref.current || !hovered) return undefined\n\n    const io = new IntersectionObserver(\n      ([intersection]) => {\n        setIsNearTop(intersection.boundingClientRect.top < 0)\n      },\n      {threshold: 1},\n    )\n    io.observe(ref.current)\n    return () => io.disconnect()\n  }, [hovered, isNearTop])\n\n  return (\n    <Root\n      data-focused={focused ? '' : undefined}\n      data-hovered={hovered ? '' : undefined}\n      data-flipped={isNearTop ? '' : undefined}\n      data-draggable={draggable ? '' : undefined}\n      ref={ref}\n      style={style}\n    >\n      {hovered && <ElementOverlayInner {...props} />}\n    </Root>\n  )\n})\n\nfunction useCustomComponents(\n  componentContext: OverlayComponentResolverContext | undefined,\n  componentResolver: OverlayComponentResolver | undefined,\n) {\n  return useMemo(() => {\n    if (!componentContext) return undefined\n    const resolved = componentResolver?.(componentContext)\n    if (!resolved) return undefined\n\n    if (isReactElementOverlayComponent(resolved)) {\n      return resolved\n    }\n\n    return (Array.isArray(resolved) ? resolved : [resolved]).map((component) => {\n      if (typeof component === 'object' && 'component' in component) {\n        return component\n      }\n      return {component, props: {}}\n    })\n  }, [componentResolver, componentContext])\n}\n\nconst Link = memo(function Link(props: {href: string}) {\n  const referer = useSyncExternalStore(\n    useCallback((onStoreChange) => {\n      const handlePopState = () => onStoreChange()\n      window.addEventListener('popstate', handlePopState)\n      return () => window.removeEventListener('popstate', handlePopState)\n    }, []),\n    () => window.location.href,\n  )\n  const href = useMemo(() => getLinkHref(props.href, referer), [props.href, referer])\n\n  return (\n    <Box as=\"a\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      <ActionOpen padding={2}>\n        <Text size={1} weight=\"medium\">\n          Open in Studio\n        </Text>\n      </ActionOpen>\n    </Box>\n  )\n})\n","import type {FunctionComponent} from 'react'\nimport type {OverlayRect} from '../types'\n\nexport const OverlayDragGroupRect: FunctionComponent<{\n  dragGroupRect: OverlayRect\n}> = ({dragGroupRect}) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: `${dragGroupRect.y}px`,\n        left: `${dragGroupRect.x}px`,\n        width: `${dragGroupRect.w - 1}px`,\n        height: `${dragGroupRect.h - 1}px`,\n        border: '1px dashed #f0709b',\n        pointerEvents: 'none',\n      }}\n    ></div>\n  )\n}\n","import type {FunctionComponent} from 'react'\nimport type {DragInsertPosition} from '../types'\n\nconst markerThickness = 6\n\nfunction lerp(v0: number, v1: number, t: number) {\n  return v0 * (1 - t) + v1 * t\n}\n\nexport const OverlayDragInsertMarker: FunctionComponent<{\n  dragInsertPosition: DragInsertPosition\n}> = ({dragInsertPosition}) => {\n  if (dragInsertPosition === null) return\n\n  const flow = dragInsertPosition?.left || dragInsertPosition?.right ? 'horizontal' : 'vertical'\n\n  let x = 0\n  let y = 0\n  let width = 0\n  let height = 0\n  const offsetMultiplier = 0.0125\n\n  if (flow === 'horizontal') {\n    const {left, right} = dragInsertPosition\n\n    width = markerThickness\n\n    if (right && left) {\n      const startX = left.rect.x + left.rect.w\n      const endX = right.rect.x\n      const targetHeight = Math.min(right.rect.h, left.rect.h)\n      const offset = targetHeight * offsetMultiplier\n\n      x = lerp(startX, endX, 0.5) - markerThickness / 2\n      y = left.rect.y + offset\n\n      height = Math.min(right.rect.h, left.rect.h) - offset * 2\n    } else if (right && !left) {\n      const targetHeight = right.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = right.rect.x - markerThickness / 2\n      y = right.rect.y + offset\n      height = right.rect.h - offset * 2\n    } else if (left && !right) {\n      const targetHeight = left.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = left.rect.x + left.rect.w - markerThickness / 2\n      y = left.rect.y + offset\n      height = left.rect.h - offset * 2\n    }\n  } else {\n    const {bottom, top} = dragInsertPosition\n\n    if (bottom && top) {\n      const startX = Math.min(top.rect.x, bottom.rect.x)\n      const startY = top.rect.y + top.rect.h\n      const endY = bottom.rect.y\n      const targetWidth = Math.min(bottom.rect.w, top.rect.w)\n      const offset = targetWidth * offsetMultiplier\n\n      height = markerThickness\n\n      x = startX + offset\n      y = lerp(startY, endY, 0.5) - markerThickness / 2\n      width = Math.max(bottom.rect.w, top.rect.w) - offset * 2\n    } else if (bottom && !top) {\n      const targetWidth = bottom.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = bottom.rect.x + offset\n      y = bottom.rect.y - markerThickness / 2\n      width = bottom.rect.w - offset * 2\n      height = markerThickness\n    } else if (top && !bottom) {\n      const targetWidth = top.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = top.rect.x + offset\n      y = top.rect.y + top.rect.h - markerThickness / 2\n      width = top.rect.w - offset * 2\n      height = markerThickness\n    }\n  }\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        width: `${width}px`,\n        height: `${height}px`,\n        transform: `translate(${x}px, ${y}px)`,\n        background: '#556bfc',\n        border: '2px solid white',\n        borderRadius: '999px',\n        zIndex: '999999',\n      }}\n    ></div>\n  )\n}\n","import {Card, usePrefersDark, useTheme_v2} from '@sanity/ui/_visual-editing'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\nimport type {DragSkeleton} from '../types'\n\nconst Root = styled.div<{\n  $width: number\n  $height: number\n  $offsetX: number\n  $offsetY: number\n  $scaleFactor: number\n}>`\n  --drag-preview-opacity: 0.98;\n  --drag-preview-skeleton-stroke: #ffffff;\n\n  @media (prefers-color-scheme: dark) {\n    --drag-preview-skeleton-stroke: #383d51;\n  }\n\n  position: fixed;\n  display: grid;\n  transform: ${({$scaleFactor, $width, $height}) =>\n    `translate(calc(var(--drag-preview-x) - ${$width / 2}px), calc(var(--drag-preview-y) - ${$height / 2}px)) scale(${$scaleFactor})`};\n  width: ${({$width}) => `${$width}px`};\n  height: ${({$height}) => `${$height}px`};\n  z-index: 9999999;\n  opacity: var(--drag-preview-opacity);\n  cursor: move;\n\n  .drag-preview-content-wrapper {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    container-type: inline-size;\n  }\n\n  [data-ui='card'] {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  .drag-preview-skeleton {\n    position: absolute;\n    inset: 0;\n\n    rect {\n      stroke: var(--drag-preview-skeleton-stroke);\n    }\n  }\n\n  .drag-preview-handle {\n    position: absolute;\n    top: 4cqmin;\n    left: 4cqmin;\n    width: 6cqmin;\n    fill: var(--drag-preview-handle-fill);\n  }\n`\n\nfunction clamp(number: number, min: number, max: number): number {\n  return number < min ? min : number > max ? max : number\n}\n\nfunction map(number: number, inMin: number, inMax: number, outMin: number, outMax: number): number {\n  const mapped: number = ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n  return clamp(mapped, outMin, outMax)\n}\n\nexport const OverlayDragPreview: FunctionComponent<{skeleton: DragSkeleton}> = ({skeleton}) => {\n  const maxSkeletonWidth = Math.min(skeleton.maxWidth, window.innerWidth / 2)\n  const scaleFactor = skeleton.w > maxSkeletonWidth ? maxSkeletonWidth / skeleton.w : 1\n\n  const offsetX = skeleton.offsetX * scaleFactor\n  const offsetY = skeleton.offsetY * scaleFactor\n\n  const prefersDark = usePrefersDark()\n  const theme = useTheme_v2()\n\n  const radius = theme.radius[~~map(skeleton.w, 0, 1920, 1, theme.radius.length - 2)]\n\n  const imageRects = skeleton.childRects.filter((r) => r.tagName === 'IMG')\n  const textRects = skeleton.childRects.filter((r) => r.tagName !== 'IMG')\n\n  return (\n    <Root\n      $width={skeleton.w}\n      $height={skeleton.h}\n      $offsetX={offsetX}\n      $offsetY={offsetY}\n      $scaleFactor={scaleFactor}\n    >\n      <Card\n        radius={radius}\n        shadow={4}\n        overflow=\"hidden\"\n        tone=\"transparent\"\n        scheme={prefersDark ? 'dark' : 'light'}\n      >\n        <div className=\"drag-preview-content-wrapper\">\n          <svg className=\"drag-preview-skeleton\" viewBox={`0 0 ${skeleton.w} ${skeleton.h}`}>\n            {/* render image rects first to account for background images overlapping text */}\n            {[...imageRects, ...textRects].map((r, i) => (\n              <rect\n                key={i}\n                x={r.x}\n                y={r.y}\n                width={r.w}\n                height={r.h}\n                fill={theme.color.skeleton.from}\n              ></rect>\n            ))}\n          </svg>\n        </div>\n      </Card>\n    </Root>\n  )\n}\n","import {ExpandIcon} from '@sanity/icons'\nimport {Card, Flex, Hotkeys, Text} from '@sanity/ui/_visual-editing'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\n\nconst Root = styled(Card)`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n`\n\nexport const OverlayMinimapPrompt: FunctionComponent = () => {\n  return (\n    <Root padding={2} shadow={2} radius={2} style={{zIndex: '999999'}}>\n      <Flex align=\"center\" gap={2}>\n        <Hotkeys keys={['Shift']} />\n        <Text size={1}>Zoom Out</Text>\n        <ExpandIcon />\n      </Flex>\n    </Root>\n  )\n}\n","import type {VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport type {ElementState, OverlayMsg} from '../types'\n\n/**\n * Reducer for managing element state from received channel messages\n * @internal\n */\nexport const elementsReducer = (\n  elements: ElementState[],\n  message: OverlayMsg | VisualEditingControllerMsg,\n): ElementState[] => {\n  const {type} = message\n  switch (type) {\n    case 'element/register': {\n      const elementExists = !!elements.find((e) => e.id === message.id)\n      if (elementExists) return elements\n\n      return [\n        ...elements,\n        {\n          id: message.id,\n          activated: false,\n          element: message.element,\n          focused: false,\n          hovered: false,\n          rect: message.rect,\n          sanity: message.sanity,\n          dragDisabled: message.dragDisabled,\n        },\n      ]\n    }\n    case 'element/activate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: true}\n        }\n        return e\n      })\n    case 'element/update': {\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, sanity: message.sanity, rect: message.rect}\n        }\n        return e\n      })\n    }\n    case 'element/unregister':\n      return elements.filter((e) => e.id !== message.id)\n    case 'element/deactivate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: false, hovered: false}\n        }\n        return e\n      })\n    case 'element/mouseenter':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, rect: message.rect, hovered: true}\n        }\n        return {...e, hovered: false}\n      })\n    case 'element/mouseleave':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, hovered: false}\n        }\n        return element\n      })\n    case 'element/updateRect':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, rect: message.rect}\n        }\n        return element\n      })\n    case 'element/click':\n      return elements.map((e) => {\n        return {...e, focused: e.id === message.id && 'clicked'}\n      })\n    case 'overlay/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/focus': {\n      // Before setting the focus state of each element, check to see if any\n      // element has gained focus from an `element/click` message. Presentation\n      // tool \"reflects\" these back as a `presentation/focus` message.\n      const clickedElement = elements.find((e) => e.focused === 'clicked')\n      return elements.map((e) => {\n        // We want to focus any element which matches the received id and path\n        const focused =\n          'path' in e.sanity &&\n          e.sanity.id === message.data.id &&\n          e.sanity.path === message.data.path\n\n        // If we have a 'clicked' element, and that element matches, it is a\n        // reflection, so we maintain the focus state\n        if (clickedElement && e === clickedElement && focused) {\n          return e\n        }\n\n        return {\n          ...e,\n          // Mark as a dupe if another matching item has been clicked to prevent\n          // scrolling, otherwise just set focus as a boolean\n          focused: focused && clickedElement ? 'duplicate' : focused,\n        }\n      })\n    }\n    default:\n      return elements\n  }\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport type {SanityNode, VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport type {\n  DragInsertPosition,\n  DragSkeleton,\n  ElementState,\n  OverlayMsg,\n  OverlayRect,\n} from '../types'\nimport {elementsReducer} from './elementsReducer'\n\nexport interface OverlayState {\n  contextMenu: {\n    node: SanityNode\n    position: {\n      x: number\n      y: number\n    }\n  } | null\n  focusPath: string\n  elements: ElementState[]\n  wasMaybeCollapsed: boolean\n  perspective: ClientPerspective\n  isDragging: boolean\n  dragInsertPosition: DragInsertPosition\n  dragSkeleton: DragSkeleton | null\n  dragShowMinimap: boolean\n  dragShowMinimapPrompt: boolean\n  dragMinimapTransition: boolean\n  dragGroupRect: OverlayRect | null\n}\n\nexport function overlayStateReducer(\n  state: OverlayState,\n  message: OverlayMsg | VisualEditingControllerMsg,\n): OverlayState {\n  const {type} = message\n  let {\n    contextMenu,\n    focusPath,\n    perspective,\n    isDragging,\n    dragInsertPosition,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragSkeleton,\n    dragMinimapTransition,\n    dragGroupRect,\n  } = state\n  let wasMaybeCollapsed = false\n\n  if (type === 'presentation/focus') {\n    const prevFocusPath = state.focusPath\n\n    focusPath = message.data.path\n\n    if (prevFocusPath !== focusPath) {\n      wasMaybeCollapsed = prevFocusPath.slice(focusPath.length).startsWith('[')\n    }\n  }\n\n  if (type === 'presentation/perspective') {\n    perspective = message.data.perspective\n  }\n\n  if (type === 'element/contextmenu') {\n    if ('sanity' in message) {\n      contextMenu = {node: message.sanity, position: message.position}\n    } else {\n      contextMenu = null\n    }\n  }\n\n  if (\n    type === 'element/click' ||\n    type === 'element/mouseleave' ||\n    type === 'overlay/blur' ||\n    type === 'presentation/blur' ||\n    type === 'presentation/focus'\n  ) {\n    contextMenu = null\n  }\n\n  if (type === 'overlay/dragUpdateInsertPosition') {\n    dragInsertPosition = message.insertPosition\n  }\n\n  if (type === 'overlay/dragStart') {\n    isDragging = true\n  }\n\n  if (message.type === 'overlay/dragUpdateSkeleton') {\n    dragSkeleton = message.skeleton\n  }\n\n  if (type === 'overlay/dragEnd') {\n    isDragging = false\n  }\n\n  if (message.type === 'overlay/dragToggleMinimapPrompt') {\n    dragShowMinimapPrompt = message.display\n  }\n\n  if (type === 'overlay/dragStartMinimapTransition') {\n    dragMinimapTransition = true\n  }\n\n  if (type === 'overlay/dragEndMinimapTransition') {\n    dragMinimapTransition = false\n  }\n\n  if (type === 'overlay/dragUpdateGroupRect') {\n    dragGroupRect = message.groupRect\n  }\n\n  if (type === 'overlay/dragToggleMinimap') {\n    dragShowMinimap = message.display\n  }\n\n  return {\n    ...state,\n    contextMenu,\n    elements: elementsReducer(state.elements, message),\n    dragInsertPosition,\n    dragSkeleton,\n    dragGroupRect,\n    isDragging,\n    focusPath,\n    perspective,\n    wasMaybeCollapsed,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragMinimapTransition,\n  }\n}\n","import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport const PreviewSnapshotsProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const [previewSnapshots, setPreviewSnapshots] = useState<PreviewSnapshotsContextValue>([])\n\n  const fetchPreviewSnapshots = useCallback(\n    async (signal: AbortSignal) => {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/preview-snapshots', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setPreviewSnapshots(response.snapshots)\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    },\n    [comlink],\n  )\n  useEffect(() => {\n    if (!comlink) return\n\n    const previewSapshotsFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      fetchPreviewSnapshots(previewSapshotsFetch.signal)\n    }, 'connected')\n\n    return () => {\n      previewSapshotsFetch.abort()\n      unsub()\n    }\n  }, [comlink, fetchPreviewSnapshots])\n\n  useEffect(() => {\n    return comlink?.on('presentation/preview-snapshots', (data) => {\n      setPreviewSnapshots(data.snapshots)\n    })\n  }, [comlink])\n\n  const context = useMemo<PreviewSnapshotsContextValue>(() => previewSnapshots, [previewSnapshots])\n  return (\n    <PreviewSnapshotsContext.Provider value={context}>{children}</PreviewSnapshotsContext.Provider>\n  )\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n  UnresolvedPath,\n} from '@sanity/presentation-comlink'\nimport {\n  useCallback,\n  useDeferredValue,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {\n  ElementState,\n  OverlayElementField,\n  OverlayElementParent,\n  VisualEditingNode,\n} from '../../types'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nfunction isSanityNode(node: SanityNode | SanityStegaNode): node is SanityNode {\n  return 'path' in node\n}\n\nfunction isDocumentSchemaType(type: SchemaType): type is DocumentSchema {\n  return type.type === 'document'\n}\n\nfunction isTypeSchemaType(type: SchemaType): type is TypeSchema {\n  return type.type === 'type'\n}\n\nfunction popUnkeyedPathSegments(path: string): string {\n  return path\n    .split('.')\n    .toReversed()\n    .reduce((acc, part) => {\n      if (acc.length) return [part, ...acc]\n      if (part.includes('[_key==')) return [part]\n      return []\n    }, [] as string[])\n    .join('.')\n}\n\nfunction getPathsWithUnresolvedTypes(elements: ElementState[]): {id: string; path: string}[] {\n  return elements.reduce((acc, element) => {\n    const {sanity} = element\n    if (!('id' in sanity)) return acc\n    if (!sanity.path.includes('[_key==')) return acc\n    const path = popUnkeyedPathSegments(sanity.path)\n    if (!acc.find((item) => item.id === sanity.id && item.path === path)) {\n      acc.push({id: sanity.id, path})\n    }\n    return acc\n  }, [] as UnresolvedPath[])\n}\n\nexport const SchemaProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n    elements: ElementState[]\n  }>\n> = function (props) {\n  const {comlink, children, elements} = props\n\n  const [resolvedTypes, setResolvedTypes] = useState<ResolvedSchemaTypeMap>(new Map())\n\n  const [schema, setSchema] = useState<SchemaType[] | null>(null)\n\n  useEffect(() => {\n    if (!comlink) return\n\n    async function fetchSchema(signal: AbortSignal) {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/schema', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setSchema(response.schema)\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    }\n    const schemaFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      fetchSchema(schemaFetch.signal)\n    }, 'connected')\n\n    return () => {\n      schemaFetch.abort()\n      unsub()\n    }\n  }, [comlink])\n\n  const reportedPathsRef = useRef<UnresolvedPath[]>([])\n  const paths = getPathsWithUnresolvedTypes(useDeferredValue(elements))\n  const controllerRef = useRef<AbortController | null>(null)\n\n  useEffect(() => {\n    if (!paths.length || !comlink) return\n    // We report a list of paths that reference array items using a _key. We need\n    // to resolve the types of each of these items so we can map them to the\n    // correct schema types. One day CSM might include this data for us.\n    const reportPaths = async (paths: UnresolvedPath[], signal: AbortSignal) => {\n      const initialReportedPaths = reportedPathsRef.current\n      try {\n        reportedPathsRef.current = paths\n        const response = await comlink.fetch(\n          'visual-editing/schema-union-types',\n          {paths},\n          {signal, suppressWarnings: true},\n        )\n        if (signal.aborted) return\n        setResolvedTypes(response.types)\n        controllerRef.current = null\n      } catch {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n      if (signal.aborted) {\n        reportedPathsRef.current = initialReportedPaths\n      }\n    }\n\n    if (\n      paths.some(\n        (p) => !reportedPathsRef.current.find(({id, path}) => id === p.id && path === p.path),\n      )\n    ) {\n      // Abort any previous requests\n      controllerRef.current?.abort()\n      controllerRef.current = new AbortController()\n      reportPaths(paths, controllerRef.current.signal)\n    }\n  }, [comlink, paths])\n\n  const getType = useCallback(\n    <T extends 'document' | 'type' = 'document'>(\n      node: SanityNode | SanityStegaNode | string,\n      _type?: T,\n    ): T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined => {\n      const type = _type || 'document'\n      if (\n        !schema ||\n        (typeof node !== 'string' && (!isSanityNode(node) || !Array.isArray(schema)))\n      ) {\n        return undefined\n      }\n      const name = typeof node === 'string' ? node : node.type\n      const filter = type === 'document' ? isDocumentSchemaType : isTypeSchemaType\n      return schema\n        .filter(filter)\n        .find((schemaType) => schemaType.name === name) as T extends 'document'\n        ? DocumentSchema | undefined\n        : TypeSchema | undefined\n    },\n    [schema],\n  )\n\n  const getField = useCallback(\n    (\n      node: SanityNode | SanityStegaNode,\n    ): {\n      field: OverlayElementField\n      parent: OverlayElementParent\n    } => {\n      if (!isSanityNode(node)) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n\n      const schemaType = getType(node)\n\n      if (!schemaType) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n      function fieldFromPath(\n        schemaType: OverlayElementParent,\n        path: string[],\n        parent: OverlayElementParent,\n        prevPath: string[] = [],\n      ): {\n        field: OverlayElementField\n        parent: OverlayElementParent\n      } {\n        if (!schemaType) {\n          return {field: undefined, parent: undefined}\n        }\n\n        const [next, ...rest] = path\n\n        if ('fields' in schemaType) {\n          const objectField = schemaType.fields[next]\n          if (!objectField && 'rest' in schemaType) {\n            return fieldFromPath(schemaType.rest, path, schemaType, prevPath)\n          }\n          if (!rest.length) {\n            return {field: objectField, parent}\n          }\n          if (!objectField) {\n            throw new Error(\n              `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n            )\n          }\n          return fieldFromPath(objectField.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'array') {\n          return fieldFromPath(schemaType.of, path, schemaType, prevPath)\n        } else if (schemaType.type === 'arrayItem') {\n          if (!rest.length) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'union') {\n          const name = next.startsWith('[_key==')\n            ? resolvedTypes\n                ?.get((node as SanityNode).id)\n                ?.get([prevPath.join('.'), next].filter(Boolean).join(''))\n            : next\n          return fieldFromPath(\n            schemaType.of.find((item) => (item.type === 'unionOption' ? item.name === name : item)),\n            rest,\n            schemaType,\n            [...prevPath, next],\n          )\n        } else if (schemaType.type === 'unionOption') {\n          if (!next) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, path, schemaType, prevPath)\n        } else if (schemaType.type === 'inline') {\n          const type = getType(schemaType.name, 'type')\n          return fieldFromPath((type as TypeSchema).value, path, schemaType, prevPath)\n        }\n        throw new Error(\n          `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n        )\n      }\n\n      const nodePath = node.path.split('.').flatMap((part) => {\n        if (part.includes('[')) {\n          return part.split(/(\\[.+\\])/, 2)\n        }\n        return [part]\n      })\n\n      try {\n        return fieldFromPath(schemaType, nodePath, undefined)\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        if (e instanceof Error) console.warn(e.message)\n        return {field: undefined, parent: undefined}\n      }\n    },\n    [getType, resolvedTypes],\n  )\n\n  const context = useMemo<SchemaContextValue>(() => ({getField, getType}), [getField, getType])\n\n  return <SchemaContext.Provider value={context}>{children}</SchemaContext.Provider>\n}\n","import type {SerializableObject} from '@sanity/presentation-comlink'\nimport {useEffect, useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {SharedStateContext} from './SharedStateContext'\n\nconst createStore = (initialState: SerializableObject) => {\n  let state = initialState\n  const getState = () => state\n  const listeners = new Set<() => void>()\n  const setState = (fn: (state: SerializableObject) => SerializableObject) => {\n    state = fn(state)\n    listeners.forEach((l) => l())\n  }\n  const subscribe = (listener: () => void) => {\n    listeners.add(listener)\n    return () => listeners.delete(listener)\n  }\n  return {getState, setState, subscribe}\n}\n\nconst store = createStore({})\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = (props) => {\n  const {comlink, children} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/shared-state', (data) => {\n      if ('value' in data) {\n        store.setState((prev) => ({...prev, [data.key]: data.value}))\n      } else {\n        store.setState((prev) => {\n          return Object.fromEntries(Object.entries(prev).filter(([key]) => key !== data.key))\n        })\n      }\n    })\n  }, [comlink])\n\n  useEffect(() => {\n    async function fetch() {\n      const value = await comlink?.fetch('visual-editing/shared-state', undefined, {\n        suppressWarnings: true,\n      })\n      if (value) {\n        store.setState(() => value.state)\n      }\n    }\n    fetch().catch((reason) => {\n      // eslint-disable-next-line no-console\n      console.debug(reason)\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sanity/visual-editing]: Failed to fetch shared state. Check your version of `sanity` is up-to-date',\n      )\n    })\n  }, [comlink])\n\n  const value = useMemo(() => ({comlink, store}), [comlink])\n\n  return <SharedStateContext.Provider value={value}>{children}</SharedStateContext.Provider>\n}\n","import {useCallback, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {events, TelemetryContext, type TelemetryContextValue} from './TelemetryContext'\n\nexport const TelemetryProvider: FunctionComponent<\n  PropsWithChildren<{comlink?: VisualEditingNode}>\n> = ({children, comlink}) => {\n  const log = useCallback<TelemetryContextValue>(\n    (name, data) => {\n      if (!comlink) return\n\n      const event = events[name]\n\n      if (!event) {\n        throw new Error(`Telemetry event: ${name} does not exist`)\n      } else {\n        comlink.post('visual-editing/telemetry-log', {event, data})\n      }\n    },\n    [comlink],\n  )\n\n  return <TelemetryContext.Provider value={log}>{children}</TelemetryContext.Provider>\n}\n","import {useEffect, useRef, type MutableRefObject} from 'react'\nimport {createOverlayController} from '../controller'\nimport {useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {OverlayController, OverlayEventHandler} from '../types'\n\n/**\n * Hook for using an overlay controller\n * @internal\n */\nexport function useController(\n  element: HTMLElement | null,\n  handler: OverlayEventHandler,\n  inFrame: boolean,\n  inPopUp: boolean,\n): MutableRefObject<OverlayController | undefined> {\n  const overlayController = useRef<OverlayController | undefined>(undefined)\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  useEffect(() => {\n    if (!element) return undefined\n\n    overlayController.current = createOverlayController({\n      handler,\n      overlayElement: element,\n      inFrame,\n      inPopUp,\n      optimisticActorReady,\n    })\n\n    return () => {\n      overlayController.current?.destroy()\n      overlayController.current = undefined\n    }\n  }, [element, handler, inFrame, inPopUp, optimisticActorReady])\n\n  return overlayController\n}\n","import type {VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport {useEffect} from 'react'\nimport type {OverlayMsg, VisualEditingNode} from '../types'\n\nexport function usePerspectiveSync(\n  comlink: VisualEditingNode | undefined,\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void,\n): void {\n  useEffect(() => {\n    const controller = new AbortController()\n    comlink\n      ?.fetch('visual-editing/fetch-perspective', undefined, {\n        signal: controller.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        dispatch({type: 'presentation/perspective', data})\n      })\n      .catch(() => {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      })\n\n    const unsub = comlink?.on('presentation/perspective', (data) => {\n      dispatch({type: 'presentation/perspective', data})\n    })\n\n    return () => {\n      unsub?.()\n      controller.abort()\n    }\n  }, [comlink, dispatch])\n}\n","import type {ClientPerspective, ContentSourceMapDocuments} from '@sanity/client'\nimport {useCallback, useEffect, useRef} from 'react'\nimport type {ElementState, SanityNode, VisualEditingNode} from '../types'\n\nfunction isEqualSets(a: Set<string>, b: Set<string>) {\n  if (a === b) return true\n  if (a.size !== b.size) return false\n  for (const value of a) if (!b.has(value)) return false\n  return true\n}\n\n/**\n * Hook for reporting in use documents to Presentation\n * @internal\n */\nexport function useReportDocuments(\n  comlink: VisualEditingNode | undefined,\n  elements: ElementState[],\n  perspective: ClientPerspective,\n): void {\n  const lastReported = useRef<\n    | {\n        nodeIds: Set<string>\n        perspective: ClientPerspective\n      }\n    | undefined\n  >(undefined)\n\n  const reportDocuments = useCallback(\n    (documents: ContentSourceMapDocuments, perspective: ClientPerspective) => {\n      comlink?.post('visual-editing/documents', {\n        documents,\n        perspective,\n      })\n    },\n    [comlink],\n  )\n\n  useEffect(() => {\n    // Report only nodes of type `SanityNode`. Untransformed `SanityStegaNode`\n    // nodes without an `id`, are not reported as they will not contain the\n    // necessary document data.\n    const nodes = elements\n      .map((e) => {\n        const {sanity} = e\n        if (!('id' in sanity)) return null\n        return sanity\n      })\n      .filter((s) => !!s) as SanityNode[]\n\n    const nodeIds = new Set<string>(nodes.map((e) => e.id))\n    // Report if:\n    // - Documents not yet reported\n    // - Document IDs changed\n    // - Perspective changed\n    if (\n      !lastReported.current ||\n      !isEqualSets(nodeIds, lastReported.current.nodeIds) ||\n      perspective !== lastReported.current.perspective\n    ) {\n      const documentsOnPage: ContentSourceMapDocuments = Array.from(nodeIds).map((_id) => {\n        const node = nodes.find((node) => node.id === _id)!\n        const {type, projectId: _projectId, dataset: _dataset} = node\n        return _projectId && _dataset\n          ? {_id, _type: type!, _projectId, _dataset}\n          : {_id, _type: type!}\n      })\n      lastReported.current = {nodeIds, perspective}\n      reportDocuments(documentsOnPage, perspective)\n    }\n  }, [elements, perspective, reportDocuments])\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport {getDraftId, getPublishedId} from '@sanity/client/csm'\nimport type {Status} from '@sanity/comlink'\nimport {type VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport {\n  isHTMLAnchorElement,\n  isHTMLElement,\n  LayerProvider,\n  PortalProvider,\n  studioTheme,\n  ThemeProvider,\n  usePrefersDark,\n} from '@sanity/ui/_visual-editing'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  type FunctionComponent,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {useOptimisticActor, useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {\n  OverlayComponentResolver,\n  OverlayEventHandler,\n  OverlayMsg,\n  VisualEditingNode,\n} from '../types'\nimport {sanityNodesExistInSameArray} from '../util/findSanityNodes'\nimport {useDragEndEvents} from '../util/useDragEvents'\nimport {ContextMenu} from './context-menu/ContextMenu'\nimport {ElementOverlay} from './ElementOverlay'\nimport {OverlayDragGroupRect} from './OverlayDragGroupRect'\nimport {OverlayDragInsertMarker} from './OverlayDragInsertMarker'\nimport {OverlayDragPreview} from './OverlayDragPreview'\nimport {OverlayMinimapPrompt} from './OverlayMinimapPrompt'\nimport {overlayStateReducer} from './overlayStateReducer'\nimport {PreviewSnapshotsProvider} from './preview/PreviewSnapshotsProvider'\nimport {SchemaProvider} from './schema/SchemaProvider'\nimport {SharedStateProvider} from './shared-state/SharedStateProvider'\nimport {TelemetryProvider} from './telemetry/TelemetryProvider'\nimport {useTelemetry} from './telemetry/useTelemetry'\nimport {useController} from './useController'\nimport {usePerspectiveSync} from './usePerspectiveSync'\nimport {useReportDocuments} from './useReportDocuments'\n\nconst Root = styled.div<{\n  $zIndex?: string | number\n}>`\n  background-color: transparent;\n  direction: ltr;\n  inset: 0;\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: ${({$zIndex}) => $zIndex ?? '9999999'};\n`\n\nfunction raf2(fn: () => void) {\n  let r0: number | undefined = undefined\n  let r1: number | undefined = undefined\n\n  r0 = requestAnimationFrame(() => {\n    r1 = requestAnimationFrame(fn)\n  })\n\n  return () => {\n    if (r0 !== undefined) cancelAnimationFrame(r0)\n    if (r1 !== undefined) cancelAnimationFrame(r1)\n  }\n}\n\nconst DocumentReporter: FunctionComponent<{\n  documentIds: string[]\n  perspective: ClientPerspective\n}> = (props) => {\n  const {documentIds} = props\n  const [uniqueIds, setUniqueIds] = useState<string[]>([])\n\n  useEffect(() => {\n    setUniqueIds((prev) => {\n      const next = Array.from(new Set(documentIds))\n      return prev.length === next.length &&\n        prev.reduce((acc, prevId) => acc.filter((id) => id !== prevId), next)?.length === 0\n        ? prev\n        : next\n    })\n  }, [documentIds])\n  const actor = useOptimisticActor()\n\n  useEffect(() => {\n    for (const id of uniqueIds) {\n      actor.send({type: 'observe', documentId: getDraftId(id)})\n      actor.send({type: 'observe', documentId: getPublishedId(id)})\n    }\n    return () => {\n      for (const id of uniqueIds) {\n        actor.send({type: 'unobserve', documentId: getDraftId(id)})\n        actor.send({type: 'unobserve', documentId: getPublishedId(id)})\n      }\n    }\n  }, [actor, uniqueIds])\n\n  return null\n}\n\nconst OverlaysController: FunctionComponent<{\n  comlink?: VisualEditingNode\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void\n  inFrame: boolean\n  inPopUp: boolean\n  onDrag: (x: number, y: number) => void\n  overlayEnabled: boolean\n  rootElement: HTMLElement | null\n}> = (props) => {\n  const {comlink, dispatch, inFrame, inPopUp, onDrag, overlayEnabled, rootElement} = props\n  const {dispatchDragEndEvent} = useDragEndEvents()\n  const sendTelemetry = useTelemetry()\n\n  const overlayEventHandler: OverlayEventHandler = useCallback(\n    (message) => {\n      if (message.type === 'element/click') {\n        const {sanity} = message\n        comlink?.post('visual-editing/focus', sanity)\n\n        sendTelemetry('Visual Editing Overlay Clicked', null)\n      } else if (message.type === 'overlay/activate') {\n        comlink?.post('visual-editing/toggle', {enabled: true})\n      } else if (message.type === 'overlay/deactivate') {\n        comlink?.post('visual-editing/toggle', {enabled: false})\n      } else if (message.type === 'overlay/dragEnd') {\n        const {insertPosition, target, dragGroup, flow, preventInsertDefault} = message\n\n        dispatchDragEndEvent({insertPosition, target, dragGroup, flow, preventInsertDefault})\n\n        if (insertPosition) {\n          sendTelemetry('Visual Editing Drag Sequence Completed', null)\n        }\n      } else if (message.type === 'overlay/dragUpdateCursorPosition') {\n        onDrag(message.x, message.y)\n\n        return\n      } else if (message.type === 'overlay/dragToggleMinimap' && message.display === true) {\n        sendTelemetry('Visual Editing Drag Minimap Enabled', null)\n      } else if (message.type === 'overlay/setCursor') {\n        const {element, cursor} = message\n\n        if (cursor) {\n          element.style.cursor = cursor\n        } else {\n          element.style.removeProperty('cursor')\n        }\n      }\n\n      dispatch(message)\n    },\n    [comlink, dispatch, dispatchDragEndEvent, onDrag, sendTelemetry],\n  )\n\n  const controller = useController(rootElement, overlayEventHandler, inFrame, inPopUp)\n\n  useEffect(() => {\n    if (overlayEnabled) {\n      controller.current?.activate()\n    } else {\n      controller.current?.deactivate()\n    }\n  }, [controller, overlayEnabled])\n\n  return null\n}\n\n/**\n * @internal\n */\nexport const Overlays: FunctionComponent<{\n  comlink?: VisualEditingNode\n  comlinkStatus?: Status\n  componentResolver?: OverlayComponentResolver\n  inFrame: boolean\n  inPopUp: boolean\n  zIndex?: string | number\n}> = (props) => {\n  const {\n    comlink,\n    comlinkStatus,\n    componentResolver: _componentResolver,\n    inFrame,\n    inPopUp,\n    zIndex,\n  } = props\n\n  const prefersDark = usePrefersDark()\n\n  const [\n    {\n      contextMenu,\n      dragInsertPosition,\n      dragShowMinimap,\n      dragShowMinimapPrompt,\n      dragSkeleton,\n      elements,\n      isDragging,\n      perspective,\n      wasMaybeCollapsed,\n      dragMinimapTransition,\n      dragGroupRect,\n    },\n    dispatch,\n  ] = useReducer(overlayStateReducer, {\n    contextMenu: null,\n    dragInsertPosition: null,\n    dragShowMinimap: false,\n    dragShowMinimapPrompt: false,\n    dragSkeleton: null,\n    elements: [],\n    focusPath: '',\n    isDragging: false,\n    perspective: 'published',\n    wasMaybeCollapsed: false,\n    dragMinimapTransition: false,\n    dragGroupRect: null,\n  })\n  const [rootElement, setRootElement] = useState<HTMLElement | null>(null)\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  useEffect(() => {\n    const unsubs = [\n      comlink?.on('presentation/focus', (data) => {\n        dispatch({type: 'presentation/focus', data})\n      }),\n      comlink?.on('presentation/blur', (data) => {\n        dispatch({type: 'presentation/blur', data})\n      }),\n      comlink?.on('presentation/toggle-overlay', () => {\n        setOverlayEnabled((enabled) => !enabled)\n      }),\n    ].filter(Boolean)\n\n    return () => unsubs.forEach((unsub) => unsub!())\n  }, [comlink])\n\n  usePerspectiveSync(comlink, dispatch)\n\n  useReportDocuments(comlink, elements, perspective)\n\n  const updateDragPreviewCustomProps = useCallback(\n    (x: number, y: number) => {\n      if (!rootElement) return\n\n      rootElement.style.setProperty('--drag-preview-x', `${x}px`)\n      rootElement.style.setProperty('--drag-preview-y', `${y - window.scrollY}px`)\n    },\n    [rootElement],\n  )\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      const target = event.target\n\n      // We only need to modify the default behavior if the target is a link\n      const targetsLink = Boolean(\n        isHTMLAnchorElement(target) || (isHTMLElement(target) && target.closest('a')),\n      )\n\n      if (targetsLink && event.altKey) {\n        event.preventDefault()\n        event.stopPropagation()\n        const newEvent = new MouseEvent(event.type, {\n          ...event,\n          altKey: false,\n          bubbles: true,\n          cancelable: true,\n        })\n        event.target?.dispatchEvent(newEvent)\n      }\n    }\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    window.addEventListener('click', handleClick)\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n\n    return () => {\n      window.removeEventListener('click', handleClick)\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [setOverlayEnabled])\n\n  const [overlaysFlash, setOverlaysFlash] = useState(false)\n  const [fadingOut, setFadingOut] = useState(false)\n  const fadeOutTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined)\n\n  // Flash overlays when they are enabled\n  useEffect(() => {\n    if (overlayEnabled) {\n      return raf2(() => {\n        setOverlaysFlash(true)\n        raf2(() => {\n          setFadingOut(true)\n          fadeOutTimeoutRef.current = setTimeout(() => {\n            setFadingOut(false)\n            setOverlaysFlash(false)\n          }, 1500)\n        })\n      })\n    } else if (fadeOutTimeoutRef.current) {\n      clearTimeout(fadeOutTimeoutRef.current)\n      setOverlaysFlash(false)\n      setFadingOut(false)\n    }\n\n    return\n  }, [overlayEnabled])\n\n  const documentIds = useMemo(() => {\n    return elements.flatMap((element) => ('id' in element.sanity ? [element.sanity.id] : []))\n  }, [elements])\n\n  const closeContextMenu = useCallback(() => {\n    dispatch({type: 'overlay/blur'})\n  }, [])\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  const componentResolver = useMemo(() => {\n    return optimisticActorReady ? _componentResolver : undefined\n  }, [_componentResolver, optimisticActorReady])\n\n  const elementsToRender = useMemo(() => {\n    if (((inFrame || inPopUp) && comlinkStatus !== 'connected') || isDragging) {\n      return []\n    }\n\n    return elements\n      .filter((e) => e.activated || e.focused)\n      .map(({id, element, focused, hovered, rect, sanity, dragDisabled}) => {\n        const draggable =\n          !dragDisabled &&\n          !!element.getAttribute('data-sanity') &&\n          optimisticActorReady &&\n          elements.some((e) =>\n            'id' in e.sanity && 'id' in sanity\n              ? sanityNodesExistInSameArray(e.sanity, sanity) && e.sanity.path !== sanity.path\n              : false,\n          )\n\n        return (\n          <ElementOverlay\n            componentResolver={componentResolver}\n            element={element}\n            enableScrollIntoView={!isDragging && !dragMinimapTransition && !dragShowMinimap}\n            key={id}\n            focused={focused}\n            hovered={hovered}\n            node={sanity}\n            rect={rect}\n            // When inside a popup window we want actions to show up on hover, but iframes should hide them\n            showActions={!inFrame}\n            draggable={draggable}\n            isDragging={isDragging || dragMinimapTransition}\n            wasMaybeCollapsed={focused && wasMaybeCollapsed}\n          />\n        )\n      })\n  }, [\n    componentResolver,\n    dragMinimapTransition,\n    dragShowMinimap,\n    elements,\n    inFrame,\n    inPopUp,\n    isDragging,\n    optimisticActorReady,\n    comlinkStatus,\n    wasMaybeCollapsed,\n  ])\n\n  return (\n    <TelemetryProvider comlink={comlink}>\n      <ThemeProvider scheme={prefersDark ? 'dark' : 'light'} theme={studioTheme} tone=\"transparent\">\n        <LayerProvider>\n          <PortalProvider element={rootElement}>\n            <SchemaProvider comlink={comlink} elements={elements}>\n              <PreviewSnapshotsProvider comlink={comlink}>\n                <SharedStateProvider comlink={comlink}>\n                  <Root\n                    data-fading-out={fadingOut ? '' : undefined}\n                    data-overlays={overlaysFlash ? '' : undefined}\n                    ref={setRootElement}\n                    $zIndex={zIndex}\n                  >\n                    <DocumentReporter documentIds={documentIds} perspective={perspective} />\n                    <OverlaysController\n                      comlink={comlink}\n                      dispatch={dispatch}\n                      inFrame={inFrame}\n                      inPopUp={inPopUp}\n                      onDrag={updateDragPreviewCustomProps}\n                      overlayEnabled={overlayEnabled}\n                      rootElement={rootElement}\n                    />\n                    {contextMenu && <ContextMenu {...contextMenu} onDismiss={closeContextMenu} />}\n                    {elementsToRender}\n\n                    {isDragging && !dragMinimapTransition && (\n                      <>\n                        {dragInsertPosition && (\n                          <OverlayDragInsertMarker dragInsertPosition={dragInsertPosition} />\n                        )}\n                        {dragShowMinimapPrompt && <OverlayMinimapPrompt />}\n                        {dragGroupRect && <OverlayDragGroupRect dragGroupRect={dragGroupRect} />}\n                      </>\n                    )}\n                    {isDragging && dragSkeleton && <OverlayDragPreview skeleton={dragSkeleton} />}\n                  </Root>\n                </SharedStateProvider>\n              </PreviewSnapshotsProvider>\n            </SchemaProvider>\n          </PortalProvider>\n        </LayerProvider>\n      </ThemeProvider>\n    </TelemetryProvider>\n  )\n}\n\nconst IS_MAC =\n  typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform)\n\nconst MODIFIERS: Record<string, 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'> = {\n  alt: 'altKey',\n  ctrl: 'ctrlKey',\n  mod: IS_MAC ? 'metaKey' : 'ctrlKey',\n  shift: 'shiftKey',\n}\nfunction isHotkey(keys: string[], event: KeyboardEvent): boolean {\n  return keys.every((key) => {\n    if (MODIFIERS[key]) {\n      return event[MODIFIERS[key]]\n    }\n    return event.key === key.toUpperCase()\n  })\n}\nfunction isAltKey(event: KeyboardEvent): boolean {\n  return event.key === 'Alt'\n}\n","import {useEffect, useRef, type FunctionComponent} from 'react'\nimport type {VisualEditingNode, VisualEditingOptions} from '../types'\n\n/**\n * @internal\n */\nexport const Refresh: FunctionComponent<\n  {\n    comlink: VisualEditingNode\n  } & Required<Pick<VisualEditingOptions, 'refresh'>>\n> = (props) => {\n  const {comlink, refresh} = props\n\n  const manualRefreshRef = useRef(0)\n  const mutationRefreshRef = useRef(0)\n\n  useEffect(\n    () =>\n      comlink.on('presentation/refresh', (data) => {\n        if (data.source === 'manual') {\n          clearTimeout(manualRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          let timedOut = false\n          manualRefreshRef.current = window.setTimeout(() => {\n            comlink.post('visual-editing/refreshed', data)\n            timedOut = true\n          }, 3000)\n          promise?.finally?.(() => {\n            if (timedOut) return\n            clearTimeout(manualRefreshRef.current)\n            comlink.post('visual-editing/refreshed', data)\n          })\n        } else if (data.source === 'mutation') {\n          clearTimeout(mutationRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          // Send an additional refresh to account for Content Lake eventual consistency\n          mutationRefreshRef.current = window.setTimeout(() => {\n            const promise = refresh(data)\n            if (promise === false) return\n            comlink.post('visual-editing/refreshing', data)\n            promise?.finally?.(() => {\n              comlink.post('visual-editing/refreshed', data)\n            }) || comlink.post('visual-editing/refreshed', data)\n          }, 1000)\n          promise?.finally?.(() => {\n            comlink.post('visual-editing/refreshed', data)\n          }) || comlink.post('visual-editing/refreshed', data)\n        }\n      }),\n    [comlink, refresh],\n  )\n\n  return null\n}\n","import {createNode, createNodeMachine, type Status} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {useEffect, useState} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useComlink(active: boolean = true): [VisualEditingNode | undefined, Status] {\n  const [node, setNode] = useState<VisualEditingNode>()\n  const [status, setStatus] = useState<Status>('idle')\n\n  useEffect(() => {\n    if (!active) return\n    const instance = createNode<VisualEditingNodeMsg, VisualEditingControllerMsg>(\n      {\n        name: 'visual-editing',\n        connectTo: 'presentation',\n      },\n      createNodeMachine<VisualEditingNodeMsg, VisualEditingControllerMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingNodeMsg>(),\n      }),\n    )\n    const unsub = instance.onStatus(() => setStatus('connected'), 'connected')\n\n    setNode(instance)\n    const stop = instance.start()\n\n    return () => {\n      unsub()\n      stop()\n      setNode(undefined)\n    }\n  }, [active])\n\n  /**\n   * Handle reporting of status to the presentation tool in case of connection failure due to misconfigured URL origin\n   */\n  useEffect(() => {\n    /**\n     * We only need to report status if the node is not connected\n     */\n    if (status === 'connected') return\n\n    const controller = new AbortController()\n    window.addEventListener(\n      'message',\n      ({data, origin}: MessageEvent<unknown>) => {\n        /**\n         * Detect if Presentation is asking if Visual Editing is here but misconfigured\n         * @TODO this should probably be a feature built into `comlink`, as it's a common problem for apps dealing with iframes.\n         */\n        if (\n          data &&\n          typeof data === 'object' &&\n          'domain' in data &&\n          data.domain === 'sanity/channels' &&\n          'from' in data &&\n          data.from === 'presentation' &&\n          'type' in data &&\n          data.type === 'presentation/status'\n        ) {\n          /**\n           * We only send this message to the parent window, which supports Presentation loading the page in an iframe.\n           * This avoids letting other iframes on the page, or other openers, from getting a response.\n           */\n          window.parent.postMessage(\n            {\n              domain: 'sanity/channels',\n              type: 'visual-editing/status',\n              data: {origin: location.origin},\n            },\n            /**\n             * Using the same origin ensures that if the parent window don't have the same origin the message won't be sent.\n             * This grants some protection against spoofing, as malicious iframes can't easily call this event and trigger the Presentation Tool to think there's a failing state.\n             */\n            origin,\n          )\n        }\n      },\n      {signal: controller.signal},\n    )\n    return () => {\n      controller.abort()\n    }\n  }, [status])\n\n  return [node, status]\n}\n","import {type ListenEvent} from '@sanity/client'\nimport {merge, ReplaySubject, Subject, type Observable, type ObservedValueOf} from 'rxjs'\nimport type {VisualEditingNode} from '../../types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype SharedListenEvent = ListenEvent<Record<string, any>>\n\n/**\n * Creates a single, shared, listener EventSource that strems remote mutations, and notifies when it's online (welcome), offline (reconnect).\n */\nexport function createSharedListener(comlink: VisualEditingNode): Observable<SharedListenEvent> {\n  // Welcome events could be received before the listener has been subscribed\n  // to. Using a ReplaySubject will ensure the welcome event is re-emitted when\n  // a new subscriber arrives.\n  const incomingConnection$ = new ReplaySubject<SharedListenEvent>(1)\n  const incomingMutations$ = new Subject<SharedListenEvent>()\n\n  comlink\n    .fetch('visual-editing/snapshot-welcome', undefined, {suppressWarnings: true})\n    .then((data) => {\n      incomingConnection$.next(data.event)\n    })\n    .catch(() => {\n      // Fail silently as the app may be communicating with a version of\n      // Presentation that does not support this feature\n    })\n\n  comlink.on('presentation/snapshot-event', (data) => {\n    // Welcome events are still emitted by Presentation for backwards\n    // compatibility. We don't need them anymore as we explicitly fetch the\n    // welcome event, so filter them out here.\n    if (data.event.type === 'reconnect') {\n      incomingConnection$.next(data.event)\n    }\n    if (data.event.type === 'mutation') {\n      incomingMutations$.next(data.event)\n    }\n  })\n\n  return merge(incomingConnection$, incomingMutations$)\n}\n\nexport type SharedListenerEvents = ObservedValueOf<ReturnType<typeof createSharedListener>>\n","import {useEffect} from 'react'\nimport {createActor} from 'xstate'\nimport {setActor} from '../optimistic/context'\nimport {createSharedListener} from '../optimistic/state/createSharedListener'\nimport {createDatasetMutator} from '../optimistic/state/datasetMutator'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useDatasetMutator(comlink: VisualEditingNode | undefined): void {\n  useEffect(() => {\n    if (!comlink) return\n    const listener = createSharedListener(comlink)\n    const datasetMutator = createDatasetMutator(comlink)\n    const mutator = createActor(datasetMutator, {\n      // @ts-expect-error @todo\n      input: {client: {withConfig: () => {}}, sharedListener: listener},\n    })\n\n    mutator.start()\n\n    // Fetch features to determine if optimistic updates are supported\n    const featuresFetch = new AbortController()\n    comlink\n      .fetch('visual-editing/features', undefined, {\n        signal: featuresFetch.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        if (data.features['optimistic']) {\n          setActor(mutator)\n        }\n      })\n      .catch(() => {\n        // eslint-disable-next-line no-console\n        console.warn(\n          '[@sanity/visual-editing] Package version mismatch detected: Please update your Sanity studio to prevent potential compatibility issues.',\n        )\n      })\n\n    return () => {\n      mutator.stop()\n      featuresFetch.abort()\n    }\n  }, [comlink])\n}\n","import {isMaybePreviewIframe, isMaybePreviewWindow} from '@sanity/presentation-comlink'\nimport {useEffect, useState} from 'react'\nimport {createPortal} from 'react-dom'\nimport type {VisualEditingOptions} from '../types'\nimport {History} from './History'\nimport {Meta} from './Meta'\nimport {Overlays} from './Overlays'\nimport {Refresh} from './Refresh'\nimport {useComlink} from './useComlink'\nimport {useDatasetMutator} from './useDatasetMutator'\n\n/**\n * @public\n */\nexport const VisualEditing = (props: VisualEditingOptions & {portal: boolean}): React.ReactNode => {\n  const {components, history, portal = true, refresh, zIndex} = props\n\n  const [inFrame, setInFrame] = useState<boolean | null>(null)\n  const [inPopUp, setInPopUp] = useState<boolean | null>(null)\n  useEffect(() => {\n    setInFrame(isMaybePreviewIframe())\n    setInPopUp(isMaybePreviewWindow())\n  }, [])\n\n  const [portalElement, setPortalElement] = useState<HTMLElement | null>(null)\n  useEffect(() => {\n    if (portal === false) return undefined\n    const node = document.createElement('sanity-visual-editing')\n    document.documentElement.appendChild(node)\n    setPortalElement(node)\n    return () => {\n      setPortalElement(null)\n      if (document.documentElement.contains(node)) {\n        document.documentElement.removeChild(node)\n      }\n    }\n  }, [portal])\n\n  const [comlink, comlinkStatus] = useComlink(inFrame === true || inPopUp === true)\n  useDatasetMutator(comlinkStatus === 'connected' ? comlink : undefined)\n\n  const children = (\n    <>\n      {inFrame !== null && inPopUp !== null && (\n        <Overlays\n          comlink={comlink}\n          comlinkStatus={comlinkStatus}\n          componentResolver={components}\n          inFrame={inFrame}\n          inPopUp={inPopUp}\n          zIndex={zIndex}\n        />\n      )}\n      {comlink && (\n        <>\n          <History comlink={comlink} history={history} />\n          <Meta comlink={comlink} />\n          {refresh && <Refresh comlink={comlink} refresh={refresh} />}\n        </>\n      )}\n    </>\n  )\n\n  if (portal === false || !portalElement) return children\n\n  return createPortal(children, portalElement)\n}\nVisualEditing.displayName = 'VisualEditing'\n"],"names":["History","props","$","_c","comlink","history","t0","t1","on","data","update","useEffect","t2","t3","subscribe","title","document","post","Meta","sendMeta","observer","MutationObserver","mutation","target","nodeName","observe","head","subtree","characterData","childList","disconnect","getReferenceNodeAndInsertPosition","position","top","right","bottom","left","node","sanity","useDragEndEvents","getDocument","useDocuments","handler","e","insertPosition","preventInsertDefault","detail","reference","doc","id","key","targetKey","hasExplicitKey","getArrayItemKeyAndParentPath","path","arrayPath","referenceItemKey","patch","getSnapshot","snapshot","elementValue","getFromPath","at","remove","_key","insert","window","addEventListener","removeEventListener","dispatchDragEndEvent","_temp","Symbol","for","event","customEvent","CustomEvent","cancelable","dispatchEvent","SchemaContext","createContext","useSchema","context","useContext","Error","getArrayRemoveAction","type","getArrayRemovePatches","getArrayInsertAction","insertType","getArrayInsertPatches","getDuplicateAction","getArrayDuplicatePatches","getContextMenuItems","field","parent","getContextMenuArrayItems","getContextMenuUnionItems","Promise","resolve","getDuplicateItem","label","icon","CopyIcon","action","telemetryEvent","getRemoveItems","RemoveIcon","getMoveItems","withDivider","items","groupItems","moveUpPatches","moveDownPatches","moveFirstPatches","moveLastPatches","all","getArrayMovePatches","length","push","PublishIcon","ArrowUpIcon","ArrowDownIcon","UnpublishIcon","SortIcon","InsertAboveIcon","name","InsertBelowIcon","InsertMenuWrapper","width","onSelect","boundaryElement","arrow","constrainSize","floatingBoundary","padding","placement","fallbackPlacements","preventOverflow","__unstable_margins","jsx","InsertMenu","t4","MenuGroup","options","insertMenu","views","some","view","undefined","component","sendTelemetry","schemaType","of","filter","item","map","t","getNodeIcon","POPOVER_MARGINS","ContextMenuItem","onDismiss","useTelemetry","onClick","MenuDivider","hotkeys","MenuItem","t5","itemIndex","Component","ContextMenu","x","y","setBoundaryElement","useState","getField","setItems","fetchContextMenuItems","items_0","t6","getBoundingClientRect","height","contextMenuReferenceElement","t7","t8","t9","minWidth","maxWidth","t10","Box","Text","Spinner","t11","t12","Stack","t13","jsxs","Flex","t14","Fragment","i","t15","Menu","t16","t17","t18","t19","Popover","t20","PopoverPortal","getLinkHref","href","referer","parsed","URL","location","origin","hash","slice","pathname","search","searchParams","set","toString","PreviewSnapshotsContext","usePreviewSnapshots","isReactElementOverlayComponent","isValidElement","Root","styled","Card","Actions","Tab","ActionOpen","Labels","createIntentLink","baseUrl","tool","workspace","createEditUrl","pathToUrlString","studioPath","fromString","ElementOverlayInner","element","focused","componentResolver","showActions","draggable","getType","previewSnapshots","bb0","find","_id","bb1","value","componentContext","customComponents","useCustomComponents","__html","DocumentIcon","DragHandleIcon","Array","isArray","props_0","PointerEvents","ElementOverlay","memo","hovered","rect","wasMaybeCollapsed","enableScrollIntoView","ref","useRef","scrolledIntoViewRef","w","h","transform","style","current","scrollIntoView","behavior","actions","block","inline","scrollMode","isNearTop","setIsNearTop","io","IntersectionObserver","intersection","boundingClientRect","threshold","resolved","Link","useSyncExternalStore","_temp2","_temp3","onStoreChange","handlePopState","OverlayDragGroupRect","dragGroupRect","border","pointerEvents","markerThickness","lerp","v0","v1","OverlayDragInsertMarker","dragInsertPosition","flow","startX","endX","offset","Math","min","offset_0","offset_1","startX_0","startY","endY","offset_2","offset_3","offset_4","background","borderRadius","zIndex","div","$scaleFactor","$width","$height","clamp","number","max","inMin","inMax","outMin","outMax","mapped","OverlayDragPreview","skeleton","maxSkeletonWidth","innerWidth","scaleFactor","offsetX","offsetY","prefersDark","usePrefersDark","theme","useTheme_v2","radius","T0","T1","childRects","imageRects","textRects","color","r_1","r","from","tagName","r_0","OverlayMinimapPrompt","Hotkeys","ExpandIcon","elementsReducer","elements","message","activated","dragDisabled","clickedElement","overlayStateReducer","state","contextMenu","focusPath","perspective","isDragging","dragShowMinimap","dragShowMinimapPrompt","dragSkeleton","dragMinimapTransition","prevFocusPath","startsWith","display","groupRect","PreviewSnapshotsProvider","children","setPreviewSnapshots","signal","response","fetch","suppressWarnings","snapshots","fetchPreviewSnapshots","previewSapshotsFetch","AbortController","unsub","onStatus","abort","isSanityNode","isDocumentSchemaType","isTypeSchemaType","popUnkeyedPathSegments","split","toReversed","reduce","acc","part","includes","join","getPathsWithUnresolvedTypes","SchemaProvider","Map","resolvedTypes","setResolvedTypes","schema","setSchema","fetchSchema","schemaFetch","reportedPathsRef","useDeferredValue","paths","controllerRef","reportPaths","paths_0","signal_0","initialReportedPaths","response_0","aborted","types","p","_type","node_0","schemaType_0","fieldFromPath","schemaType_1","path_0","prevPath","next","rest","objectField","fields","name_0","get","Boolean","type_0","nodePath","flatMap","console","warn","createStore","initialState","getState","listeners","Set","setState","fn","forEach","l","listener","add","delete","store","SharedStateProvider","catch","value_0","SharedStateContext","prev","prev_0","Object","fromEntries","entries","reason","debug","TelemetryProvider","events","log","TelemetryContext","useController","inFrame","inPopUp","overlayController","optimisticActorReady","useOptimisticActorReady","createOverlayController","overlayElement","destroy","usePerspectiveSync","dispatch","controller","then","data_0","isEqualSets","a","b","size","has","useReportDocuments","lastReported","documents","perspective_0","reportDocuments","nodes","nodeIds","documentsOnPage","projectId","_projectId","dataset","_dataset","e_0","s","$zIndex","raf2","r0","r1","requestAnimationFrame","cancelAnimationFrame","DocumentReporter","documentIds","uniqueIds","setUniqueIds","actor","useOptimisticActor","id_0","send","documentId","getDraftId","getPublishedId","id_1","OverlaysController","onDrag","overlayEnabled","rootElement","enabled","dragGroup","cursor","removeProperty","activate","deactivate","Overlays","comlinkStatus","_componentResolver","useReducer","setRootElement","setOverlayEnabled","unsubs","setProperty","scrollY","updateDragPreviewCustomProps","handleClick","_temp4","handleKeyUp","isAltKey","_temp5","handleKeydown","_temp6","isHotkey","_temp7","overlaysFlash","setOverlaysFlash","fadingOut","setFadingOut","fadeOutTimeoutRef","setTimeout","clearTimeout","_temp8","closeContextMenu","_temp9","element_0","getAttribute","e_2","sanityNodesExistInSameArray","elementsToRender","t21","t22","t23","t24","t25","t26","LayerProvider","PortalProvider","t27","ThemeProvider","studioTheme","t28","IS_MAC","test","navigator","platform","MODIFIERS","alt","ctrl","mod","shift","keys","every","toUpperCase","prevId","isHTMLAnchorElement","isHTMLElement","closest","altKey","preventDefault","stopPropagation","newEvent","MouseEvent","bubbles","enabled_0","enabled_1","enabled_2","e_1","Refresh","refresh","manualRefreshRef","mutationRefreshRef","source","promise","timedOut","finally","promise_0","promise_1","useComlink","active","setNode","status","setStatus","instance","createNode","connectTo","createNodeMachine","provide","actors","createCompatibilityActors","stop","start","domain","postMessage","createSharedListener","incomingConnection$","ReplaySubject","incomingMutations$","Subject","merge","useDatasetMutator","datasetMutator","createDatasetMutator","mutator","createActor","input","client","withConfig","sharedListener","featuresFetch","features","optimistic","setActor","VisualEditing","components","portal","setInFrame","setInPopUp","isMaybePreviewIframe","isMaybePreviewWindow","portalElement","setPortalElement","createElement","documentElement","appendChild","contains","removeChild","createPortal","displayName"],"mappings":"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"}