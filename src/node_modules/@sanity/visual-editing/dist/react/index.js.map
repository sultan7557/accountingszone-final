{"version":3,"file":"index.js","sources":["../../src/ui/History.tsx","../../src/ui/Meta.ts","../../src/util/useDragEvents.ts","../../src/ui/schema/SchemaContext.tsx","../../src/ui/schema/useSchema.ts","../../src/ui/context-menu/contextMenuItems.tsx","../../src/ui/context-menu/ContextMenu.tsx","../../src/util/getLinkHref.ts","../../src/ui/preview/PreviewSnapshotsContext.tsx","../../src/ui/preview/usePreviewSnapshots.ts","../../src/ui/ElementOverlay.tsx","../../src/ui/OverlayDragGroupRect.tsx","../../src/ui/OverlayDragInsertMarker.tsx","../../src/ui/OverlayDragPreview.tsx","../../src/ui/OverlayMinimapPrompt.tsx","../../src/ui/elementsReducer.ts","../../src/ui/overlayStateReducer.ts","../../src/ui/preview/PreviewSnapshotsProvider.tsx","../../src/ui/schema/SchemaProvider.tsx","../../src/ui/shared-state/SharedStateProvider.tsx","../../src/ui/telemetry/TelemetryProvider.tsx","../../src/ui/useController.tsx","../../src/ui/usePerspectiveSync.tsx","../../src/ui/useReportDocuments.ts","../../src/ui/Overlays.tsx","../../src/ui/Refresh.tsx","../../src/ui/useComlink.tsx","../../src/optimistic/state/createSharedListener.ts","../../src/ui/useDatasetMutator.ts","../../src/ui/VisualEditing.tsx"],"sourcesContent":["import {useEffect, type FunctionComponent} from 'react'\nimport type {HistoryAdapter, VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const History: FunctionComponent<{\n  comlink: VisualEditingNode\n  history?: HistoryAdapter\n}> = (props) => {\n  const {comlink, history} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/navigate', (data) => {\n      history?.update(data)\n    })\n  }, [comlink, history])\n\n  useEffect(() => {\n    if (history) {\n      return history.subscribe((update) => {\n        update.title = update.title || document.title\n        comlink?.post('visual-editing/navigate', update)\n      })\n    }\n    return\n  }, [comlink, history])\n\n  return null\n}\n","import {useEffect, type FunctionComponent} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const Meta: FunctionComponent<{\n  comlink: VisualEditingNode\n}> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    const sendMeta = () => {\n      comlink.post('visual-editing/meta', {title: document.title})\n    }\n\n    const observer = new MutationObserver(([mutation]) => {\n      if (mutation.target.nodeName === 'TITLE') {\n        sendMeta()\n      }\n    })\n\n    observer.observe(document.head, {\n      subtree: true,\n      characterData: true,\n      childList: true,\n    })\n\n    sendMeta()\n\n    return () => observer.disconnect()\n  }, [comlink])\n\n  return null\n}\n","import {at, insert, remove} from '@sanity/mutate'\nimport {get as getFromPath} from '@sanity/util/paths'\nimport {useCallback, useEffect} from 'react'\nimport {useDocuments} from '../react/useDocuments'\nimport type {DragEndEvent, DragInsertPosition} from '../types'\nimport {getArrayItemKeyAndParentPath} from './mutations'\n\n// Finds the node that the drag end event was relative to, and the relative\n// position the new element should be inserted in. If the reference node was\n// \"top\" or \"left\", we insert \"after\". If it was \"bottom\" or \"right\", we insert\n// \"before\".\nfunction getReferenceNodeAndInsertPosition(position: DragInsertPosition) {\n  if (position) {\n    const {top, right, bottom, left} = position\n    if (left || top) {\n      return {node: (left ?? top)!.sanity, position: 'after' as const}\n    } else if (right || bottom) {\n      return {node: (right ?? bottom)!.sanity, position: 'before' as const}\n    }\n  }\n  return undefined\n}\n\nexport function useDragEndEvents(): {\n  dispatchDragEndEvent: (event: DragEndEvent) => void\n} {\n  const {getDocument} = useDocuments()\n\n  useEffect(() => {\n    const handler = (e: CustomEvent<DragEndEvent>) => {\n      const {insertPosition, target, preventInsertDefault} = e.detail\n\n      if (preventInsertDefault) return\n\n      const reference = getReferenceNodeAndInsertPosition(insertPosition)\n      if (reference) {\n        const doc = getDocument(target.id)\n        // We must have access to the document actor in order to perform the\n        // necessary mutations. If this is undefined, something went wrong when\n        // resolving the currently in use documents\n        const {node, position} = reference\n        // Get the key of the element that was dragged\n        const {key: targetKey, hasExplicitKey} = getArrayItemKeyAndParentPath(target)\n        // Get the key of the reference element, and path to the parent array\n        const {path: arrayPath, key: referenceItemKey} = getArrayItemKeyAndParentPath(node)\n        // Don't patch if the keys match, as this means the item was only\n        // dragged to its existing position, i.e. not moved\n        if (arrayPath && referenceItemKey && referenceItemKey !== targetKey) {\n          doc.patch(async ({getSnapshot}) => {\n            const snapshot = await getSnapshot()\n            // Get the current value of the element we dragged, as we will need\n            // to clone this into the new position\n            const elementValue = getFromPath(snapshot, target.path)\n\n            if (hasExplicitKey) {\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove({_key: targetKey})),\n                // Insert the cloned dragged item into its new position\n                at(arrayPath, insert(elementValue, position, {_key: referenceItemKey})),\n              ]\n            } else {\n              // handle reordering for primitives\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove(~~targetKey)),\n                // Insert the cloned dragged item into its new position\n                at(\n                  arrayPath,\n                  insert(\n                    elementValue,\n                    position,\n                    // if target key is < reference, each item in the array's index will be one less due to the previous removal\n                    referenceItemKey > targetKey ? ~~referenceItemKey - 1 : ~~referenceItemKey,\n                  ),\n                ),\n              ]\n            }\n          })\n        }\n      }\n    }\n    window.addEventListener('sanity/dragEnd', handler as EventListener)\n    return () => {\n      window.removeEventListener('sanity/dragEnd', handler as EventListener)\n    }\n  }, [getDocument])\n\n  const dispatchDragEndEvent = useCallback((event: DragEndEvent) => {\n    const customEvent = new CustomEvent<DragEndEvent>('sanity/dragEnd', {\n      detail: event,\n      cancelable: true,\n    })\n    window.dispatchEvent(customEvent)\n  }, [])\n\n  return {dispatchDragEndEvent}\n}\n","import type {\n  DocumentSchema,\n  SanityNode,\n  SanityStegaNode,\n  TypeSchema,\n} from '@sanity/presentation-comlink'\nimport {createContext} from 'react'\nimport type {OverlayElementField, OverlayElementParent} from '../../types'\n\nexport interface SchemaContextValue {\n  getField: (node: SanityNode | SanityStegaNode) => {\n    field: OverlayElementField\n    parent: OverlayElementParent\n  }\n  getType: <T extends 'document' | 'type' = 'document'>(\n    node: SanityNode | SanityStegaNode | string,\n    type?: T,\n  ) => T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined\n}\n\nexport const SchemaContext = createContext<SchemaContextValue | null>(null)\n","import {useContext} from 'react'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nexport function useSchema(): SchemaContextValue {\n  const context = useContext(SchemaContext)\n\n  if (!context) {\n    throw new Error('Schema context is missing')\n  }\n\n  return context\n}\n","import {\n  ArrowDownIcon,\n  ArrowUpIcon,\n  CopyIcon,\n  InsertAboveIcon,\n  InsertBelowIcon,\n  PublishIcon,\n  RemoveIcon,\n  SortIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\nimport type {\n  SanityNode,\n  SchemaArrayItem,\n  SchemaNode,\n  SchemaUnionNode,\n  SchemaUnionOption,\n} from '@sanity/presentation-comlink'\nimport type {SchemaType} from '@sanity/types'\nimport {MenuGroup} from '@sanity/ui/_visual-editing'\nimport {type FunctionComponent} from 'react'\nimport type {OptimisticDocument} from '../../optimistic'\nimport {InsertMenu} from '../../overlay-components/components/InsertMenu'\nimport type {ContextMenuNode, OverlayElementField, OverlayElementParent} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {\n  getArrayDuplicatePatches,\n  getArrayInsertPatches,\n  getArrayMovePatches,\n  getArrayRemovePatches,\n} from '../../util/mutations'\n\nexport function getArrayRemoveAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayRemovePatches(node, (await getSnapshot())!))\n}\n\nfunction getArrayInsertAction(\n  node: SanityNode,\n  doc: OptimisticDocument,\n  insertType: string,\n  position: 'before' | 'after',\n): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () => doc.patch(() => getArrayInsertPatches(node, insertType, position))\n}\n\nfunction getDuplicateAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayDuplicatePatches(node, (await getSnapshot())!))\n}\n\nexport function getContextMenuItems(context: {\n  doc: OptimisticDocument\n  field: OverlayElementField\n  node: SanityNode\n  parent: OverlayElementParent\n}): Promise<ContextMenuNode[]> {\n  const {node, field, parent, doc} = context\n  if (field?.type === 'arrayItem') {\n    return getContextMenuArrayItems({node, field, doc})\n  }\n  if (parent?.type === 'union') {\n    return getContextMenuUnionItems({node, parent, doc})\n  }\n\n  return Promise.resolve([])\n}\n\nfunction getDuplicateItem(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Duplicate',\n      icon: CopyIcon,\n      action: getDuplicateAction(node, doc),\n      telemetryEvent: 'Visual Editing Context Menu Item Duplicated' as const,\n    },\n  ]\n}\n\nfunction getRemoveItems(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Remove',\n      icon: RemoveIcon,\n      action: getArrayRemoveAction(node, doc),\n      telemetryEvent: 'Visual Editing Context Menu Item Removed' as const,\n    },\n  ]\n}\n\nasync function getMoveItems(\n  context: {\n    doc: OptimisticDocument\n    node: SanityNode\n  },\n  withDivider = true,\n) {\n  const {node, doc} = context\n  if (!doc) return []\n\n  const items: ContextMenuNode[] = []\n  const groupItems: ContextMenuNode[] = []\n\n  const [moveUpPatches, moveDownPatches, moveFirstPatches, moveLastPatches] = await Promise.all([\n    getArrayMovePatches(node, doc, 'previous'),\n    getArrayMovePatches(node, doc, 'next'),\n    getArrayMovePatches(node, doc, 'first'),\n    getArrayMovePatches(node, doc, 'last'),\n  ])\n\n  if (moveFirstPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To top',\n      icon: PublishIcon,\n      action: () => doc.patch(moveFirstPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveUpPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Up',\n      icon: ArrowUpIcon,\n      action: () => doc.patch(moveUpPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveDownPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Down',\n      icon: ArrowDownIcon,\n      action: () => doc.patch(moveDownPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveLastPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To bottom',\n      icon: UnpublishIcon,\n      action: () => doc.patch(moveLastPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n\n  if (groupItems.length) {\n    items.push({\n      type: 'group',\n      label: 'Move',\n      icon: SortIcon,\n      items: groupItems,\n    })\n    if (withDivider) {\n      items.push({type: 'divider'})\n    }\n  }\n\n  return items\n}\n\nasync function getContextMenuArrayItems(context: {\n  doc: OptimisticDocument\n  field: SchemaArrayItem\n  node: SanityNode\n}): Promise<ContextMenuNode[]> {\n  const {node, field, doc} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  items.push({\n    type: 'action',\n    label: 'Insert before',\n    icon: InsertAboveIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'before'),\n    telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n  })\n  items.push({\n    type: 'action',\n    label: 'Insert after',\n    icon: InsertBelowIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'after'),\n    telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n  })\n\n  return items\n}\n\nconst InsertMenuWrapper: FunctionComponent<{\n  label: string\n  onSelect: (schemaType: SchemaType) => void\n  parent: SchemaUnionNode<SchemaNode>\n  width: number | undefined\n  boundaryElement: HTMLDivElement | null\n}> = (props) => {\n  const {label, parent, width, onSelect, boundaryElement} = props\n\n  return (\n    <MenuGroup\n      fontSize={1}\n      icon={InsertBelowIcon}\n      padding={2}\n      popover={{\n        arrow: false,\n        constrainSize: true,\n        floatingBoundary: boundaryElement,\n        padding: 0,\n        placement: 'right-start',\n        fallbackPlacements: [\n          'left-start',\n          'right',\n          'left',\n          'right-end',\n          'left-end',\n          'bottom',\n          'top',\n        ],\n        preventOverflow: true,\n        width,\n        __unstable_margins: [4, 4, 4, 4],\n      }}\n      space={2}\n      text={label}\n    >\n      <InsertMenu node={parent} onSelect={onSelect} />\n    </MenuGroup>\n  )\n}\n\nasync function getContextMenuUnionItems(context: {\n  doc: OptimisticDocument\n  node: SanityNode\n  parent: SchemaUnionNode<SchemaNode>\n}): Promise<ContextMenuNode[]> {\n  const {doc, node, parent} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  if (parent.options?.insertMenu) {\n    const insertMenuOptions = parent.options.insertMenu || {}\n    const width = insertMenuOptions.views?.some((view) => view.name === 'grid') ? 0 : undefined\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement, sendTelemetry}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'before')\n          action()\n\n          sendTelemetry('Visual Editing Context Menu Item Inserted', null)\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert before\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement, sendTelemetry}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'after')\n          action()\n\n          sendTelemetry('Visual Editing Context Menu Item Inserted', null)\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert after\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n  } else {\n    items.push({\n      type: 'group',\n      label: 'Insert before',\n      icon: InsertAboveIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          icon: getNodeIcon(t),\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          action: getArrayInsertAction(node, doc, t.name, 'before'),\n          telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n        }\n      }),\n    })\n    items.push({\n      type: 'group',\n      label: 'Insert after',\n      icon: InsertBelowIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          icon: getNodeIcon(t),\n          action: getArrayInsertAction(node, doc, t.name, 'after'),\n          telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n        }\n      }),\n    })\n  }\n\n  return items\n}\n","import {\n  Box,\n  Flex,\n  Menu,\n  MenuDivider,\n  MenuGroup,\n  MenuItem,\n  Popover,\n  Spinner,\n  Stack,\n  Text,\n  type PopoverMargins,\n} from '@sanity/ui/_visual-editing'\nimport {useCallback, useEffect, useMemo, useState, type FunctionComponent} from 'react'\nimport {useDocuments} from '../../react/useDocuments'\nimport type {ContextMenuNode, ContextMenuProps} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {PopoverPortal} from '../PopoverPortal'\nimport {useSchema} from '../schema/useSchema'\nimport {useTelemetry} from '../telemetry/useTelemetry'\nimport {getContextMenuItems} from './contextMenuItems'\n\nconst POPOVER_MARGINS: PopoverMargins = [-4, 4, -4, 4]\n\nfunction ContextMenuItem(props: {\n  node: ContextMenuNode\n  onDismiss?: () => void\n  boundaryElement: HTMLDivElement | null\n}) {\n  const {node, onDismiss, boundaryElement} = props\n  const sendTelemetry = useTelemetry()\n\n  const onClick = useCallback(() => {\n    if (node.type === 'action') {\n      node.action?.()\n      onDismiss?.()\n\n      if (node.telemetryEvent) {\n        sendTelemetry(node.telemetryEvent, null)\n      }\n    }\n  }, [node, onDismiss, sendTelemetry])\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  if (node.type === 'action') {\n    return (\n      <MenuItem\n        fontSize={1}\n        hotkeys={node.hotkeys}\n        icon={node.icon}\n        padding={2}\n        space={2}\n        text={node.label}\n        disabled={!node.action}\n        onClick={onClick}\n      />\n    )\n  }\n\n  if (node.type === 'group') {\n    return (\n      <MenuGroup\n        fontSize={1}\n        icon={node.icon}\n        padding={2}\n        // @todo when this PR lands https://github.com/sanity-io/ui/pull/1454\n        // menu={{\n        //   padding: 0,\n        // }}\n        popover={{\n          arrow: false,\n          constrainSize: true,\n          placement: 'right-start',\n          fallbackPlacements: [\n            'left-start',\n            'right',\n            'left',\n            'right-end',\n            'left-end',\n            'bottom',\n            'top',\n          ],\n          preventOverflow: true,\n          __unstable_margins: POPOVER_MARGINS,\n        }}\n        space={2}\n        text={node.label}\n      >\n        {node.items.map((item, itemIndex) => (\n          <ContextMenuItem\n            key={itemIndex}\n            node={item}\n            onDismiss={onDismiss}\n            boundaryElement={boundaryElement}\n          />\n        ))}\n      </MenuGroup>\n    )\n  }\n\n  if (node.type === 'custom') {\n    const {component: Component} = node\n    return <Component boundaryElement={boundaryElement} sendTelemetry={sendTelemetry} />\n  }\n\n  return null\n}\n\nexport const ContextMenu: FunctionComponent<ContextMenuProps> = (props) => {\n  const {\n    node,\n    onDismiss,\n    position: {x, y},\n  } = props\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const {getField} = useSchema()\n  const {getDocument} = useDocuments()\n\n  const {field, parent} = getField(node)\n\n  const title = useMemo(() => {\n    return field?.title || field?.name || 'Unknown type'\n  }, [field])\n\n  const [items, setItems] = useState<ContextMenuNode[] | undefined>(undefined)\n\n  useEffect(() => {\n    const fetchContextMenuItems = async () => {\n      const doc = getDocument(node.id)\n      if (!doc) return\n      const items = await getContextMenuItems({node, field, parent, doc})\n      setItems(items)\n    }\n    fetchContextMenuItems()\n  }, [field, node, parent, getDocument])\n\n  const contextMenuReferenceElement = useMemo(() => {\n    return {\n      getBoundingClientRect: () => ({\n        bottom: y,\n        left: x,\n        right: x,\n        top: y,\n        width: 0,\n        height: 0,\n      }),\n    } as HTMLElement\n  }, [x, y])\n\n  const icon = useMemo(() => {\n    return getNodeIcon(field)\n  }, [field])\n\n  return (\n    <PopoverPortal setBoundaryElement={setBoundaryElement} onDismiss={onDismiss}>\n      <Popover\n        __unstable_margins={POPOVER_MARGINS}\n        arrow={false}\n        open\n        placement=\"right-start\"\n        referenceElement={contextMenuReferenceElement}\n        content={\n          <Menu style={{minWidth: 120, maxWidth: 160}}>\n            <Flex gap={2} padding={2}>\n              <Box flex=\"none\">{items ? <Text size={1}>{icon}</Text> : <Spinner size={1} />}</Box>\n\n              <Stack flex={1} space={2}>\n                <Text size={1} weight=\"semibold\">\n                  {items ? title : 'Loading...'}\n                </Text>\n              </Stack>\n            </Flex>\n\n            {items && (\n              <>\n                <MenuDivider />\n                {items.map((item, i) => (\n                  <ContextMenuItem\n                    key={i}\n                    node={item}\n                    onDismiss={onDismiss}\n                    boundaryElement={boundaryElement}\n                  />\n                ))}\n              </>\n            )}\n          </Menu>\n        }\n      >\n        <div\n          key={`${x}-${y}`}\n          style={{\n            position: 'absolute',\n            left: x,\n            top: y,\n          }}\n        />\n      </Popover>\n    </PopoverPortal>\n  )\n}\n","export function getLinkHref(href: string, referer: string): string {\n  try {\n    const parsed = new URL(href, typeof location === 'undefined' ? undefined : location.origin)\n    if (parsed.hash) {\n      const hash = new URL(getLinkHref(parsed.hash.slice(1), referer))\n      return `${parsed.origin}${parsed.pathname}${parsed.search}#${hash.pathname}${hash.search}`\n    }\n    parsed.searchParams.set('preview', referer)\n    return parsed.toString()\n  } catch {\n    return href\n  }\n}\n","import type {PreviewSnapshot} from '@sanity/presentation-comlink'\nimport {createContext} from 'react'\n\nexport type PreviewSnapshotsContextValue = PreviewSnapshot[]\n\nexport const PreviewSnapshotsContext = createContext<PreviewSnapshotsContextValue | null>(null)\n","import {useContext} from 'react'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport function usePreviewSnapshots(): PreviewSnapshotsContextValue {\n  const context = useContext(PreviewSnapshotsContext)\n\n  if (!context) {\n    throw new Error('Preview Snapshots context is missing')\n  }\n\n  return context\n}\n","import {createEditUrl, studioPath} from '@sanity/client/csm'\nimport {DocumentIcon, DragHandleIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui/_visual-editing'\nimport {pathToUrlString} from '@sanity/visual-editing-csm'\nimport {\n  isValidElement,\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n  type CSSProperties,\n  type FunctionComponent,\n  type ReactElement,\n} from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {styled} from 'styled-components'\nimport {PointerEvents} from '../overlay-components/components/PointerEvents'\nimport type {\n  ElementFocusedState,\n  ElementNode,\n  OverlayComponent,\n  OverlayComponentResolver,\n  OverlayComponentResolverContext,\n  OverlayRect,\n  SanityNode,\n  SanityStegaNode,\n} from '../types'\nimport {getLinkHref} from '../util/getLinkHref'\nimport {usePreviewSnapshots} from './preview/usePreviewSnapshots'\nimport {useSchema} from './schema/useSchema'\n\nconst isReactElementOverlayComponent = (\n  component:\n    | OverlayComponent\n    | {component: OverlayComponent; props?: Record<string, unknown>}\n    | Array<OverlayComponent | {component: OverlayComponent; props?: Record<string, unknown>}>\n    | ReactElement,\n): component is React.JSX.Element => {\n  return isValidElement(component)\n}\n\nexport interface ElementOverlayProps {\n  componentResolver?: OverlayComponentResolver\n  draggable: boolean\n  element: ElementNode\n  focused: ElementFocusedState\n  hovered: boolean\n  isDragging: boolean\n  node: SanityNode | SanityStegaNode\n  rect: OverlayRect\n  showActions: boolean\n  wasMaybeCollapsed: boolean\n  enableScrollIntoView: boolean\n}\n\nconst Root = styled(Card)`\n  background-color: var(--overlay-bg);\n  border-radius: 3px;\n  pointer-events: none;\n  position: absolute;\n  will-change: transform;\n  box-shadow: var(--overlay-box-shadow);\n  transition: none;\n\n  --overlay-bg: transparent;\n  --overlay-box-shadow: inset 0 0 0 1px transparent;\n\n  [data-overlays] & {\n    --overlay-bg: color-mix(in srgb, transparent 95%, var(--card-focus-ring-color));\n    --overlay-box-shadow: inset 0 0 0 2px\n      color-mix(in srgb, transparent 50%, var(--card-focus-ring-color));\n  }\n\n  [data-fading-out] & {\n    transition:\n      box-shadow 1550ms,\n      background-color 1550ms;\n\n    --overlay-bg: rgba(0, 0, 255, 0);\n    --overlay-box-shadow: inset 0 0 0 1px transparent;\n  }\n\n  &[data-focused] {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  }\n\n  &[data-hovered]:not([data-focused]) {\n    transition: none;\n    --overlay-box-shadow: inset 0 0 0 2px var(--card-focus-ring-color);\n  }\n\n  /* [data-unmounted] & {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  } */\n\n  :link {\n    text-decoration: none;\n  }\n`\n\nconst Actions = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`\n\nconst Tab = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`\n\nconst ActionOpen = styled(Card)`\n  cursor: pointer;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n\n  & [data-ui='Text'] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nconst Labels = styled(Flex)`\n  display: flex;\n  align-items: center;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n  & [data-ui='Text'],\n  & [data-sanity-icon] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nfunction createIntentLink(node: SanityNode) {\n  const {id, type, path, baseUrl, tool, workspace} = node\n\n  return createEditUrl({\n    baseUrl,\n    workspace,\n    tool,\n    type: type!,\n    id,\n    path: pathToUrlString(studioPath.fromString(path)),\n  })\n}\n\nconst ElementOverlayInner: FunctionComponent<ElementOverlayProps> = (props) => {\n  const {element, focused, componentResolver, node, showActions, draggable} = props\n\n  const {getField, getType} = useSchema()\n  const schemaType = getType(node)\n  const {field, parent} = getField(node)\n\n  const href = 'path' in node ? createIntentLink(node) : node.href\n\n  const previewSnapshots = usePreviewSnapshots()\n\n  const title = useMemo(() => {\n    if (!('path' in node)) return undefined\n    return previewSnapshots.find((snapshot) => snapshot._id === node.id)?.title\n  }, [node, previewSnapshots])\n\n  const componentContext = useMemo<OverlayComponentResolverContext | undefined>(() => {\n    if (!('path' in node)) return undefined\n    if (!field || !schemaType) return undefined\n    const type = field.value.type\n\n    return {\n      document: schemaType,\n      element,\n      field,\n      focused: !!focused,\n      node,\n      parent,\n      type,\n    }\n  }, [schemaType, element, field, focused, node, parent])\n\n  const customComponents = useCustomComponents(componentContext, componentResolver)\n\n  const icon = schemaType?.icon ? (\n    <div dangerouslySetInnerHTML={{__html: schemaType.icon}} />\n  ) : (\n    <DocumentIcon />\n  )\n\n  return (\n    <>\n      {showActions ? (\n        <Actions gap={1} paddingY={1} data-sanity-overlay-element>\n          <Link href={href} />\n        </Actions>\n      ) : null}\n      {title && (\n        <Tab gap={1} paddingY={1}>\n          <Labels gap={2} padding={2}>\n            {draggable && (\n              <Box marginRight={1}>\n                <Text className=\"drag-handle\" size={0}>\n                  <DragHandleIcon />\n                </Text>\n              </Box>\n            )}\n            <Text size={0}>{icon}</Text>\n            <Text size={1} weight=\"medium\">\n              {title}\n            </Text>\n          </Labels>\n        </Tab>\n      )}\n\n      {Array.isArray(customComponents)\n        ? customComponents.map(({component: Component, props}, i) => {\n            return (\n              <Component key={i} PointerEvents={PointerEvents} {...componentContext!} {...props} />\n            )\n          })\n        : customComponents}\n    </>\n  )\n}\n\nexport const ElementOverlay = memo(function ElementOverlay(props: ElementOverlayProps) {\n  const {draggable, focused, hovered, rect, wasMaybeCollapsed, enableScrollIntoView} = props\n\n  const ref = useRef<HTMLDivElement>(null)\n\n  const scrolledIntoViewRef = useRef(false)\n\n  const style = useMemo<CSSProperties>(\n    () => ({\n      width: `${rect.w}px`,\n      height: `${rect.h}px`,\n      transform: `translate(${rect.x}px, ${rect.y}px)`,\n    }),\n    [rect],\n  )\n\n  useEffect(() => {\n    if (\n      !scrolledIntoViewRef.current &&\n      !wasMaybeCollapsed &&\n      focused === true &&\n      ref.current &&\n      enableScrollIntoView\n    ) {\n      const target = ref.current\n      scrollIntoView(ref.current, {\n        // Workaround issue with scroll-into-view-if-needed struggling with iframes\n        behavior: (actions) => {\n          if (actions.length === 0) {\n            // An empty actions list equals scrolling isn't needed\n            return\n          }\n          // Uses native scrollIntoView to ensure iframes behave correctly\n          target.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'nearest',\n          })\n        },\n        scrollMode: 'if-needed',\n        block: 'center',\n        inline: 'nearest',\n      })\n    }\n\n    scrolledIntoViewRef.current = focused === true\n  }, [focused, wasMaybeCollapsed, enableScrollIntoView])\n\n  const [isNearTop, setIsNearTop] = useState(false)\n  useEffect(() => {\n    if (!ref.current || !hovered) return undefined\n\n    const io = new IntersectionObserver(\n      ([intersection]) => {\n        setIsNearTop(intersection.boundingClientRect.top < 0)\n      },\n      {threshold: 1},\n    )\n    io.observe(ref.current)\n    return () => io.disconnect()\n  }, [hovered, isNearTop])\n\n  return (\n    <Root\n      data-focused={focused ? '' : undefined}\n      data-hovered={hovered ? '' : undefined}\n      data-flipped={isNearTop ? '' : undefined}\n      data-draggable={draggable ? '' : undefined}\n      ref={ref}\n      style={style}\n    >\n      {hovered && <ElementOverlayInner {...props} />}\n    </Root>\n  )\n})\n\nfunction useCustomComponents(\n  componentContext: OverlayComponentResolverContext | undefined,\n  componentResolver: OverlayComponentResolver | undefined,\n) {\n  return useMemo(() => {\n    if (!componentContext) return undefined\n    const resolved = componentResolver?.(componentContext)\n    if (!resolved) return undefined\n\n    if (isReactElementOverlayComponent(resolved)) {\n      return resolved\n    }\n\n    return (Array.isArray(resolved) ? resolved : [resolved]).map((component) => {\n      if (typeof component === 'object' && 'component' in component) {\n        return component\n      }\n      return {component, props: {}}\n    })\n  }, [componentResolver, componentContext])\n}\n\nconst Link = memo(function Link(props: {href: string}) {\n  const referer = useSyncExternalStore(\n    useCallback((onStoreChange) => {\n      const handlePopState = () => onStoreChange()\n      window.addEventListener('popstate', handlePopState)\n      return () => window.removeEventListener('popstate', handlePopState)\n    }, []),\n    () => window.location.href,\n  )\n  const href = useMemo(() => getLinkHref(props.href, referer), [props.href, referer])\n\n  return (\n    <Box as=\"a\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      <ActionOpen padding={2}>\n        <Text size={1} weight=\"medium\">\n          Open in Studio\n        </Text>\n      </ActionOpen>\n    </Box>\n  )\n})\n","import type {FunctionComponent} from 'react'\nimport type {OverlayRect} from '../types'\n\nexport const OverlayDragGroupRect: FunctionComponent<{\n  dragGroupRect: OverlayRect\n}> = ({dragGroupRect}) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: `${dragGroupRect.y}px`,\n        left: `${dragGroupRect.x}px`,\n        width: `${dragGroupRect.w - 1}px`,\n        height: `${dragGroupRect.h - 1}px`,\n        border: '1px dashed #f0709b',\n        pointerEvents: 'none',\n      }}\n    ></div>\n  )\n}\n","import type {FunctionComponent} from 'react'\nimport type {DragInsertPosition} from '../types'\n\nconst markerThickness = 6\n\nfunction lerp(v0: number, v1: number, t: number) {\n  return v0 * (1 - t) + v1 * t\n}\n\nexport const OverlayDragInsertMarker: FunctionComponent<{\n  dragInsertPosition: DragInsertPosition\n}> = ({dragInsertPosition}) => {\n  if (dragInsertPosition === null) return\n\n  const flow = dragInsertPosition?.left || dragInsertPosition?.right ? 'horizontal' : 'vertical'\n\n  let x = 0\n  let y = 0\n  let width = 0\n  let height = 0\n  const offsetMultiplier = 0.0125\n\n  if (flow === 'horizontal') {\n    const {left, right} = dragInsertPosition\n\n    width = markerThickness\n\n    if (right && left) {\n      const startX = left.rect.x + left.rect.w\n      const endX = right.rect.x\n      const targetHeight = Math.min(right.rect.h, left.rect.h)\n      const offset = targetHeight * offsetMultiplier\n\n      x = lerp(startX, endX, 0.5) - markerThickness / 2\n      y = left.rect.y + offset\n\n      height = Math.min(right.rect.h, left.rect.h) - offset * 2\n    } else if (right && !left) {\n      const targetHeight = right.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = right.rect.x - markerThickness / 2\n      y = right.rect.y + offset\n      height = right.rect.h - offset * 2\n    } else if (left && !right) {\n      const targetHeight = left.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = left.rect.x + left.rect.w - markerThickness / 2\n      y = left.rect.y + offset\n      height = left.rect.h - offset * 2\n    }\n  } else {\n    const {bottom, top} = dragInsertPosition\n\n    if (bottom && top) {\n      const startX = Math.min(top.rect.x, bottom.rect.x)\n      const startY = top.rect.y + top.rect.h\n      const endY = bottom.rect.y\n      const targetWidth = Math.min(bottom.rect.w, top.rect.w)\n      const offset = targetWidth * offsetMultiplier\n\n      height = markerThickness\n\n      x = startX + offset\n      y = lerp(startY, endY, 0.5) - markerThickness / 2\n      width = Math.max(bottom.rect.w, top.rect.w) - offset * 2\n    } else if (bottom && !top) {\n      const targetWidth = bottom.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = bottom.rect.x + offset\n      y = bottom.rect.y - markerThickness / 2\n      width = bottom.rect.w - offset * 2\n      height = markerThickness\n    } else if (top && !bottom) {\n      const targetWidth = top.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = top.rect.x + offset\n      y = top.rect.y + top.rect.h - markerThickness / 2\n      width = top.rect.w - offset * 2\n      height = markerThickness\n    }\n  }\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        width: `${width}px`,\n        height: `${height}px`,\n        transform: `translate(${x}px, ${y}px)`,\n        background: '#556bfc',\n        border: '2px solid white',\n        borderRadius: '999px',\n        zIndex: '999999',\n      }}\n    ></div>\n  )\n}\n","import {Card, usePrefersDark, useTheme_v2} from '@sanity/ui/_visual-editing'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\nimport type {DragSkeleton} from '../types'\n\nconst Root = styled.div<{\n  $width: number\n  $height: number\n  $offsetX: number\n  $offsetY: number\n  $scaleFactor: number\n}>`\n  --drag-preview-opacity: 0.98;\n  --drag-preview-skeleton-stroke: #ffffff;\n\n  @media (prefers-color-scheme: dark) {\n    --drag-preview-skeleton-stroke: #383d51;\n  }\n\n  position: fixed;\n  display: grid;\n  transform: ${({$scaleFactor, $width, $height}) =>\n    `translate(calc(var(--drag-preview-x) - ${$width / 2}px), calc(var(--drag-preview-y) - ${$height / 2}px)) scale(${$scaleFactor})`};\n  width: ${({$width}) => `${$width}px`};\n  height: ${({$height}) => `${$height}px`};\n  z-index: 9999999;\n  opacity: var(--drag-preview-opacity);\n  cursor: move;\n\n  .drag-preview-content-wrapper {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    container-type: inline-size;\n  }\n\n  [data-ui='card'] {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  .drag-preview-skeleton {\n    position: absolute;\n    inset: 0;\n\n    rect {\n      stroke: var(--drag-preview-skeleton-stroke);\n    }\n  }\n\n  .drag-preview-handle {\n    position: absolute;\n    top: 4cqmin;\n    left: 4cqmin;\n    width: 6cqmin;\n    fill: var(--drag-preview-handle-fill);\n  }\n`\n\nfunction clamp(number: number, min: number, max: number): number {\n  return number < min ? min : number > max ? max : number\n}\n\nfunction map(number: number, inMin: number, inMax: number, outMin: number, outMax: number): number {\n  const mapped: number = ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n  return clamp(mapped, outMin, outMax)\n}\n\nexport const OverlayDragPreview: FunctionComponent<{skeleton: DragSkeleton}> = ({skeleton}) => {\n  const maxSkeletonWidth = Math.min(skeleton.maxWidth, window.innerWidth / 2)\n  const scaleFactor = skeleton.w > maxSkeletonWidth ? maxSkeletonWidth / skeleton.w : 1\n\n  const offsetX = skeleton.offsetX * scaleFactor\n  const offsetY = skeleton.offsetY * scaleFactor\n\n  const prefersDark = usePrefersDark()\n  const theme = useTheme_v2()\n\n  const radius = theme.radius[~~map(skeleton.w, 0, 1920, 1, theme.radius.length - 2)]\n\n  const imageRects = skeleton.childRects.filter((r) => r.tagName === 'IMG')\n  const textRects = skeleton.childRects.filter((r) => r.tagName !== 'IMG')\n\n  return (\n    <Root\n      $width={skeleton.w}\n      $height={skeleton.h}\n      $offsetX={offsetX}\n      $offsetY={offsetY}\n      $scaleFactor={scaleFactor}\n    >\n      <Card\n        radius={radius}\n        shadow={4}\n        overflow=\"hidden\"\n        tone=\"transparent\"\n        scheme={prefersDark ? 'dark' : 'light'}\n      >\n        <div className=\"drag-preview-content-wrapper\">\n          <svg className=\"drag-preview-skeleton\" viewBox={`0 0 ${skeleton.w} ${skeleton.h}`}>\n            {/* render image rects first to account for background images overlapping text */}\n            {[...imageRects, ...textRects].map((r, i) => (\n              <rect\n                key={i}\n                x={r.x}\n                y={r.y}\n                width={r.w}\n                height={r.h}\n                fill={theme.color.skeleton.from}\n              ></rect>\n            ))}\n          </svg>\n        </div>\n      </Card>\n    </Root>\n  )\n}\n","import {ExpandIcon} from '@sanity/icons'\nimport {Card, Flex, Hotkeys, Text} from '@sanity/ui/_visual-editing'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\n\nconst Root = styled(Card)`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n`\n\nexport const OverlayMinimapPrompt: FunctionComponent = () => {\n  return (\n    <Root padding={2} shadow={2} radius={2} style={{zIndex: '999999'}}>\n      <Flex align=\"center\" gap={2}>\n        <Hotkeys keys={['Shift']} />\n        <Text size={1}>Zoom Out</Text>\n        <ExpandIcon />\n      </Flex>\n    </Root>\n  )\n}\n","import type {VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport type {ElementState, OverlayMsg} from '../types'\n\n/**\n * Reducer for managing element state from received channel messages\n * @internal\n */\nexport const elementsReducer = (\n  elements: ElementState[],\n  message: OverlayMsg | VisualEditingControllerMsg,\n): ElementState[] => {\n  const {type} = message\n  switch (type) {\n    case 'element/register': {\n      const elementExists = !!elements.find((e) => e.id === message.id)\n      if (elementExists) return elements\n\n      return [\n        ...elements,\n        {\n          id: message.id,\n          activated: false,\n          element: message.element,\n          focused: false,\n          hovered: false,\n          rect: message.rect,\n          sanity: message.sanity,\n          dragDisabled: message.dragDisabled,\n        },\n      ]\n    }\n    case 'element/activate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: true}\n        }\n        return e\n      })\n    case 'element/update': {\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, sanity: message.sanity, rect: message.rect}\n        }\n        return e\n      })\n    }\n    case 'element/unregister':\n      return elements.filter((e) => e.id !== message.id)\n    case 'element/deactivate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: false, hovered: false}\n        }\n        return e\n      })\n    case 'element/mouseenter':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, rect: message.rect, hovered: true}\n        }\n        return {...e, hovered: false}\n      })\n    case 'element/mouseleave':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, hovered: false}\n        }\n        return element\n      })\n    case 'element/updateRect':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, rect: message.rect}\n        }\n        return element\n      })\n    case 'element/click':\n      return elements.map((e) => {\n        return {...e, focused: e.id === message.id && 'clicked'}\n      })\n    case 'overlay/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/focus': {\n      // Before setting the focus state of each element, check to see if any\n      // element has gained focus from an `element/click` message. Presentation\n      // tool \"reflects\" these back as a `presentation/focus` message.\n      const clickedElement = elements.find((e) => e.focused === 'clicked')\n      return elements.map((e) => {\n        // We want to focus any element which matches the received id and path\n        const focused =\n          'path' in e.sanity &&\n          e.sanity.id === message.data.id &&\n          e.sanity.path === message.data.path\n\n        // If we have a 'clicked' element, and that element matches, it is a\n        // reflection, so we maintain the focus state\n        if (clickedElement && e === clickedElement && focused) {\n          return e\n        }\n\n        return {\n          ...e,\n          // Mark as a dupe if another matching item has been clicked to prevent\n          // scrolling, otherwise just set focus as a boolean\n          focused: focused && clickedElement ? 'duplicate' : focused,\n        }\n      })\n    }\n    default:\n      return elements\n  }\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport type {SanityNode, VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport type {\n  DragInsertPosition,\n  DragSkeleton,\n  ElementState,\n  OverlayMsg,\n  OverlayRect,\n} from '../types'\nimport {elementsReducer} from './elementsReducer'\n\nexport interface OverlayState {\n  contextMenu: {\n    node: SanityNode\n    position: {\n      x: number\n      y: number\n    }\n  } | null\n  focusPath: string\n  elements: ElementState[]\n  wasMaybeCollapsed: boolean\n  perspective: ClientPerspective\n  isDragging: boolean\n  dragInsertPosition: DragInsertPosition\n  dragSkeleton: DragSkeleton | null\n  dragShowMinimap: boolean\n  dragShowMinimapPrompt: boolean\n  dragMinimapTransition: boolean\n  dragGroupRect: OverlayRect | null\n}\n\nexport function overlayStateReducer(\n  state: OverlayState,\n  message: OverlayMsg | VisualEditingControllerMsg,\n): OverlayState {\n  const {type} = message\n  let {\n    contextMenu,\n    focusPath,\n    perspective,\n    isDragging,\n    dragInsertPosition,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragSkeleton,\n    dragMinimapTransition,\n    dragGroupRect,\n  } = state\n  let wasMaybeCollapsed = false\n\n  if (type === 'presentation/focus') {\n    const prevFocusPath = state.focusPath\n\n    focusPath = message.data.path\n\n    if (prevFocusPath !== focusPath) {\n      wasMaybeCollapsed = prevFocusPath.slice(focusPath.length).startsWith('[')\n    }\n  }\n\n  if (type === 'presentation/perspective') {\n    perspective = message.data.perspective\n  }\n\n  if (type === 'element/contextmenu') {\n    if ('sanity' in message) {\n      contextMenu = {node: message.sanity, position: message.position}\n    } else {\n      contextMenu = null\n    }\n  }\n\n  if (\n    type === 'element/click' ||\n    type === 'element/mouseleave' ||\n    type === 'overlay/blur' ||\n    type === 'presentation/blur' ||\n    type === 'presentation/focus'\n  ) {\n    contextMenu = null\n  }\n\n  if (type === 'overlay/dragUpdateInsertPosition') {\n    dragInsertPosition = message.insertPosition\n  }\n\n  if (type === 'overlay/dragStart') {\n    isDragging = true\n  }\n\n  if (message.type === 'overlay/dragUpdateSkeleton') {\n    dragSkeleton = message.skeleton\n  }\n\n  if (type === 'overlay/dragEnd') {\n    isDragging = false\n  }\n\n  if (message.type === 'overlay/dragToggleMinimapPrompt') {\n    dragShowMinimapPrompt = message.display\n  }\n\n  if (type === 'overlay/dragStartMinimapTransition') {\n    dragMinimapTransition = true\n  }\n\n  if (type === 'overlay/dragEndMinimapTransition') {\n    dragMinimapTransition = false\n  }\n\n  if (type === 'overlay/dragUpdateGroupRect') {\n    dragGroupRect = message.groupRect\n  }\n\n  if (type === 'overlay/dragToggleMinimap') {\n    dragShowMinimap = message.display\n  }\n\n  return {\n    ...state,\n    contextMenu,\n    elements: elementsReducer(state.elements, message),\n    dragInsertPosition,\n    dragSkeleton,\n    dragGroupRect,\n    isDragging,\n    focusPath,\n    perspective,\n    wasMaybeCollapsed,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragMinimapTransition,\n  }\n}\n","import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport const PreviewSnapshotsProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const [previewSnapshots, setPreviewSnapshots] = useState<PreviewSnapshotsContextValue>([])\n\n  const fetchPreviewSnapshots = useCallback(\n    async (signal: AbortSignal) => {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/preview-snapshots', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setPreviewSnapshots(response.snapshots)\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    },\n    [comlink],\n  )\n  useEffect(() => {\n    if (!comlink) return\n\n    const previewSapshotsFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      fetchPreviewSnapshots(previewSapshotsFetch.signal)\n    }, 'connected')\n\n    return () => {\n      previewSapshotsFetch.abort()\n      unsub()\n    }\n  }, [comlink, fetchPreviewSnapshots])\n\n  useEffect(() => {\n    return comlink?.on('presentation/preview-snapshots', (data) => {\n      setPreviewSnapshots(data.snapshots)\n    })\n  }, [comlink])\n\n  const context = useMemo<PreviewSnapshotsContextValue>(() => previewSnapshots, [previewSnapshots])\n  return (\n    <PreviewSnapshotsContext.Provider value={context}>{children}</PreviewSnapshotsContext.Provider>\n  )\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n  UnresolvedPath,\n} from '@sanity/presentation-comlink'\nimport {\n  useCallback,\n  useDeferredValue,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {\n  ElementState,\n  OverlayElementField,\n  OverlayElementParent,\n  VisualEditingNode,\n} from '../../types'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nfunction isSanityNode(node: SanityNode | SanityStegaNode): node is SanityNode {\n  return 'path' in node\n}\n\nfunction isDocumentSchemaType(type: SchemaType): type is DocumentSchema {\n  return type.type === 'document'\n}\n\nfunction isTypeSchemaType(type: SchemaType): type is TypeSchema {\n  return type.type === 'type'\n}\n\nfunction popUnkeyedPathSegments(path: string): string {\n  return path\n    .split('.')\n    .toReversed()\n    .reduce((acc, part) => {\n      if (acc.length) return [part, ...acc]\n      if (part.includes('[_key==')) return [part]\n      return []\n    }, [] as string[])\n    .join('.')\n}\n\nfunction getPathsWithUnresolvedTypes(elements: ElementState[]): {id: string; path: string}[] {\n  return elements.reduce((acc, element) => {\n    const {sanity} = element\n    if (!('id' in sanity)) return acc\n    if (!sanity.path.includes('[_key==')) return acc\n    const path = popUnkeyedPathSegments(sanity.path)\n    if (!acc.find((item) => item.id === sanity.id && item.path === path)) {\n      acc.push({id: sanity.id, path})\n    }\n    return acc\n  }, [] as UnresolvedPath[])\n}\n\nexport const SchemaProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n    elements: ElementState[]\n  }>\n> = function (props) {\n  const {comlink, children, elements} = props\n\n  const [resolvedTypes, setResolvedTypes] = useState<ResolvedSchemaTypeMap>(new Map())\n\n  const [schema, setSchema] = useState<SchemaType[] | null>(null)\n\n  useEffect(() => {\n    if (!comlink) return\n\n    async function fetchSchema(signal: AbortSignal) {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/schema', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setSchema(response.schema)\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    }\n    const schemaFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      fetchSchema(schemaFetch.signal)\n    }, 'connected')\n\n    return () => {\n      schemaFetch.abort()\n      unsub()\n    }\n  }, [comlink])\n\n  const reportedPathsRef = useRef<UnresolvedPath[]>([])\n  const paths = getPathsWithUnresolvedTypes(useDeferredValue(elements))\n  const controllerRef = useRef<AbortController | null>(null)\n\n  useEffect(() => {\n    if (!paths.length || !comlink) return\n    // We report a list of paths that reference array items using a _key. We need\n    // to resolve the types of each of these items so we can map them to the\n    // correct schema types. One day CSM might include this data for us.\n    const reportPaths = async (paths: UnresolvedPath[], signal: AbortSignal) => {\n      const initialReportedPaths = reportedPathsRef.current\n      try {\n        reportedPathsRef.current = paths\n        const response = await comlink.fetch(\n          'visual-editing/schema-union-types',\n          {paths},\n          {signal, suppressWarnings: true},\n        )\n        if (signal.aborted) return\n        setResolvedTypes(response.types)\n        controllerRef.current = null\n      } catch {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n      if (signal.aborted) {\n        reportedPathsRef.current = initialReportedPaths\n      }\n    }\n\n    if (\n      paths.some(\n        (p) => !reportedPathsRef.current.find(({id, path}) => id === p.id && path === p.path),\n      )\n    ) {\n      // Abort any previous requests\n      controllerRef.current?.abort()\n      controllerRef.current = new AbortController()\n      reportPaths(paths, controllerRef.current.signal)\n    }\n  }, [comlink, paths])\n\n  const getType = useCallback(\n    <T extends 'document' | 'type' = 'document'>(\n      node: SanityNode | SanityStegaNode | string,\n      _type?: T,\n    ): T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined => {\n      const type = _type || 'document'\n      if (\n        !schema ||\n        (typeof node !== 'string' && (!isSanityNode(node) || !Array.isArray(schema)))\n      ) {\n        return undefined\n      }\n      const name = typeof node === 'string' ? node : node.type\n      const filter = type === 'document' ? isDocumentSchemaType : isTypeSchemaType\n      return schema\n        .filter(filter)\n        .find((schemaType) => schemaType.name === name) as T extends 'document'\n        ? DocumentSchema | undefined\n        : TypeSchema | undefined\n    },\n    [schema],\n  )\n\n  const getField = useCallback(\n    (\n      node: SanityNode | SanityStegaNode,\n    ): {\n      field: OverlayElementField\n      parent: OverlayElementParent\n    } => {\n      if (!isSanityNode(node)) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n\n      const schemaType = getType(node)\n\n      if (!schemaType) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n      function fieldFromPath(\n        schemaType: OverlayElementParent,\n        path: string[],\n        parent: OverlayElementParent,\n        prevPath: string[] = [],\n      ): {\n        field: OverlayElementField\n        parent: OverlayElementParent\n      } {\n        if (!schemaType) {\n          return {field: undefined, parent: undefined}\n        }\n\n        const [next, ...rest] = path\n\n        if ('fields' in schemaType) {\n          const objectField = schemaType.fields[next]\n          if (!objectField && 'rest' in schemaType) {\n            return fieldFromPath(schemaType.rest, path, schemaType, prevPath)\n          }\n          if (!rest.length) {\n            return {field: objectField, parent}\n          }\n          if (!objectField) {\n            throw new Error(\n              `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n            )\n          }\n          return fieldFromPath(objectField.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'array') {\n          return fieldFromPath(schemaType.of, path, schemaType, prevPath)\n        } else if (schemaType.type === 'arrayItem') {\n          if (!rest.length) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'union') {\n          const name = next.startsWith('[_key==')\n            ? resolvedTypes\n                ?.get((node as SanityNode).id)\n                ?.get([prevPath.join('.'), next].filter(Boolean).join(''))\n            : next\n          return fieldFromPath(\n            schemaType.of.find((item) => (item.type === 'unionOption' ? item.name === name : item)),\n            rest,\n            schemaType,\n            [...prevPath, next],\n          )\n        } else if (schemaType.type === 'unionOption') {\n          if (!next) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, path, schemaType, prevPath)\n        } else if (schemaType.type === 'inline') {\n          const type = getType(schemaType.name, 'type')\n          return fieldFromPath((type as TypeSchema).value, path, schemaType, prevPath)\n        }\n        throw new Error(\n          `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n        )\n      }\n\n      const nodePath = node.path.split('.').flatMap((part) => {\n        if (part.includes('[')) {\n          return part.split(/(\\[.+\\])/, 2)\n        }\n        return [part]\n      })\n\n      try {\n        return fieldFromPath(schemaType, nodePath, undefined)\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        if (e instanceof Error) console.warn(e.message)\n        return {field: undefined, parent: undefined}\n      }\n    },\n    [getType, resolvedTypes],\n  )\n\n  const context = useMemo<SchemaContextValue>(() => ({getField, getType}), [getField, getType])\n\n  return <SchemaContext.Provider value={context}>{children}</SchemaContext.Provider>\n}\n","import type {SerializableObject} from '@sanity/presentation-comlink'\nimport {useEffect, useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {SharedStateContext} from './SharedStateContext'\n\nconst createStore = (initialState: SerializableObject) => {\n  let state = initialState\n  const getState = () => state\n  const listeners = new Set<() => void>()\n  const setState = (fn: (state: SerializableObject) => SerializableObject) => {\n    state = fn(state)\n    listeners.forEach((l) => l())\n  }\n  const subscribe = (listener: () => void) => {\n    listeners.add(listener)\n    return () => listeners.delete(listener)\n  }\n  return {getState, setState, subscribe}\n}\n\nconst store = createStore({})\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = (props) => {\n  const {comlink, children} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/shared-state', (data) => {\n      if ('value' in data) {\n        store.setState((prev) => ({...prev, [data.key]: data.value}))\n      } else {\n        store.setState((prev) => {\n          return Object.fromEntries(Object.entries(prev).filter(([key]) => key !== data.key))\n        })\n      }\n    })\n  }, [comlink])\n\n  useEffect(() => {\n    async function fetch() {\n      const value = await comlink?.fetch('visual-editing/shared-state', undefined, {\n        suppressWarnings: true,\n      })\n      if (value) {\n        store.setState(() => value.state)\n      }\n    }\n    fetch().catch((reason) => {\n      // eslint-disable-next-line no-console\n      console.debug(reason)\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sanity/visual-editing]: Failed to fetch shared state. Check your version of `sanity` is up-to-date',\n      )\n    })\n  }, [comlink])\n\n  const value = useMemo(() => ({comlink, store}), [comlink])\n\n  return <SharedStateContext.Provider value={value}>{children}</SharedStateContext.Provider>\n}\n","import {useCallback, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {events, TelemetryContext, type TelemetryContextValue} from './TelemetryContext'\n\nexport const TelemetryProvider: FunctionComponent<\n  PropsWithChildren<{comlink?: VisualEditingNode}>\n> = ({children, comlink}) => {\n  const log = useCallback<TelemetryContextValue>(\n    (name, data) => {\n      if (!comlink) return\n\n      const event = events[name]\n\n      if (!event) {\n        throw new Error(`Telemetry event: ${name} does not exist`)\n      } else {\n        comlink.post('visual-editing/telemetry-log', {event, data})\n      }\n    },\n    [comlink],\n  )\n\n  return <TelemetryContext.Provider value={log}>{children}</TelemetryContext.Provider>\n}\n","import {useEffect, useRef, type MutableRefObject} from 'react'\nimport {createOverlayController} from '../controller'\nimport {useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {OverlayController, OverlayEventHandler} from '../types'\n\n/**\n * Hook for using an overlay controller\n * @internal\n */\nexport function useController(\n  element: HTMLElement | null,\n  handler: OverlayEventHandler,\n  inFrame: boolean,\n  inPopUp: boolean,\n): MutableRefObject<OverlayController | undefined> {\n  const overlayController = useRef<OverlayController | undefined>(undefined)\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  useEffect(() => {\n    if (!element) return undefined\n\n    overlayController.current = createOverlayController({\n      handler,\n      overlayElement: element,\n      inFrame,\n      inPopUp,\n      optimisticActorReady,\n    })\n\n    return () => {\n      overlayController.current?.destroy()\n      overlayController.current = undefined\n    }\n  }, [element, handler, inFrame, inPopUp, optimisticActorReady])\n\n  return overlayController\n}\n","import type {VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport {useEffect} from 'react'\nimport type {OverlayMsg, VisualEditingNode} from '../types'\n\nexport function usePerspectiveSync(\n  comlink: VisualEditingNode | undefined,\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void,\n): void {\n  useEffect(() => {\n    const controller = new AbortController()\n    comlink\n      ?.fetch('visual-editing/fetch-perspective', undefined, {\n        signal: controller.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        dispatch({type: 'presentation/perspective', data})\n      })\n      .catch(() => {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      })\n\n    const unsub = comlink?.on('presentation/perspective', (data) => {\n      dispatch({type: 'presentation/perspective', data})\n    })\n\n    return () => {\n      unsub?.()\n      controller.abort()\n    }\n  }, [comlink, dispatch])\n}\n","import type {ClientPerspective, ContentSourceMapDocuments} from '@sanity/client'\nimport {useCallback, useEffect, useRef} from 'react'\nimport type {ElementState, SanityNode, VisualEditingNode} from '../types'\n\nfunction isEqualSets(a: Set<string>, b: Set<string>) {\n  if (a === b) return true\n  if (a.size !== b.size) return false\n  for (const value of a) if (!b.has(value)) return false\n  return true\n}\n\n/**\n * Hook for reporting in use documents to Presentation\n * @internal\n */\nexport function useReportDocuments(\n  comlink: VisualEditingNode | undefined,\n  elements: ElementState[],\n  perspective: ClientPerspective,\n): void {\n  const lastReported = useRef<\n    | {\n        nodeIds: Set<string>\n        perspective: ClientPerspective\n      }\n    | undefined\n  >(undefined)\n\n  const reportDocuments = useCallback(\n    (documents: ContentSourceMapDocuments, perspective: ClientPerspective) => {\n      comlink?.post('visual-editing/documents', {\n        documents,\n        perspective,\n      })\n    },\n    [comlink],\n  )\n\n  useEffect(() => {\n    // Report only nodes of type `SanityNode`. Untransformed `SanityStegaNode`\n    // nodes without an `id`, are not reported as they will not contain the\n    // necessary document data.\n    const nodes = elements\n      .map((e) => {\n        const {sanity} = e\n        if (!('id' in sanity)) return null\n        return sanity\n      })\n      .filter((s) => !!s) as SanityNode[]\n\n    const nodeIds = new Set<string>(nodes.map((e) => e.id))\n    // Report if:\n    // - Documents not yet reported\n    // - Document IDs changed\n    // - Perspective changed\n    if (\n      !lastReported.current ||\n      !isEqualSets(nodeIds, lastReported.current.nodeIds) ||\n      perspective !== lastReported.current.perspective\n    ) {\n      const documentsOnPage: ContentSourceMapDocuments = Array.from(nodeIds).map((_id) => {\n        const node = nodes.find((node) => node.id === _id)!\n        const {type, projectId: _projectId, dataset: _dataset} = node\n        return _projectId && _dataset\n          ? {_id, _type: type!, _projectId, _dataset}\n          : {_id, _type: type!}\n      })\n      lastReported.current = {nodeIds, perspective}\n      reportDocuments(documentsOnPage, perspective)\n    }\n  }, [elements, perspective, reportDocuments])\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport {getDraftId, getPublishedId} from '@sanity/client/csm'\nimport type {Status} from '@sanity/comlink'\nimport {type VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport {\n  isHTMLAnchorElement,\n  isHTMLElement,\n  LayerProvider,\n  PortalProvider,\n  studioTheme,\n  ThemeProvider,\n  usePrefersDark,\n} from '@sanity/ui/_visual-editing'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  type FunctionComponent,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {useOptimisticActor, useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {\n  OverlayComponentResolver,\n  OverlayEventHandler,\n  OverlayMsg,\n  VisualEditingNode,\n} from '../types'\nimport {sanityNodesExistInSameArray} from '../util/findSanityNodes'\nimport {useDragEndEvents} from '../util/useDragEvents'\nimport {ContextMenu} from './context-menu/ContextMenu'\nimport {ElementOverlay} from './ElementOverlay'\nimport {OverlayDragGroupRect} from './OverlayDragGroupRect'\nimport {OverlayDragInsertMarker} from './OverlayDragInsertMarker'\nimport {OverlayDragPreview} from './OverlayDragPreview'\nimport {OverlayMinimapPrompt} from './OverlayMinimapPrompt'\nimport {overlayStateReducer} from './overlayStateReducer'\nimport {PreviewSnapshotsProvider} from './preview/PreviewSnapshotsProvider'\nimport {SchemaProvider} from './schema/SchemaProvider'\nimport {SharedStateProvider} from './shared-state/SharedStateProvider'\nimport {TelemetryProvider} from './telemetry/TelemetryProvider'\nimport {useTelemetry} from './telemetry/useTelemetry'\nimport {useController} from './useController'\nimport {usePerspectiveSync} from './usePerspectiveSync'\nimport {useReportDocuments} from './useReportDocuments'\n\nconst Root = styled.div<{\n  $zIndex?: string | number\n}>`\n  background-color: transparent;\n  direction: ltr;\n  inset: 0;\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: ${({$zIndex}) => $zIndex ?? '9999999'};\n`\n\nfunction raf2(fn: () => void) {\n  let r0: number | undefined = undefined\n  let r1: number | undefined = undefined\n\n  r0 = requestAnimationFrame(() => {\n    r1 = requestAnimationFrame(fn)\n  })\n\n  return () => {\n    if (r0 !== undefined) cancelAnimationFrame(r0)\n    if (r1 !== undefined) cancelAnimationFrame(r1)\n  }\n}\n\nconst DocumentReporter: FunctionComponent<{\n  documentIds: string[]\n  perspective: ClientPerspective\n}> = (props) => {\n  const {documentIds} = props\n  const [uniqueIds, setUniqueIds] = useState<string[]>([])\n\n  useEffect(() => {\n    setUniqueIds((prev) => {\n      const next = Array.from(new Set(documentIds))\n      return prev.length === next.length &&\n        prev.reduce((acc, prevId) => acc.filter((id) => id !== prevId), next)?.length === 0\n        ? prev\n        : next\n    })\n  }, [documentIds])\n  const actor = useOptimisticActor()\n\n  useEffect(() => {\n    for (const id of uniqueIds) {\n      actor.send({type: 'observe', documentId: getDraftId(id)})\n      actor.send({type: 'observe', documentId: getPublishedId(id)})\n    }\n    return () => {\n      for (const id of uniqueIds) {\n        actor.send({type: 'unobserve', documentId: getDraftId(id)})\n        actor.send({type: 'unobserve', documentId: getPublishedId(id)})\n      }\n    }\n  }, [actor, uniqueIds])\n\n  return null\n}\n\nconst OverlaysController: FunctionComponent<{\n  comlink?: VisualEditingNode\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void\n  inFrame: boolean\n  inPopUp: boolean\n  onDrag: (x: number, y: number) => void\n  overlayEnabled: boolean\n  rootElement: HTMLElement | null\n}> = (props) => {\n  const {comlink, dispatch, inFrame, inPopUp, onDrag, overlayEnabled, rootElement} = props\n  const {dispatchDragEndEvent} = useDragEndEvents()\n  const sendTelemetry = useTelemetry()\n\n  const overlayEventHandler: OverlayEventHandler = useCallback(\n    (message) => {\n      if (message.type === 'element/click') {\n        const {sanity} = message\n        comlink?.post('visual-editing/focus', sanity)\n\n        sendTelemetry('Visual Editing Overlay Clicked', null)\n      } else if (message.type === 'overlay/activate') {\n        comlink?.post('visual-editing/toggle', {enabled: true})\n      } else if (message.type === 'overlay/deactivate') {\n        comlink?.post('visual-editing/toggle', {enabled: false})\n      } else if (message.type === 'overlay/dragEnd') {\n        const {insertPosition, target, dragGroup, flow, preventInsertDefault} = message\n\n        dispatchDragEndEvent({insertPosition, target, dragGroup, flow, preventInsertDefault})\n\n        if (insertPosition) {\n          sendTelemetry('Visual Editing Drag Sequence Completed', null)\n        }\n      } else if (message.type === 'overlay/dragUpdateCursorPosition') {\n        onDrag(message.x, message.y)\n\n        return\n      } else if (message.type === 'overlay/dragToggleMinimap' && message.display === true) {\n        sendTelemetry('Visual Editing Drag Minimap Enabled', null)\n      } else if (message.type === 'overlay/setCursor') {\n        const {element, cursor} = message\n\n        if (cursor) {\n          element.style.cursor = cursor\n        } else {\n          element.style.removeProperty('cursor')\n        }\n      }\n\n      dispatch(message)\n    },\n    [comlink, dispatch, dispatchDragEndEvent, onDrag, sendTelemetry],\n  )\n\n  const controller = useController(rootElement, overlayEventHandler, inFrame, inPopUp)\n\n  useEffect(() => {\n    if (overlayEnabled) {\n      controller.current?.activate()\n    } else {\n      controller.current?.deactivate()\n    }\n  }, [controller, overlayEnabled])\n\n  return null\n}\n\n/**\n * @internal\n */\nexport const Overlays: FunctionComponent<{\n  comlink?: VisualEditingNode\n  comlinkStatus?: Status\n  componentResolver?: OverlayComponentResolver\n  inFrame: boolean\n  inPopUp: boolean\n  zIndex?: string | number\n}> = (props) => {\n  const {\n    comlink,\n    comlinkStatus,\n    componentResolver: _componentResolver,\n    inFrame,\n    inPopUp,\n    zIndex,\n  } = props\n\n  const prefersDark = usePrefersDark()\n\n  const [\n    {\n      contextMenu,\n      dragInsertPosition,\n      dragShowMinimap,\n      dragShowMinimapPrompt,\n      dragSkeleton,\n      elements,\n      isDragging,\n      perspective,\n      wasMaybeCollapsed,\n      dragMinimapTransition,\n      dragGroupRect,\n    },\n    dispatch,\n  ] = useReducer(overlayStateReducer, {\n    contextMenu: null,\n    dragInsertPosition: null,\n    dragShowMinimap: false,\n    dragShowMinimapPrompt: false,\n    dragSkeleton: null,\n    elements: [],\n    focusPath: '',\n    isDragging: false,\n    perspective: 'published',\n    wasMaybeCollapsed: false,\n    dragMinimapTransition: false,\n    dragGroupRect: null,\n  })\n  const [rootElement, setRootElement] = useState<HTMLElement | null>(null)\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  useEffect(() => {\n    const unsubs = [\n      comlink?.on('presentation/focus', (data) => {\n        dispatch({type: 'presentation/focus', data})\n      }),\n      comlink?.on('presentation/blur', (data) => {\n        dispatch({type: 'presentation/blur', data})\n      }),\n      comlink?.on('presentation/toggle-overlay', () => {\n        setOverlayEnabled((enabled) => !enabled)\n      }),\n    ].filter(Boolean)\n\n    return () => unsubs.forEach((unsub) => unsub!())\n  }, [comlink])\n\n  usePerspectiveSync(comlink, dispatch)\n\n  useReportDocuments(comlink, elements, perspective)\n\n  const updateDragPreviewCustomProps = useCallback(\n    (x: number, y: number) => {\n      if (!rootElement) return\n\n      rootElement.style.setProperty('--drag-preview-x', `${x}px`)\n      rootElement.style.setProperty('--drag-preview-y', `${y - window.scrollY}px`)\n    },\n    [rootElement],\n  )\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      const target = event.target\n\n      // We only need to modify the default behavior if the target is a link\n      const targetsLink = Boolean(\n        isHTMLAnchorElement(target) || (isHTMLElement(target) && target.closest('a')),\n      )\n\n      if (targetsLink && event.altKey) {\n        event.preventDefault()\n        event.stopPropagation()\n        const newEvent = new MouseEvent(event.type, {\n          ...event,\n          altKey: false,\n          bubbles: true,\n          cancelable: true,\n        })\n        event.target?.dispatchEvent(newEvent)\n      }\n    }\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    window.addEventListener('click', handleClick)\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n\n    return () => {\n      window.removeEventListener('click', handleClick)\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [setOverlayEnabled])\n\n  const [overlaysFlash, setOverlaysFlash] = useState(false)\n  const [fadingOut, setFadingOut] = useState(false)\n  const fadeOutTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined)\n\n  // Flash overlays when they are enabled\n  useEffect(() => {\n    if (overlayEnabled) {\n      return raf2(() => {\n        setOverlaysFlash(true)\n        raf2(() => {\n          setFadingOut(true)\n          fadeOutTimeoutRef.current = setTimeout(() => {\n            setFadingOut(false)\n            setOverlaysFlash(false)\n          }, 1500)\n        })\n      })\n    } else if (fadeOutTimeoutRef.current) {\n      clearTimeout(fadeOutTimeoutRef.current)\n      setOverlaysFlash(false)\n      setFadingOut(false)\n    }\n\n    return\n  }, [overlayEnabled])\n\n  const documentIds = useMemo(() => {\n    return elements.flatMap((element) => ('id' in element.sanity ? [element.sanity.id] : []))\n  }, [elements])\n\n  const closeContextMenu = useCallback(() => {\n    dispatch({type: 'overlay/blur'})\n  }, [])\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  const componentResolver = useMemo(() => {\n    return optimisticActorReady ? _componentResolver : undefined\n  }, [_componentResolver, optimisticActorReady])\n\n  const elementsToRender = useMemo(() => {\n    if (((inFrame || inPopUp) && comlinkStatus !== 'connected') || isDragging) {\n      return []\n    }\n\n    return elements\n      .filter((e) => e.activated || e.focused)\n      .map(({id, element, focused, hovered, rect, sanity, dragDisabled}) => {\n        const draggable =\n          !dragDisabled &&\n          !!element.getAttribute('data-sanity') &&\n          optimisticActorReady &&\n          elements.some((e) =>\n            'id' in e.sanity && 'id' in sanity\n              ? sanityNodesExistInSameArray(e.sanity, sanity) && e.sanity.path !== sanity.path\n              : false,\n          )\n\n        return (\n          <ElementOverlay\n            componentResolver={componentResolver}\n            element={element}\n            enableScrollIntoView={!isDragging && !dragMinimapTransition && !dragShowMinimap}\n            key={id}\n            focused={focused}\n            hovered={hovered}\n            node={sanity}\n            rect={rect}\n            // When inside a popup window we want actions to show up on hover, but iframes should hide them\n            showActions={!inFrame}\n            draggable={draggable}\n            isDragging={isDragging || dragMinimapTransition}\n            wasMaybeCollapsed={focused && wasMaybeCollapsed}\n          />\n        )\n      })\n  }, [\n    componentResolver,\n    dragMinimapTransition,\n    dragShowMinimap,\n    elements,\n    inFrame,\n    inPopUp,\n    isDragging,\n    optimisticActorReady,\n    comlinkStatus,\n    wasMaybeCollapsed,\n  ])\n\n  return (\n    <TelemetryProvider comlink={comlink}>\n      <ThemeProvider scheme={prefersDark ? 'dark' : 'light'} theme={studioTheme} tone=\"transparent\">\n        <LayerProvider>\n          <PortalProvider element={rootElement}>\n            <SchemaProvider comlink={comlink} elements={elements}>\n              <PreviewSnapshotsProvider comlink={comlink}>\n                <SharedStateProvider comlink={comlink}>\n                  <Root\n                    data-fading-out={fadingOut ? '' : undefined}\n                    data-overlays={overlaysFlash ? '' : undefined}\n                    ref={setRootElement}\n                    $zIndex={zIndex}\n                  >\n                    <DocumentReporter documentIds={documentIds} perspective={perspective} />\n                    <OverlaysController\n                      comlink={comlink}\n                      dispatch={dispatch}\n                      inFrame={inFrame}\n                      inPopUp={inPopUp}\n                      onDrag={updateDragPreviewCustomProps}\n                      overlayEnabled={overlayEnabled}\n                      rootElement={rootElement}\n                    />\n                    {contextMenu && <ContextMenu {...contextMenu} onDismiss={closeContextMenu} />}\n                    {elementsToRender}\n\n                    {isDragging && !dragMinimapTransition && (\n                      <>\n                        {dragInsertPosition && (\n                          <OverlayDragInsertMarker dragInsertPosition={dragInsertPosition} />\n                        )}\n                        {dragShowMinimapPrompt && <OverlayMinimapPrompt />}\n                        {dragGroupRect && <OverlayDragGroupRect dragGroupRect={dragGroupRect} />}\n                      </>\n                    )}\n                    {isDragging && dragSkeleton && <OverlayDragPreview skeleton={dragSkeleton} />}\n                  </Root>\n                </SharedStateProvider>\n              </PreviewSnapshotsProvider>\n            </SchemaProvider>\n          </PortalProvider>\n        </LayerProvider>\n      </ThemeProvider>\n    </TelemetryProvider>\n  )\n}\n\nconst IS_MAC =\n  typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform)\n\nconst MODIFIERS: Record<string, 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'> = {\n  alt: 'altKey',\n  ctrl: 'ctrlKey',\n  mod: IS_MAC ? 'metaKey' : 'ctrlKey',\n  shift: 'shiftKey',\n}\nfunction isHotkey(keys: string[], event: KeyboardEvent): boolean {\n  return keys.every((key) => {\n    if (MODIFIERS[key]) {\n      return event[MODIFIERS[key]]\n    }\n    return event.key === key.toUpperCase()\n  })\n}\nfunction isAltKey(event: KeyboardEvent): boolean {\n  return event.key === 'Alt'\n}\n","import {useEffect, useRef, type FunctionComponent} from 'react'\nimport type {VisualEditingNode, VisualEditingOptions} from '../types'\n\n/**\n * @internal\n */\nexport const Refresh: FunctionComponent<\n  {\n    comlink: VisualEditingNode\n  } & Required<Pick<VisualEditingOptions, 'refresh'>>\n> = (props) => {\n  const {comlink, refresh} = props\n\n  const manualRefreshRef = useRef(0)\n  const mutationRefreshRef = useRef(0)\n\n  useEffect(\n    () =>\n      comlink.on('presentation/refresh', (data) => {\n        if (data.source === 'manual') {\n          clearTimeout(manualRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          let timedOut = false\n          manualRefreshRef.current = window.setTimeout(() => {\n            comlink.post('visual-editing/refreshed', data)\n            timedOut = true\n          }, 3000)\n          promise?.finally?.(() => {\n            if (timedOut) return\n            clearTimeout(manualRefreshRef.current)\n            comlink.post('visual-editing/refreshed', data)\n          })\n        } else if (data.source === 'mutation') {\n          clearTimeout(mutationRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          // Send an additional refresh to account for Content Lake eventual consistency\n          mutationRefreshRef.current = window.setTimeout(() => {\n            const promise = refresh(data)\n            if (promise === false) return\n            comlink.post('visual-editing/refreshing', data)\n            promise?.finally?.(() => {\n              comlink.post('visual-editing/refreshed', data)\n            }) || comlink.post('visual-editing/refreshed', data)\n          }, 1000)\n          promise?.finally?.(() => {\n            comlink.post('visual-editing/refreshed', data)\n          }) || comlink.post('visual-editing/refreshed', data)\n        }\n      }),\n    [comlink, refresh],\n  )\n\n  return null\n}\n","import {createNode, createNodeMachine, type Status} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {useEffect, useState} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useComlink(active: boolean = true): [VisualEditingNode | undefined, Status] {\n  const [node, setNode] = useState<VisualEditingNode>()\n  const [status, setStatus] = useState<Status>('idle')\n\n  useEffect(() => {\n    if (!active) return\n    const instance = createNode<VisualEditingNodeMsg, VisualEditingControllerMsg>(\n      {\n        name: 'visual-editing',\n        connectTo: 'presentation',\n      },\n      createNodeMachine<VisualEditingNodeMsg, VisualEditingControllerMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingNodeMsg>(),\n      }),\n    )\n    const unsub = instance.onStatus(() => setStatus('connected'), 'connected')\n\n    setNode(instance)\n    const stop = instance.start()\n\n    return () => {\n      unsub()\n      stop()\n      setNode(undefined)\n    }\n  }, [active])\n\n  /**\n   * Handle reporting of status to the presentation tool in case of connection failure due to misconfigured URL origin\n   */\n  useEffect(() => {\n    /**\n     * We only need to report status if the node is not connected\n     */\n    if (status === 'connected') return\n\n    const controller = new AbortController()\n    window.addEventListener(\n      'message',\n      ({data, origin}: MessageEvent<unknown>) => {\n        /**\n         * Detect if Presentation is asking if Visual Editing is here but misconfigured\n         * @TODO this should probably be a feature built into `comlink`, as it's a common problem for apps dealing with iframes.\n         */\n        if (\n          data &&\n          typeof data === 'object' &&\n          'domain' in data &&\n          data.domain === 'sanity/channels' &&\n          'from' in data &&\n          data.from === 'presentation' &&\n          'type' in data &&\n          data.type === 'presentation/status'\n        ) {\n          /**\n           * We only send this message to the parent window, which supports Presentation loading the page in an iframe.\n           * This avoids letting other iframes on the page, or other openers, from getting a response.\n           */\n          window.parent.postMessage(\n            {\n              domain: 'sanity/channels',\n              type: 'visual-editing/status',\n              data: {origin: location.origin},\n            },\n            /**\n             * Using the same origin ensures that if the parent window don't have the same origin the message won't be sent.\n             * This grants some protection against spoofing, as malicious iframes can't easily call this event and trigger the Presentation Tool to think there's a failing state.\n             */\n            origin,\n          )\n        }\n      },\n      {signal: controller.signal},\n    )\n    return () => {\n      controller.abort()\n    }\n  }, [status])\n\n  return [node, status]\n}\n","import {type ListenEvent} from '@sanity/client'\nimport {merge, ReplaySubject, Subject, type Observable, type ObservedValueOf} from 'rxjs'\nimport type {VisualEditingNode} from '../../types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype SharedListenEvent = ListenEvent<Record<string, any>>\n\n/**\n * Creates a single, shared, listener EventSource that strems remote mutations, and notifies when it's online (welcome), offline (reconnect).\n */\nexport function createSharedListener(comlink: VisualEditingNode): Observable<SharedListenEvent> {\n  // Welcome events could be received before the listener has been subscribed\n  // to. Using a ReplaySubject will ensure the welcome event is re-emitted when\n  // a new subscriber arrives.\n  const incomingConnection$ = new ReplaySubject<SharedListenEvent>(1)\n  const incomingMutations$ = new Subject<SharedListenEvent>()\n\n  comlink\n    .fetch('visual-editing/snapshot-welcome', undefined, {suppressWarnings: true})\n    .then((data) => {\n      incomingConnection$.next(data.event)\n    })\n    .catch(() => {\n      // Fail silently as the app may be communicating with a version of\n      // Presentation that does not support this feature\n    })\n\n  comlink.on('presentation/snapshot-event', (data) => {\n    // Welcome events are still emitted by Presentation for backwards\n    // compatibility. We don't need them anymore as we explicitly fetch the\n    // welcome event, so filter them out here.\n    if (data.event.type === 'reconnect') {\n      incomingConnection$.next(data.event)\n    }\n    if (data.event.type === 'mutation') {\n      incomingMutations$.next(data.event)\n    }\n  })\n\n  return merge(incomingConnection$, incomingMutations$)\n}\n\nexport type SharedListenerEvents = ObservedValueOf<ReturnType<typeof createSharedListener>>\n","import {useEffect} from 'react'\nimport {createActor} from 'xstate'\nimport {setActor} from '../optimistic/context'\nimport {createSharedListener} from '../optimistic/state/createSharedListener'\nimport {createDatasetMutator} from '../optimistic/state/datasetMutator'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useDatasetMutator(comlink: VisualEditingNode | undefined): void {\n  useEffect(() => {\n    if (!comlink) return\n    const listener = createSharedListener(comlink)\n    const datasetMutator = createDatasetMutator(comlink)\n    const mutator = createActor(datasetMutator, {\n      // @ts-expect-error @todo\n      input: {client: {withConfig: () => {}}, sharedListener: listener},\n    })\n\n    mutator.start()\n\n    // Fetch features to determine if optimistic updates are supported\n    const featuresFetch = new AbortController()\n    comlink\n      .fetch('visual-editing/features', undefined, {\n        signal: featuresFetch.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        if (data.features['optimistic']) {\n          setActor(mutator)\n        }\n      })\n      .catch(() => {\n        // eslint-disable-next-line no-console\n        console.warn(\n          '[@sanity/visual-editing] Package version mismatch detected: Please update your Sanity studio to prevent potential compatibility issues.',\n        )\n      })\n\n    return () => {\n      mutator.stop()\n      featuresFetch.abort()\n    }\n  }, [comlink])\n}\n","import {isMaybePreviewIframe, isMaybePreviewWindow} from '@sanity/presentation-comlink'\nimport {useEffect, useState} from 'react'\nimport {createPortal} from 'react-dom'\nimport type {VisualEditingOptions} from '../types'\nimport {History} from './History'\nimport {Meta} from './Meta'\nimport {Overlays} from './Overlays'\nimport {Refresh} from './Refresh'\nimport {useComlink} from './useComlink'\nimport {useDatasetMutator} from './useDatasetMutator'\n\n/**\n * @public\n */\nexport const VisualEditing = (props: VisualEditingOptions & {portal: boolean}): React.ReactNode => {\n  const {components, history, portal = true, refresh, zIndex} = props\n\n  const [inFrame, setInFrame] = useState<boolean | null>(null)\n  const [inPopUp, setInPopUp] = useState<boolean | null>(null)\n  useEffect(() => {\n    setInFrame(isMaybePreviewIframe())\n    setInPopUp(isMaybePreviewWindow())\n  }, [])\n\n  const [portalElement, setPortalElement] = useState<HTMLElement | null>(null)\n  useEffect(() => {\n    if (portal === false) return undefined\n    const node = document.createElement('sanity-visual-editing')\n    document.documentElement.appendChild(node)\n    setPortalElement(node)\n    return () => {\n      setPortalElement(null)\n      if (document.documentElement.contains(node)) {\n        document.documentElement.removeChild(node)\n      }\n    }\n  }, [portal])\n\n  const [comlink, comlinkStatus] = useComlink(inFrame === true || inPopUp === true)\n  useDatasetMutator(comlinkStatus === 'connected' ? comlink : undefined)\n\n  const children = (\n    <>\n      {inFrame !== null && inPopUp !== null && (\n        <Overlays\n          comlink={comlink}\n          comlinkStatus={comlinkStatus}\n          componentResolver={components}\n          inFrame={inFrame}\n          inPopUp={inPopUp}\n          zIndex={zIndex}\n        />\n      )}\n      {comlink && (\n        <>\n          <History comlink={comlink} history={history} />\n          <Meta comlink={comlink} />\n          {refresh && <Refresh comlink={comlink} refresh={refresh} />}\n        </>\n      )}\n    </>\n  )\n\n  if (portal === false || !portalElement) return children\n\n  return createPortal(children, portalElement)\n}\nVisualEditing.displayName = 'VisualEditing'\n"],"names":["History","props","$","_c","comlink","history","t0","t1","on","data","update","useEffect","t2","t3","subscribe","title","document","post","Meta","sendMeta","observer","MutationObserver","mutation","target","nodeName","observe","head","subtree","characterData","childList","disconnect","getReferenceNodeAndInsertPosition","position","top","right","bottom","left","node","sanity","useDragEndEvents","getDocument","useDocuments","handler","e","insertPosition","preventInsertDefault","detail","reference","doc","id","key","targetKey","hasExplicitKey","getArrayItemKeyAndParentPath","path","arrayPath","referenceItemKey","patch","getSnapshot","snapshot","elementValue","getFromPath","at","remove","_key","insert","window","addEventListener","removeEventListener","dispatchDragEndEvent","_temp","Symbol","for","event","customEvent","CustomEvent","cancelable","dispatchEvent","SchemaContext","createContext","useSchema","context","useContext","Error","getArrayRemoveAction","type","getArrayRemovePatches","getArrayInsertAction","insertType","getArrayInsertPatches","getDuplicateAction","getArrayDuplicatePatches","getContextMenuItems","field","parent","getContextMenuArrayItems","getContextMenuUnionItems","Promise","resolve","getDuplicateItem","label","icon","CopyIcon","action","telemetryEvent","getRemoveItems","RemoveIcon","getMoveItems","withDivider","items","groupItems","moveUpPatches","moveDownPatches","moveFirstPatches","moveLastPatches","all","getArrayMovePatches","length","push","PublishIcon","ArrowUpIcon","ArrowDownIcon","UnpublishIcon","SortIcon","InsertAboveIcon","name","InsertBelowIcon","InsertMenuWrapper","width","onSelect","boundaryElement","arrow","constrainSize","floatingBoundary","padding","placement","fallbackPlacements","preventOverflow","__unstable_margins","t4","options","insertMenu","views","some","view","undefined","component","sendTelemetry","schemaType","of","filter","item","map","t","getNodeIcon","POPOVER_MARGINS","ContextMenuItem","onDismiss","useTelemetry","onClick","hotkeys","t5","itemIndex","Component","ContextMenu","x","y","setBoundaryElement","useState","getField","setItems","fetchContextMenuItems","items_0","t6","getBoundingClientRect","height","contextMenuReferenceElement","t7","t8","t9","minWidth","maxWidth","t10","t11","t12","t13","t14","i","t15","t16","t17","t18","t19","t20","getLinkHref","href","referer","parsed","URL","location","origin","hash","slice","pathname","search","searchParams","set","toString","PreviewSnapshotsContext","usePreviewSnapshots","isReactElementOverlayComponent","isValidElement","Root","styled","Card","Actions","Flex","Tab","ActionOpen","Labels","createIntentLink","baseUrl","tool","workspace","createEditUrl","pathToUrlString","studioPath","fromString","ElementOverlayInner","element","focused","componentResolver","showActions","draggable","getType","previewSnapshots","bb0","find","_id","bb1","value","componentContext","customComponents","useCustomComponents","__html","Array","isArray","props_0","PointerEvents","ElementOverlay","memo","hovered","rect","wasMaybeCollapsed","enableScrollIntoView","ref","useRef","scrolledIntoViewRef","w","h","transform","style","current","scrollIntoView","behavior","actions","block","inline","scrollMode","isNearTop","setIsNearTop","io","IntersectionObserver","intersection","boundingClientRect","threshold","resolved","Link","useSyncExternalStore","_temp2","_temp3","onStoreChange","handlePopState","OverlayDragGroupRect","dragGroupRect","border","pointerEvents","markerThickness","lerp","v0","v1","OverlayDragInsertMarker","dragInsertPosition","flow","startX","endX","offset","Math","min","offset_0","offset_1","startX_0","startY","endY","offset_2","offset_3","offset_4","background","borderRadius","zIndex","div","$scaleFactor","$width","$height","clamp","number","max","inMin","inMax","outMin","outMax","mapped","OverlayDragPreview","skeleton","maxSkeletonWidth","innerWidth","scaleFactor","offsetX","offsetY","prefersDark","usePrefersDark","theme","useTheme_v2","radius","T0","T1","childRects","imageRects","textRects","color","r_1","r","from","tagName","r_0","OverlayMinimapPrompt","elementsReducer","elements","message","activated","dragDisabled","clickedElement","overlayStateReducer","state","contextMenu","focusPath","perspective","isDragging","dragShowMinimap","dragShowMinimapPrompt","dragSkeleton","dragMinimapTransition","prevFocusPath","startsWith","display","groupRect","PreviewSnapshotsProvider","children","setPreviewSnapshots","signal","response","fetch","suppressWarnings","snapshots","fetchPreviewSnapshots","previewSapshotsFetch","AbortController","unsub","onStatus","abort","isSanityNode","isDocumentSchemaType","isTypeSchemaType","popUnkeyedPathSegments","split","toReversed","reduce","acc","part","includes","join","getPathsWithUnresolvedTypes","SchemaProvider","Map","resolvedTypes","setResolvedTypes","schema","setSchema","fetchSchema","schemaFetch","reportedPathsRef","useDeferredValue","paths","controllerRef","reportPaths","paths_0","signal_0","initialReportedPaths","response_0","aborted","types","p","_type","node_0","schemaType_0","fieldFromPath","schemaType_1","path_0","prevPath","next","rest","objectField","fields","name_0","get","Boolean","type_0","nodePath","flatMap","console","warn","createStore","initialState","getState","listeners","Set","setState","fn","forEach","l","listener","add","delete","store","SharedStateProvider","catch","value_0","prev","prev_0","Object","fromEntries","entries","reason","debug","TelemetryProvider","events","log","useController","inFrame","inPopUp","overlayController","optimisticActorReady","useOptimisticActorReady","createOverlayController","overlayElement","destroy","usePerspectiveSync","dispatch","controller","then","data_0","isEqualSets","a","b","size","has","useReportDocuments","lastReported","documents","perspective_0","reportDocuments","nodes","nodeIds","documentsOnPage","projectId","_projectId","dataset","_dataset","e_0","s","$zIndex","raf2","r0","r1","requestAnimationFrame","cancelAnimationFrame","DocumentReporter","documentIds","uniqueIds","setUniqueIds","actor","useOptimisticActor","id_0","send","documentId","getDraftId","getPublishedId","id_1","OverlaysController","onDrag","overlayEnabled","rootElement","enabled","dragGroup","cursor","removeProperty","activate","deactivate","Overlays","comlinkStatus","_componentResolver","useReducer","setRootElement","setOverlayEnabled","unsubs","setProperty","scrollY","updateDragPreviewCustomProps","handleClick","_temp4","handleKeyUp","isAltKey","_temp5","handleKeydown","_temp6","isHotkey","_temp7","overlaysFlash","setOverlaysFlash","fadingOut","setFadingOut","fadeOutTimeoutRef","setTimeout","clearTimeout","_temp8","closeContextMenu","_temp9","element_0","getAttribute","e_2","sanityNodesExistInSameArray","elementsToRender","t21","t22","t23","t24","t25","t26","t27","studioTheme","t28","IS_MAC","test","navigator","platform","MODIFIERS","alt","ctrl","mod","shift","keys","every","toUpperCase","prevId","isHTMLAnchorElement","isHTMLElement","closest","altKey","preventDefault","stopPropagation","newEvent","MouseEvent","bubbles","enabled_0","enabled_1","enabled_2","e_1","Refresh","refresh","manualRefreshRef","mutationRefreshRef","source","promise","timedOut","finally","promise_0","promise_1","useComlink","active","setNode","status","setStatus","instance","createNode","connectTo","createNodeMachine","provide","actors","createCompatibilityActors","stop","start","domain","postMessage","createSharedListener","incomingConnection$","ReplaySubject","incomingMutations$","Subject","merge","useDatasetMutator","datasetMutator","createDatasetMutator","mutator","createActor","input","client","withConfig","sharedListener","featuresFetch","features","optimistic","setActor","VisualEditing","components","portal","setInFrame","setInPopUp","isMaybePreviewIframe","isMaybePreviewWindow","portalElement","setPortalElement","createElement","documentElement","appendChild","contains","removeChild","createPortal","displayName"],"mappings":"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"}