{"version":3,"file":"context.cjs","sources":["../../src/hooks/context.ts"],"sourcesContent":["import type {ClientPerspective} from '@sanity/client'\nimport {type Node} from '@sanity/comlink'\nimport {type LoaderControllerMsg, type LoaderNodeMsg} from '@sanity/presentation-comlink'\n\n/**\n * The Sanity Client perspective used when fetching data in Draft Mode, in the `sanityFetch` calls\n * used by React Server Components on the page. Note that some of them might set the `perspective` to a different value.\n * This value is what's used by default.\n * @public\n */\nexport type DraftPerspective = 'checking' | 'unknown' | ClientPerspective\n\n/** @internal */\nexport const perspectiveListeners = new Set<() => void>()\n/** @internal */\nexport let perspective: DraftPerspective = 'checking'\n/** @internal */\nexport function setPerspective(nextPerspective: DraftPerspective): void {\n  if (perspective === nextPerspective) return\n  perspective = nextPerspective\n  for (const onPerspectiveChange of perspectiveListeners) {\n    onPerspectiveChange()\n  }\n}\n\n/**\n *\n * @public\n */\nexport type DraftEnvironment =\n  | 'checking'\n  | 'presentation-iframe'\n  | 'presentation-window'\n  | 'live'\n  | 'static'\n  | 'unknown'\n\n/** @internal */\nexport const environmentListeners = new Set<() => void>()\n/** @internal */\nexport let environment: DraftEnvironment = 'checking'\n/** @internal */\nexport function setEnvironment(nextEnvironment: DraftEnvironment): void {\n  environment = nextEnvironment\n  for (const onEnvironmentChange of environmentListeners) {\n    onEnvironmentChange()\n  }\n}\n\n/** @internal */\nexport const comlinkListeners = new Set<() => void>()\n/** @internal */\nexport let comlink: Node<LoaderNodeMsg, LoaderControllerMsg> | null = null\n/** @internal */\nexport function setComlink(nextComlink: Node<LoaderNodeMsg, LoaderControllerMsg> | null): void {\n  comlink = nextComlink\n  for (const onComlinkChange of comlinkListeners) {\n    onComlinkChange()\n  }\n}\n"],"names":["perspective","environment","comlink"],"mappings":";AAaa,MAAA,2CAA2B,IAAgB;AAE7CA,QAAAA,cAAgC;AAEpC,SAAS,eAAe,iBAAyC;AACtE,MAAIA,QAAAA,gBAAgB,iBACpB;AAAcA,YAAAA,cAAA;AACd,eAAW,uBAAuB;AACZ,0BAAA;AAAA,EAAA;AAExB;AAea,MAAA,2CAA2B,IAAgB;AAE7CC,QAAAA,cAAgC;AAEpC,SAAS,eAAe,iBAAyC;AACxDA,UAAAA,cAAA;AACd,aAAW,uBAAuB;AACZ,wBAAA;AAExB;AAGa,MAAA,uCAAuB,IAAgB;AAEzCC,QAAAA,UAA2D;AAE/D,SAAS,WAAW,aAAoE;AACnFA,UAAAA,UAAA;AACV,aAAW,mBAAmB;AACZ,oBAAA;AAEpB;;;;;;;"}